openapi: 3.0.0
info:
  title: Shell Card Management APIs
  description: "The Shell Card Management API is REST-based and employs OAUTH 2.0,Basic and ApiKey authentication. \nThe API endpoints accept JSON-encoded request bodies, return JSON-encoded responses and use standard HTTP response codes.     \nAll resources are located in the Shell Card Platform.  The Shell Card Platform is the overall platform that encompasses all the internal Shell systems used to manage resources. \nThe internal workings of the platform are not important when interacting with the API. However, it is worth noting that the platform uses a microservice architecture to communicate with various backend systems and some API calls are processed asynchronously.\nAll endpoints use the `POST` verb for retrieving, updating, creating and deleting resources in the Shell Card Platform. The endpoints that retrieve resources from the Shell Card Platform allow flexible search parameters in the API request body."
  contact:
    name: Shell Technical Support (API)
    url: https://developer.shell.com/support
    email: api@shell.com
  version: '1.0.0'
  x-server-configuration:
    default-environment: SIT
    default-server: Shell
    environments:
    - name: SIT
      servers:
      - name: OAuth Server
        url: https://api-test.shell.com
      - name: Shell
        url: https://api-test.shell.com/test
    - name: Production
      servers:
      - name: OAuth Server
        url: https://api.shell.com
      - name: Shell
        url: https://api.shell.com
servers:
- url: https://api-test.shell.com
  variables: {}
- url: https://api-test.shell.com/test
  variables: {}
- url: https://api.shell.com
  variables: {}
- url: https://api.shell.com
  variables: {}
paths:
  /fleetmanagement/v1/user/loggedinuser:
    post:
      tags:
      - Customer
      summary: loggedinuser
      description: >-
        This API allows querying the user data of the logged in user.</br>

        This API will return the user access details such as payers and/or accounts. </br>

        This API will also validate that logged in user has access to the requested API, on failure it will return HasAPIAccess flag as false in response.</br>
      operationId: LoggedinUser
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Logged in user request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuserRequest'
              - description: Logged in user request body
                example:
                  IncludePayerGroup: false
                  IncludeEIDDetails: false
                  RequestedAPIName: Name of the API
                  PayerId: 123456
                  PayerNumber: GB00123456
            examples:
              Example 1:
                value:
                  IncludePayerGroup: false
                  IncludeEIDDetails: false
                  RequestedAPIName: Name of the API
                  PayerId: 123456
                  PayerNumber: GB00123456
        required: false
      responses:
        '200':
          description: The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LoggedInUserResponse'
                - example:
                    UserName: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
                    DisplayName: 3rdParty test
                    IdMSSOID: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
                    PreferredLanguage: en-GB
                    IsSuperAdmin: false
                    DateFormat: dd/MM/yy
                    TimeFormat: hh:mm tt
                    WeekBegins: 1
                    DisplayWeek: true
                    CSVSeparator: ;
                    DecimalSeparator: 1,234,567.00
                    ReportFormat: csv
                    HasAPIAccess: true
                    Roles:
                    - RoleName: FleetManager
                      IsCustomerAdmin: true
                      IsCustomerUser: false
                      IsShellAdmin: false
                      IsServiceAccount: false
                      IsUserAdmin: true
                    Payers:
                    - IsDefault: false
                      ColcoId: 14
                      ColcoCode: 14
                      ColCoCountryCode: DE
                      PayerGroupId: 123
                      PayerGroup: 'null'
                      PayerId: 854
                      PayerNumber: DE26688504
                      PayerName: TK MobilPlus
                    Accounts:
                    - ColcoId: 14
                      ColcoCode: 14
                      PayerId: 854
                      PayerNumber: DE26688504
                      PayerName: TK MobilPlus
                      AccountId: 435
                      AccountNumber: DE26688504
                      AccountName: TK Sub Account
                    CollectingCompanies:
                    - ColCoId: '14'
                      ColCoCode: '14'
                      ColCoCountryName: DE
                      IssuingCountryNumber: DE
                    EIDAccessDetails:
                    - ColCoId: '14'
                      ColCoCode: 14
                      AccountGroupId: '345'
                    UserClassificationBySystem: S
                    UserClassificationByShell: S
                    PayerCount: 1
                    AccountCount: 1
                    CardCount: 15
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: f20979a8-872f-4653-cf12-89b52f1dc7cb
              examples:
                Example 1:
                  value:
                    UserName: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
                    DisplayName: 3rdParty test
                    IdMSSOID: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
                    PreferredLanguage: en-GB
                    IsSuperAdmin: false
                    DateFormat: dd/MM/yy
                    TimeFormat: hh:mm tt
                    WeekBegins: 1
                    DisplayWeek: true
                    CSVSeparator: ;
                    DecimalSeparator: 1,234,567.00
                    ReportFormat: csv
                    HasAPIAccess: true
                    Roles:
                    - RoleName: FleetManager
                      IsCustomerAdmin: true
                      IsCustomerUser: false
                      IsShellAdmin: false
                      IsServiceAccount: false
                      IsUserAdmin: true
                    Payers:
                    - IsDefault: false
                      ColcoId: 14
                      ColcoCode: 14
                      ColCoCountryCode: DE
                      PayerGroupId: 123
                      PayerGroup: 'null'
                      PayerId: 854
                      PayerNumber: DE26688504
                      PayerName: TK MobilPlus
                    Accounts:
                    - ColcoId: 14
                      ColcoCode: 14
                      PayerId: 854
                      PayerNumber: DE26688504
                      PayerName: TK MobilPlus
                      AccountId: 435
                      AccountNumber: DE26688504
                      AccountName: TK Sub Account
                    CollectingCompanies:
                    - ColCoId: '14'
                      ColCoCode: '14'
                      ColCoCountryName: DE
                      IssuingCountryNumber: DE
                    EIDAccessDetails:
                    - ColCoId: '14'
                      ColCoCode: 14
                      AccountGroupId: '345'
                    UserClassificationBySystem: S
                    UserClassificationByShell: S
                    PayerCount: 1
                    AccountCount: 1
                    CardCount: 15
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: f20979a8-872f-4653-cf12-89b52f1dc7cb
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorUserAccess'
                - example:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/payers:
    post:
      tags:
      - Customer
      summary: payers
      description: "This API allows querying the payer accounts details from the Shell Cards\r\nPlatform. It provides flexible search criteria for searching payer\r\ninformation and supports paging. \r\n\r\nPaging is applicable only when all the\r\npayers passed in the input are from the same ColCo. \r\n\r\nHowever, paging will\r\nbe ignored and the API will return all the matching data by merging the\r\ndata queried from each ColCo when payers passed in the input are from\r\nmultiple ColCos.\r\n"
      operationId: Payers
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Serach payers request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PayerRequest'
              - description: Serach payers request body
                example:
                  Payers:
                  - ColCoId: 14
                    ColCoCode: 14
                    PayerId: 12345
                    PayerNumber: string
                    PayerName: ABC company
                    PayerGroupId: 456
                  ReturnBasicDetailsOnly: false
                  IncludeAddresses: false
                  IncludeBonusParameters: false
                  CurrentPage: 1
                  PageSize: 15
            examples:
              Example 1:
                value:
                  Payers:
                  - ColCoId: 14
                    ColCoCode: 14
                    PayerId: 12345
                    PayerNumber: string
                    PayerName: ABC company
                    PayerGroupId: 456
                  ReturnBasicDetailsOnly: false
                  IncludeAddresses: false
                  IncludeBonusParameters: false
                  CurrentPage: 1
                  PageSize: 15
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PayerResponse'
                - example:
                    RequestId: 2ace3991-5d03-4a68-ac68-ca9119b25101
                    Payers:
                    - ColCoId: 14
                      ColCoCode: 14
                      CountryCode: DE
                      Country: Germany
                      PayerId: 12345
                      PayerNumber: DE000000123
                      PayerFullName: ABC Company
                      PayerShortName: ABC
                      PayerGroupId: 456
                      AmountDue: 1500
                      AmountOverdue: 450
                      AmountNotOverdue: 4546.76
                      OutstandingBalance: 456
                      UnallocatedPayment: 123
                      SOACurrencyCode: EUR
                      SOACurrencySymbol: €
                      SOACreditLimitCurrencyCode: EUR
                      SOACreditLimitCurrencySymbol: €
                      LastPaymentCurrencyCode: EUR
                      LastPaymentCurrencySymbol: €
                      LastPaymentAmount: 5465
                      LastPaymentDate: '20230405'
                      SOALastPaymentAmount: 45443
                      SOALastPaymentDate: '20230805'
                      CurrencyCode: EUR
                      CurrencySymbol: €
                      ColCoCountryCode: DE
                      LocalCurrencyCode: EUR
                      LocalCurrencySymbol: €
                      LocalCurrencyExchangeRate: 1.45
                      LocalCurrencyExchangeRate_SoA: 1.2
                      BillingFrequencyTypeId: 1
                      BillingFrequencyType: weekly
                      BillingRunFrequencyTypeId: 1
                      BillingRunFrequnecy: weekly
                      Day1Run: 0
                      Day2Run: 0
                      Day3Run: 0
                      Day4Run: 0
                      InvoiceDistributionMethods:
                      - IsPrimary: true
                        FrequencyType: weekly
                        DistributionMethod: e-mail
                        OutputType: 1 - PDF
                      OutputType: PDF
                      InvoiceAccountID: 12345
                      InvoiceAccountNumber: '1234567'
                      InvoiceAccountShortName: Test Account
                      BestOfIndicator: false
                      IsInternational: false
                      TotalAccounts: 5
                      TotalActiveAccounts: 4
                      TotalCards: 567
                      TotalActiveCards: 560
                      TotalBlockedCards: 6
                      TotalCancelledCards: 0
                      TotalExpiredCards: 1
                      TotalRenewalPendingCards: 0
                      TotalReplacedCards: 0
                      TotalTemporaryBlockCardsByCustomer: 0
                      TotalTemporaryBlockCardsByShell: 0
                      TotalNewCards: 0
                      TotalFraudCards: 0
                      TotalBlockedAccounts: 0
                      TotalCancelledAccounts: 0
                      PayerTradingName: ABC Company
                      Status: Active
                      BillingLanguage: 1-German
                      LegalEntity: 20-Unlimited Corporation
                      DateEstablished: '19880504'
                      CustomerClassification: 3-10049 Domestic
                      IndustryClass: 4-Growing of sugar cane
                      MarketingSegmentation: 1-National CRT
                      LineOfBusiness: 1-CRT
                      PrintCreditLimit: false
                      CardGroupType: 1-Horizontal only
                      RenewCards: false
                      AllowSelectPIN: false
                      UseFleetPIN: true
                      VATRegNumber: '4534545'
                      VATRegNumber2: '45345545'
                      RegistrationNumber: '453543'
                      RegistrationNumber2: '35435'
                      SalesLedgerBalance: 0
                      Exposure: 0
                      OutstandingDebt: 0
                      AvailableCredit: 0
                      Band: Gold
                      GlobalCustomerReferenceId: '1234'
                      CreditLimit: 3434
                      CreditLimitInCustomerCurrency: 0
                      BillingCurrencyCode: EUR
                      BillingCurrencySymbol: €
                      PaymentMethod: Incoming - Bank Transfer
                      PaymentTerms: 0 days after invoice
                      TemporaryCreditLimitIncrease: 0
                      TemporaryCreditLimitIncreaseInCustomerCurrency: 0
                      TemporaryCreditLimitExpiryDate: '20230504'
                      PayerBankAccount:
                      - AccountNumber: '45346346443'
                        BankName: swiss
                        AccountName: ARIM SERVIS
                        DateEffective: '20200808'
                        DateTerminated: null
                        IBAN: CZ6508000000192000145399
                        CurrencyCode: EUR
                        CurrencySymbol: €
                        CountryISOCode: DE
                        Country: Germany
                        SortCode: '0100'
                        SwiftCode: KOMBCZPPXXX
                        BankType: 1-Test
                      CardDeliveryAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      CorrespondanceAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      BillingAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      HasActiveVolBasedPricing: true
                      HasActiveVolBasedBonus: true
                      HasActiveVolBasedAssociationBonus: true
                      FinanceCurrency:
                        CurrencyCode: EUR
                        CurrencySymbol: €
                        Invoice_ExchangeRate: 1
                        CreditLimit_ExchangeRate: 1
                      TollsCustomerId: '2332'
                      TollsColcoCountryTypeId: '33'
                      Contracts:
                      - PartnerId: '335'
                        PartnerName: Test
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
              examples:
                Example 1:
                  value:
                    RequestId: 2ace3991-5d03-4a68-ac68-ca9119b25101
                    Payers:
                    - ColCoId: 14
                      ColCoCode: 14
                      CountryCode: DE
                      Country: Germany
                      PayerId: 12345
                      PayerNumber: DE000000123
                      PayerFullName: ABC Company
                      PayerShortName: ABC
                      PayerGroupId: 456
                      AmountDue: 1500
                      AmountOverdue: 450
                      AmountNotOverdue: 4546.76
                      OutstandingBalance: 456
                      UnallocatedPayment: 123
                      SOACurrencyCode: EUR
                      SOACurrencySymbol: €
                      SOACreditLimitCurrencyCode: EUR
                      SOACreditLimitCurrencySymbol: €
                      LastPaymentCurrencyCode: EUR
                      LastPaymentCurrencySymbol: €
                      LastPaymentAmount: 5465
                      LastPaymentDate: '20230405'
                      SOALastPaymentAmount: 45443
                      SOALastPaymentDate: '20230805'
                      CurrencyCode: EUR
                      CurrencySymbol: €
                      ColCoCountryCode: DE
                      LocalCurrencyCode: EUR
                      LocalCurrencySymbol: €
                      LocalCurrencyExchangeRate: 1.45
                      LocalCurrencyExchangeRate_SoA: 1.2
                      BillingFrequencyTypeId: 1
                      BillingFrequencyType: weekly
                      BillingRunFrequencyTypeId: 1
                      BillingRunFrequnecy: weekly
                      Day1Run: 0
                      Day2Run: 0
                      Day3Run: 0
                      Day4Run: 0
                      InvoiceDistributionMethods:
                      - IsPrimary: true
                        FrequencyType: weekly
                        DistributionMethod: e-mail
                        OutputType: 1 - PDF
                      OutputType: PDF
                      InvoiceAccountID: 12345
                      InvoiceAccountNumber: '1234567'
                      InvoiceAccountShortName: Test Account
                      BestOfIndicator: false
                      IsInternational: false
                      TotalAccounts: 5
                      TotalActiveAccounts: 4
                      TotalCards: 567
                      TotalActiveCards: 560
                      TotalBlockedCards: 6
                      TotalCancelledCards: 0
                      TotalExpiredCards: 1
                      TotalRenewalPendingCards: 0
                      TotalReplacedCards: 0
                      TotalTemporaryBlockCardsByCustomer: 0
                      TotalTemporaryBlockCardsByShell: 0
                      TotalNewCards: 0
                      TotalFraudCards: 0
                      TotalBlockedAccounts: 0
                      TotalCancelledAccounts: 0
                      PayerTradingName: ABC Company
                      Status: Active
                      BillingLanguage: 1-German
                      LegalEntity: 20-Unlimited Corporation
                      DateEstablished: '19880504'
                      CustomerClassification: 3-10049 Domestic
                      IndustryClass: 4-Growing of sugar cane
                      MarketingSegmentation: 1-National CRT
                      LineOfBusiness: 1-CRT
                      PrintCreditLimit: false
                      CardGroupType: 1-Horizontal only
                      RenewCards: false
                      AllowSelectPIN: false
                      UseFleetPIN: true
                      VATRegNumber: '4534545'
                      VATRegNumber2: '45345545'
                      RegistrationNumber: '453543'
                      RegistrationNumber2: '35435'
                      SalesLedgerBalance: 0
                      Exposure: 0
                      OutstandingDebt: 0
                      AvailableCredit: 0
                      Band: Gold
                      GlobalCustomerReferenceId: '1234'
                      CreditLimit: 3434
                      CreditLimitInCustomerCurrency: 0
                      BillingCurrencyCode: EUR
                      BillingCurrencySymbol: €
                      PaymentMethod: Incoming - Bank Transfer
                      PaymentTerms: 0 days after invoice
                      TemporaryCreditLimitIncrease: 0
                      TemporaryCreditLimitIncreaseInCustomerCurrency: 0
                      TemporaryCreditLimitExpiryDate: '20230504'
                      PayerBankAccount:
                      - AccountNumber: '45346346443'
                        BankName: swiss
                        AccountName: ARIM SERVIS
                        DateEffective: '20200808'
                        DateTerminated: null
                        IBAN: CZ6508000000192000145399
                        CurrencyCode: EUR
                        CurrencySymbol: €
                        CountryISOCode: DE
                        Country: Germany
                        SortCode: '0100'
                        SwiftCode: KOMBCZPPXXX
                        BankType: 1-Test
                      CardDeliveryAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      CorrespondanceAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      BillingAddress:
                        AddressId: 1
                        AddressLine1: test street
                        AddressLine2: Address line2
                        AddressLine3: AddressLine3
                        ZipCode: 667 78
                        City: LUMPUR
                        RegionId: 1234
                        CountryISOCode: CZ
                        Country: Germany
                        Telephone: '3245872364823'
                        EmailAddress: testmail@gmail.com
                        Fax: '3245872364823'
                      HasActiveVolBasedPricing: true
                      HasActiveVolBasedBonus: true
                      HasActiveVolBasedAssociationBonus: true
                      FinanceCurrency:
                        CurrencyCode: EUR
                        CurrencySymbol: €
                        Invoice_ExchangeRate: 1
                        CreditLimit_ExchangeRate: 1
                      TollsCustomerId: '2332'
                      TollsColcoCountryTypeId: '33'
                      Contracts:
                      - PartnerId: '335'
                        PartnerName: Test
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/customer:
    post:
      tags:
      - Customer
      summary: customer
      description: "This API allows querying the card delivery addresses of a given account from the Shell Cards Platform. \r\nOnly active delivery addresses will be returned.\r\n"
      operationId: Customer
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Customerdetails request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CustomerDetailRequest'
              - description: Customerdetails request body
                example:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 12345
                  PayerNumber: GB000000123
                  AccountId: 0
                  AccountNumber: GB000000124
            examples:
              Example 1:
                value:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 12345
                  PayerNumber: GB000000123
                  AccountId: 0
                  AccountNumber: GB000000124
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CustomerDetailResponse'
                - example:
                    AccountId: 1227
                    AccountName: 5.11.3 DE
                    AccountNumber: DE00001067
                    AccountShortName: 5.11.3 DE
                    AccountTradingName: 5.11.3 DE
                    AllowFleetIdInput: true
                    Band: 2 - Gold
                    BillingAddress:
                      AddressId: 1
                      AddressLine1: test street
                      AddressLine2: Address line2
                      AddressLine3: AddressLine3
                      ZipCode: 667 78
                      City: LUMPUR
                      RegionId: 1234
                      CountryISOCode: CZ
                      Country: Germany
                      Telephone: '3245872364823'
                      EmailAddress: testmail@gmail.com
                      Fax: '3245872364823'
                    CardGroupPosition: string
                    CorrespondenceAddress:
                      AddressId: 1
                      AddressLine1: test street
                      AddressLine2: Address line2
                      AddressLine3: AddressLine3
                      ZipCode: 667 78
                      City: LUMPUR
                      RegionId: 1234
                      CountryISOCode: CZ
                      Country: Germany
                      Telephone: '3245872364823'
                      EmailAddress: testmail@gmail.com
                      Fax: '3245872364823'
                    DeliveryAddresses:
                    - AddressId: 1
                      AddressLine1: AddressLine1
                      AddressLine2: AddressLine2
                      AddressLine3: AddressLine3
                      City: germany
                      CompanyName: 5.11.3 DE
                      ContactForeName: 5.11.13 DE
                      ContactLastName: SAM
                      ContactMiddleName: SAM
                      ContactTitle: Mr
                      Country: Germany
                      CountryId: 9
                      CountryISOCode: DE
                      Fax: '657875'
                      Region: Germany
                      RegionId: 133
                      Telephone: '78787786868'
                      ZipCode: string
                      AddressType: 1
                    FleetPin: true
                    FullName: 5.11.3 DE
                    InvoiceCustomerId: 1227
                    InvoiceCustomerShortName: 5.11.3 DE
                    IsInvoicePoint: true
                    MarketingSegmentation: 4 - National/International Fleet/IKA
                    VATNumber: PH6578900900
                    PayerId: 1227
                    PayerName: 5.11.3 DE
                    PayerNumber: DE00001067
                    SelfSelectedPin: true
                    Status: 1 - Active
                    DefaultPINAdviceType: 1
                    PINAdviceTypes:
                    - PINAdviceTypeID: 1
                      IsCardOrderOption: true
                      IsPINReminderOption: true
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 908358e3-03ca-4aef-93b2-37586b859171
                    PINChangeAllowedByCardholder: true
                    PINChangeAllowedFromFleetPIN: true
              examples:
                Example 1:
                  value:
                    AccountId: 1227
                    AccountName: 5.11.3 DE
                    AccountNumber: DE00001067
                    AccountShortName: 5.11.3 DE
                    AccountTradingName: 5.11.3 DE
                    AllowFleetIdInput: true
                    Band: 2 - Gold
                    BillingAddress:
                      AddressId: 1
                      AddressLine1: test street
                      AddressLine2: Address line2
                      AddressLine3: AddressLine3
                      ZipCode: 667 78
                      City: LUMPUR
                      RegionId: 1234
                      CountryISOCode: CZ
                      Country: Germany
                      Telephone: '3245872364823'
                      EmailAddress: testmail@gmail.com
                      Fax: '3245872364823'
                    CardGroupPosition: string
                    CorrespondenceAddress:
                      AddressId: 1
                      AddressLine1: test street
                      AddressLine2: Address line2
                      AddressLine3: AddressLine3
                      ZipCode: 667 78
                      City: LUMPUR
                      RegionId: 1234
                      CountryISOCode: CZ
                      Country: Germany
                      Telephone: '3245872364823'
                      EmailAddress: testmail@gmail.com
                      Fax: '3245872364823'
                    DeliveryAddresses:
                    - AddressId: 1
                      AddressLine1: AddressLine1
                      AddressLine2: AddressLine2
                      AddressLine3: AddressLine3
                      City: germany
                      CompanyName: 5.11.3 DE
                      ContactForeName: 5.11.13 DE
                      ContactLastName: SAM
                      ContactMiddleName: SAM
                      ContactTitle: Mr
                      Country: Germany
                      CountryId: 9
                      CountryISOCode: DE
                      Fax: '657875'
                      Region: Germany
                      RegionId: 133
                      Telephone: '78787786868'
                      ZipCode: string
                      AddressType: 1
                    FleetPin: true
                    FullName: 5.11.3 DE
                    InvoiceCustomerId: 1227
                    InvoiceCustomerShortName: 5.11.3 DE
                    IsInvoicePoint: true
                    MarketingSegmentation: 4 - National/International Fleet/IKA
                    VATNumber: PH6578900900
                    PayerId: 1227
                    PayerName: 5.11.3 DE
                    PayerNumber: DE00001067
                    SelfSelectedPin: true
                    Status: 1 - Active
                    DefaultPINAdviceType: 1
                    PINAdviceTypes:
                    - PINAdviceTypeID: 1
                      IsCardOrderOption: true
                      IsPINReminderOption: true
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 908358e3-03ca-4aef-93b2-37586b859171
                    PINChangeAllowedByCardholder: true
                    PINChangeAllowedFromFleetPIN: true
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorUserAccess'
                - example:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/accounts:
    post:
      tags:
      - Customer
      summary: accounts
      description: "This API allows querying the customer account details from the Shell Cards Platform. \r\nIt provides a flexible search criterion and supports paging\"."
      operationId: Accounts
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccountRequest'
              - example:
                  Status: ALL
                  IncludeCardSummary: true
                  PayerId: 9
                  PayerNumber: GB00000111
                  PageSize: 10
                  RequestId: b9eb91b6-65d4-4196-f910-6b0846875e70
                  ColCoCode: 14
                  ColCoCountryCode: '14'
                  CurrentPage: 1
                  InvoicePointsOnly: false
                  ColCoId: 14
                  ReturnTollsCustomerId: true
                  Accounts:
                  - AccountId: 3453
                    AccountNumber: GB000000124
                  AccountName: test
                  StatusList:
                  - ACTIVE
            examples:
              Example 1:
                value:
                  Status: ALL
                  IncludeCardSummary: true
                  PayerId: 9
                  PayerNumber: GB00000111
                  PageSize: 10
                  RequestId: b9eb91b6-65d4-4196-f910-6b0846875e70
                  ColCoCode: 14
                  ColCoCountryCode: '14'
                  CurrentPage: 1
                  InvoicePointsOnly: false
                  ColCoId: 14
                  ReturnTollsCustomerId: true
                  Accounts:
                  - AccountId: 3453
                    AccountNumber: GB000000124
                  AccountName: test
                  StatusList:
                  - ACTIVE
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountResponse'
                - example:
                    Accounts:
                    - AccountFullName: CI TEST_Update20 New updated
                      AccountId: 123
                      AccountNumber: DE00000008
                      AccountShortName: CI TEST_Update20
                      BestOfIndicator: true
                      BillingFrequencyType: Monthly - 3rd
                      BillingFrequencyTypeId: 1
                      BillingRunFrequency: Weekly - Monday
                      BillingRunFrequencyTypeId: 1
                      ColCoCountryCode: '14'
                      CurrencyCode: '14'
                      CurrencySymbol: EUR
                      Day1Run: 1
                      Day2Run: 31
                      Day3Run: 2
                      Day4Run: 3
                      FrequencyType: Daily
                      GrossAmount: 1232
                      InternationalPOSLanguageCode: deu
                      InternationalPOSLanguageID: 1
                      InvoiceAccountID: 9
                      InvoiceAccountNumber: DE00000008
                      InvoiceAccountShortName: BCI TEST_Update20
                      InvoiceDistributionMethods:
                      - IsPrimary: true
                        FrequencyType: weekly
                        DistributionMethod: e-mail
                        OutputType: 1 - PDF
                      IsInternational: true
                      IsInvoicePoint: true
                      LastModifiedDate: 20240131 11:12:34
                      LocalCurrencyCode: EUR
                      LocalCurrencySymbol: €
                      LocalPOSLanguageCode: deu
                      LocalPOSLanguageID: 1
                      NetAmount: 3434
                      OutstandingBalance: 4354
                      PaidAmount: 4343
                      Status: Blocked
                      StatusReason: 3 - Customer Request
                      TotalActiveCardGroups: 198
                      TotalActiveCards: 544
                      TotalBlockedCards: 121
                      TotalCancelledCards: 168
                      TotalCards: 10966
                      TotalExpiredCards: 1000
                      TotalFraudCards: 8
                      TotalNewCards: 2
                      TotalRenewalPendingCards: 0
                      TotalReplacedCards: 20
                      TotalTemporaryBlockCardsByCustomer: 9
                      TotalTemporaryBlockCardsByShell: 2
                      VATAmount: 2322
                      IsPartnerCard: 1
                      TollsCustomerId: '332'
                      TollsColcoCountryTypeId: '14'
                      Contracts:
                      - PartnerId: '335'
                        PartnerName: Test
                      IsConsortiumMember: string
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: e5165f29-7e6f-45b4-96fe-f303df9ca180
              examples:
                Example 1:
                  value:
                    Accounts:
                    - AccountFullName: CI TEST_Update20 New updated
                      AccountId: 123
                      AccountNumber: DE00000008
                      AccountShortName: CI TEST_Update20
                      BestOfIndicator: true
                      BillingFrequencyType: Monthly - 3rd
                      BillingFrequencyTypeId: 1
                      BillingRunFrequency: Weekly - Monday
                      BillingRunFrequencyTypeId: 1
                      ColCoCountryCode: '14'
                      CurrencyCode: '14'
                      CurrencySymbol: EUR
                      Day1Run: 1
                      Day2Run: 31
                      Day3Run: 2
                      Day4Run: 3
                      FrequencyType: Daily
                      GrossAmount: 1232
                      InternationalPOSLanguageCode: deu
                      InternationalPOSLanguageID: 1
                      InvoiceAccountID: 9
                      InvoiceAccountNumber: DE00000008
                      InvoiceAccountShortName: BCI TEST_Update20
                      InvoiceDistributionMethods:
                      - IsPrimary: true
                        FrequencyType: weekly
                        DistributionMethod: e-mail
                        OutputType: 1 - PDF
                      IsInternational: true
                      IsInvoicePoint: true
                      LastModifiedDate: 20240131 11:12:34
                      LocalCurrencyCode: EUR
                      LocalCurrencySymbol: €
                      LocalPOSLanguageCode: deu
                      LocalPOSLanguageID: 1
                      NetAmount: 3434
                      OutstandingBalance: 4354
                      PaidAmount: 4343
                      Status: Blocked
                      StatusReason: 3 - Customer Request
                      TotalActiveCardGroups: 198
                      TotalActiveCards: 544
                      TotalBlockedCards: 121
                      TotalCancelledCards: 168
                      TotalCards: 10966
                      TotalExpiredCards: 1000
                      TotalFraudCards: 8
                      TotalNewCards: 2
                      TotalRenewalPendingCards: 0
                      TotalReplacedCards: 20
                      TotalTemporaryBlockCardsByCustomer: 9
                      TotalTemporaryBlockCardsByShell: 2
                      VATAmount: 2322
                      IsPartnerCard: 1
                      TollsCustomerId: '332'
                      TollsColcoCountryTypeId: '14'
                      Contracts:
                      - PartnerId: '335'
                        PartnerName: Test
                      IsConsortiumMember: string
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: e5165f29-7e6f-45b4-96fe-f303df9ca180
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v2/customer/cardtype:
    post:
      tags:
      - Customer
      summary: cardType
      description: This operation allows querying card types that are associated to the given account and are allowed to be shown to users.
      operationId: CardType
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Get CardType Request Body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardTypeRequest'
              - description: Get CardType Request Body
                example:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 2343
                  PayerNumber: GB000000124
                  AccountId: 343
                  AccountNumber: GB000000124
                  IncludeUsageRestrictions: true
                  IncludePurchaseCategories: true
            examples:
              Example 1:
                value:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 2343
                  PayerNumber: GB000000124
                  AccountId: 343
                  AccountNumber: GB000000124
                  IncludeUsageRestrictions: true
                  IncludePurchaseCategories: true
        required: false
      responses:
        '200':
          description: The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardTypeResponse'
                - example:
                    CustomerCardTypes:
                    - CanHavePIN: true
                      CardTypeId: 228
                      CardTypeName: DE-Kleinfhzg. International Multi
                      ColCoCurrencyCode: EUR
                      CustomerCardTypeId: 1576
                      DayTimeRestrictions:
                        Level: OU= 24537
                        Monday: true
                        Tuesday: true
                        Wednesday: true
                        Thursday: true
                        Friday: true
                        Saturday: true
                        Sunday: true
                        TimeFrom: 07:56:00
                        TimeTo: 08:19:09
                      DefaultPurchaseCategoryId: 127
                      EmbossAccountName: 5.11.3 DE
                      ExpiryPeriod: 48
                      IsCRT: true
                      IsFleet: true
                      IsInternational: true
                      IsNational: true
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: true
                      IsVirtual: true
                      IsVisibleToCustomers: true
                      IsActive: true
                      IsCardAvailableForDownload: true
                      IsCardVisibleToCustomers: true
                      PANLength: 19
                      PurchaseCategories:
                      - Id: 123
                        Code: '1'
                        Name: FuelSave only
                        IsVisible: true
                        ProductGroups: 19,1
                      TokenTypeId: 160
                      TokenTypeName: DE FLT INT MUL - CHIP
                      UsageRestrictions:
                        Level: OU
                        DailySpendLimit: 120
                        WeeklySpendLimit: 56.07
                        MonthlySpendLimit: 0
                        AnnualSpendLimit: 0
                        LifeTimeSpendLimit: 0
                        DailyVolumeLimit: 0
                        WeeklyVolumeLimit: 0
                        MonthlyVolumeLimit: 0
                        AnnualVolumeLimit: 0
                        LifeTimeVolumeLimit: 0
                        TransactionSpendLimit: 0
                        TransactionVolumeLimit: 0
                        DailyTransactionCount: 100
                        WeeklyTransactionCount: 100
                        MonthlyTransactionCount: 100
                        AnnualTransactionCount: 100
                        LifeTimeTransactionCount: 100
                        IsVelocityCeiling: true
                      EMVContactless: true
                      RFID: true
                      PINChangeSupported: true
                      RequirePIN: true
                      OfflinePIN: true
                      IsDefault: true
                      ApplicationsToShowNPIITokens: true
                      MediumTypeID: 1
                      MediumType: Fuel Card
                      ColCoCurrencySymbol: £
                    Error:
                      Code: string
                      Description: string
                    RequestId: a0a7ceb0-5b32-4ec8-88e1-ad868967e43f
              examples:
                Example 1:
                  value:
                    CustomerCardTypes:
                    - CanHavePIN: true
                      CardTypeId: 228
                      CardTypeName: DE-Kleinfhzg. International Multi
                      ColCoCurrencyCode: EUR
                      CustomerCardTypeId: 1576
                      DayTimeRestrictions:
                        Level: OU= 24537
                        Monday: true
                        Tuesday: true
                        Wednesday: true
                        Thursday: true
                        Friday: true
                        Saturday: true
                        Sunday: true
                        TimeFrom: 07:56:00
                        TimeTo: 08:19:09
                      DefaultPurchaseCategoryId: 127
                      EmbossAccountName: 5.11.3 DE
                      ExpiryPeriod: 48
                      IsCRT: true
                      IsFleet: true
                      IsInternational: true
                      IsNational: true
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: true
                      IsVirtual: true
                      IsVisibleToCustomers: true
                      IsActive: true
                      IsCardAvailableForDownload: true
                      IsCardVisibleToCustomers: true
                      PANLength: 19
                      PurchaseCategories:
                      - Id: 123
                        Code: '1'
                        Name: FuelSave only
                        IsVisible: true
                        ProductGroups: 19,1
                      TokenTypeId: 160
                      TokenTypeName: DE FLT INT MUL - CHIP
                      UsageRestrictions:
                        Level: OU
                        DailySpendLimit: 120
                        WeeklySpendLimit: 56.07
                        MonthlySpendLimit: 0
                        AnnualSpendLimit: 0
                        LifeTimeSpendLimit: 0
                        DailyVolumeLimit: 0
                        WeeklyVolumeLimit: 0
                        MonthlyVolumeLimit: 0
                        AnnualVolumeLimit: 0
                        LifeTimeVolumeLimit: 0
                        TransactionSpendLimit: 0
                        TransactionVolumeLimit: 0
                        DailyTransactionCount: 100
                        WeeklyTransactionCount: 100
                        MonthlyTransactionCount: 100
                        AnnualTransactionCount: 100
                        LifeTimeTransactionCount: 100
                        IsVelocityCeiling: true
                      EMVContactless: true
                      RFID: true
                      PINChangeSupported: true
                      RequirePIN: true
                      OfflinePIN: true
                      IsDefault: true
                      ApplicationsToShowNPIITokens: true
                      MediumTypeID: 1
                      MediumType: Fuel Card
                      ColCoCurrencySymbol: £
                    Error:
                      Code: string
                      Description: string
                    RequestId: a0a7ceb0-5b32-4ec8-88e1-ad868967e43f
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/cardgroups:
    post:
      tags:
      - Customer
      summary: cardgroups
      description: >
        This operation allows querying the card group details . It provides flexible search criteria and supports paging.\



        When the card group type is configured as ‘Vertical’ in cards platform, this operation will return all card groups from the given account or if no account is passed in the input, then will return card groups from all the accounts under the payer.



        When the card group type is configured as ‘Horizontal’ in cards platform, this API will return all card groups configured directly under the payer.



        Accounts with cancelled status will not be considered for cardgroups search for the configured (E.g., SFH) set of client apps.
      operationId: CardGroups
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardGroupRequest'
              - description: Request Body
                example:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 123
                  PayerNumber: GB00123456
                  Account:
                  - AccountId: 3453
                    AccountNumber: GB000000124
                  CardGroupName: test
                  Status: ALL
                  CurrentPage: 0
                  PageSize: 1
            examples:
              Example 1:
                value:
                  ColCoId: 14
                  ColCoCode: 14
                  PayerId: 123
                  PayerNumber: GB00123456
                  Account:
                  - AccountId: 3453
                    AccountNumber: GB000000124
                  CardGroupName: test
                  Status: ALL
                  CurrentPage: 0
                  PageSize: 1
        required: false
      responses:
        '200':
          description: The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardGroupResponse'
                - example:
                    CardGroups:
                    - AccountId: 1229
                      AccountNumber: CZ00000929
                      AccountShortName: Dominica South1
                      ActiveCards: 0
                      BlockedCards: 1
                      CancelledCards: 0
                      CardDeliveryPoint: true
                      CardGroupId: 1234
                      CardGroupName: 1234T
                      CardTypeCode: '0123'
                      CardTypeId: 123
                      CardTypeName: test
                      ExpiredCards: 0
                      ExpiryDate: '20231231'
                      PrintOnCard: true
                      RenewalPendingCards: 5
                      ReplacedCards: 0
                      Status: TERMINATED
                      TemporaryBlockByCustomer: 0
                      TemporaryBlockByShell: 0
                      TerminatedDate: '20210712'
                      TotalCards: 10
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 3cc14d61-8f2a-4d88-cc3c-c53110646a85
              examples:
                Example 1:
                  value:
                    CardGroups:
                    - AccountId: 1229
                      AccountNumber: CZ00000929
                      AccountShortName: Dominica South1
                      ActiveCards: 0
                      BlockedCards: 1
                      CancelledCards: 0
                      CardDeliveryPoint: true
                      CardGroupId: 1234
                      CardGroupName: 1234T
                      CardTypeCode: '0123'
                      CardTypeId: 123
                      CardTypeName: test
                      ExpiredCards: 0
                      ExpiryDate: '20231231'
                      PrintOnCard: true
                      RenewalPendingCards: 5
                      ReplacedCards: 0
                      Status: TERMINATED
                      TemporaryBlockByCustomer: 0
                      TemporaryBlockByShell: 0
                      TerminatedDate: '20210712'
                      TotalCards: 10
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 3cc14d61-8f2a-4d88-cc3c-c53110646a85
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/auditreport:
    post:
      tags:
      - Customer
      summary: auditreport
      description: "This operation allows users to fetch audit data of account or card operations performed by users of a given customer\r\nThe audit data includes details of below API operations\r\n\r\n* Order Card \r\n* Create Card Group \r\n* PIN reminder \r\n* Move Cards \r\n* Update Card Status \r\n* Update Card Group \r\n* Auto renew \r\n* Bulk card order \r\n* Bulk card block \r\n* Bulk Card Order (Multi Account) \r\n* BCOSummary \r\n* BCOMultiAccountSummary \r\n* BCBSummary \r\n* Mobile Payment Registration \r\n* Fund Transfer (Scheduled & Realtime) \r\n* Delivery Address Update."
      operationId: AuditReport
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AuditRequest'
              - description: request body
                example:
                  Status: All
                  PayerNumber: BE00000113
                  PayerId: 123
                  AccountNumber: BE00000113
                  ColCoCode: 9
                  ColCoId: 9
                  Accounts:
                    AccountId: 3453
                    AccountNumber: GB000000124
                  PageSize: 500
                  RequestedOperation:
                  - OrderCard
                  SortOrder: '1'
                  SearchText: orde
                  CurrentPage: 1
                  FromDate: '20240101'
                  ToDate: '20240202'
            examples:
              Example 1:
                value:
                  Status: All
                  PayerNumber: BE00000113
                  PayerId: 123
                  AccountNumber: BE00000113
                  ColCoCode: 9
                  ColCoId: 9
                  Accounts:
                    AccountId: 3453
                    AccountNumber: GB000000124
                  PageSize: 500
                  RequestedOperation:
                  - OrderCard
                  SortOrder: '1'
                  SearchText: orde
                  CurrentPage: 1
                  FromDate: '20240101'
                  ToDate: '20240202'
        required: false
      responses:
        '200':
          description: The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AuditResponse'
                - example:
                    Audits:
                    - AccountId: 123
                      AccountNumber: BE00000113
                      AdditionalInformation1: '922'
                      AdditionalInformation2: '2016'
                      AdditionalInformation3: MERCEDES GLE KLASSE SEGM. L
                      AdditionalInformation4: 408135/3
                      AdditionalInformation5: API TEST CUSTOMER 113
                      AdditionalInformation6: 408135/3
                      AdditionalInformation7: 'null'
                      AdditionalInformation8: 'null'
                      AdditionalInformation9: 'null'
                      CardGroupId: 123
                      CardGroupName: test
                      CardId: 10594
                      ColCoCode: 9
                      ColCoId: 9
                      ErrorCode: '0000'
                      ErrorString: 'null'
                      GlobalRequestID: 6f1473ea-7f68-4ccb-acee-4b5b997aad5a
                      PAN: '7002097550439850717'
                      PayerId: 123
                      PayerNumber: BE00000113
                      ProcessedOn: 20240201 14:30:26
                      RequestedBy: EWyIv8LpjgW3LlKDDUo0VZMN6JKpqRc
                      RequestedOperation: OrderCard
                      RequestReference: 519876
                      RequestType: OrderCard
                      Status: Success
                      SubmittedOn: 20240201 14:29:16
                      SubRequestReference: 720061
                      UserDisplayName: Supriya-ThridPartyAgent
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 14915cff-5d37-4ee9-cb32-bd77b9d271cf
              examples:
                Example 1:
                  value:
                    Audits:
                    - AccountId: 123
                      AccountNumber: BE00000113
                      AdditionalInformation1: '922'
                      AdditionalInformation2: '2016'
                      AdditionalInformation3: MERCEDES GLE KLASSE SEGM. L
                      AdditionalInformation4: 408135/3
                      AdditionalInformation5: API TEST CUSTOMER 113
                      AdditionalInformation6: 408135/3
                      AdditionalInformation7: 'null'
                      AdditionalInformation8: 'null'
                      AdditionalInformation9: 'null'
                      CardGroupId: 123
                      CardGroupName: test
                      CardId: 10594
                      ColCoCode: 9
                      ColCoId: 9
                      ErrorCode: '0000'
                      ErrorString: 'null'
                      GlobalRequestID: 6f1473ea-7f68-4ccb-acee-4b5b997aad5a
                      PAN: '7002097550439850717'
                      PayerId: 123
                      PayerNumber: BE00000113
                      ProcessedOn: 20240201 14:30:26
                      RequestedBy: EWyIv8LpjgW3LlKDDUo0VZMN6JKpqRc
                      RequestedOperation: OrderCard
                      RequestReference: 519876
                      RequestType: OrderCard
                      Status: Success
                      SubmittedOn: 20240201 14:29:16
                      SubRequestReference: 720061
                      UserDisplayName: Supriya-ThridPartyAgent
                    CurrentPage: 1
                    RowCount: 1
                    TotalPages: 1
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 14915cff-5d37-4ee9-cb32-bd77b9d271cf
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/createcardgroup:
    post:
      tags:
      - Customer
      summary: createcardgroup
      description: "This API allows creating a new Card Group in the Shell Cards Platform. It will\r\nalso allow moving of cards (up to 500 cards) into the newly created\r\ncard-group. \r\n\r\n### Move Card requests are queued after passing the below validations \r\n\r\n* Given PAN matches with only one card. \r\n* Card is allowed to be moved to the Target Card Group and/or\r\n* Target account requested. \r\n* There is no pending Move Card request for the same card in the queue which is submitted on the same date\r\n  and is yet to be processed or has been processed\r\nsuccessfully\r\n"
      operationId: CreateCardGroup
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: CreateCardGroup request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateCardGroupRequest'
              - description: CreateCardGroup request body
                example:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 854
                  AccountNumber: PH50000844
                  PrintOnCard: true
                  CardGroupName: GROUP1
                  Cards:
                  - AccountId: 123
                    AccountNumber: ACC123
                    CardId: 123
                    PAN: ABC12345672
            examples:
              Example 1:
                value:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 854
                  AccountNumber: PH50000844
                  PrintOnCard: true
                  CardGroupName: GROUP1
                  Cards:
                  - AccountId: 123
                    AccountNumber: ACC123
                    CardId: 123
                    PAN: ABC12345672
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateCardGroupResponse'
                - example:
                    MainReference: 56789
                    NewCardGroupReference: 5672
                    SuccessfulRequests:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      Reference: 58764
                    ErrorCards:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      ErrorCode: '000'
                      ErrorDescription: Success
                    Error:
                      Description: Success
                      Code: '0000'
              examples:
                Example 1:
                  value:
                    MainReference: 56789
                    NewCardGroupReference: 5672
                    SuccessfulRequests:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      Reference: 58764
                    ErrorCards:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      ErrorCode: '000'
                      ErrorDescription: Success
                    Error:
                      Description: Success
                      Code: '0000'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/customer/updatecardgroup:
    post:
      tags:
      - Customer
      summary: updatecardgroup
      description: "This API allows updating or removing a Card Group in the Shell Cards Platform.\r\n\r\nIt also allows moving of cards out of a card group or from one card group to another existing card group.\r\n\r\nThe request for updating or removing of the card group, creationg of a new card group (where-applicable) and moving of card into another card group will be queued at Microservices after passing the basic\r\nvalidations. \r\n"
      operationId: UpdateCardGroup
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: request body of customer card group
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateCardGroupRequest'
              - description: request body of customer card group
                example:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 12356
                  AccountNumber: GB000000124
                  CardGroupId: 123
                  CardGroupName: GROUP1
                  PrintOnCard: true
                  CardTypeId: 123
                  TerminateCardGroup: true
                  MoveCards: true
                  TargetAccountId: 23456
                  TargetAccountNumber: GB000000124
                  TargetNewCardGroupName: CGA GROUP1
                  TargetCardGroupId: 3456
            examples:
              Example 1:
                value:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 12356
                  AccountNumber: GB000000124
                  CardGroupId: 123
                  CardGroupName: GROUP1
                  PrintOnCard: true
                  CardTypeId: 123
                  TerminateCardGroup: true
                  MoveCards: true
                  TargetAccountId: 23456
                  TargetAccountNumber: GB000000124
                  TargetNewCardGroupName: CGA GROUP1
                  TargetCardGroupId: 3456
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateCardGroupResponse'
                - example:
                    MainReference: 56789
                    UpdateCardGroupReference: 89
                    NewCardGroupReference: 78
                    MoveCardReferences:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      Reference: 58764
                    Error:
                      Description: Success
                      Code: '0000'
                    Warnings:
                    - Type: System Outage
                      Message: System is down for upgradation.
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
              examples:
                Example 1:
                  value:
                    MainReference: 56789
                    UpdateCardGroupReference: 89
                    NewCardGroupReference: 78
                    MoveCardReferences:
                    - CardId: 125
                      PAN: '7002861007636000020'
                      Reference: 58764
                    Error:
                      Description: Success
                      Code: '0000'
                    Warnings:
                    - Type: System Outage
                      Message: System is down for upgradation.
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v2/restriction/searchcard:
    post:
      tags:
      - Restriction
      summary: SearchCardRestriction
      description: >+
        This API will allows querying card details including the day/time and product restrictions.

        #### Supported operations

          * Search by list of cards or bundle

          * Include card bundle details (optional)

      operationId: SearchCardRestriction
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Restriction search card request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCardRestrictionReq'
              - description: Restriction search card request body
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SearchCardRestrictionRes'
                - example:
                    Cards:
                    - BundleId: null
                      Restrictions:
                        DayTimeRestrictions:
                          Friday: false
                          Monday: false
                          Saturday: true
                          Sunday: true
                          Thursday: true
                          TimeFrom: 02:00:00
                          TimeTo: 19:00:00
                          Tuesday: false
                          Wednesday: false
                        LocationRestrictions: null
                        ProductRestrictions:
                          FuelSetId: 0
                          FuelSetName: null
                          NonFuelSets: null
                          ProductGroups:
                          - IsDefault: true
                            IsFuelType: true
                            Name: Electric
                            ProductGroupId: P100
                            Products:
                            - Description: Electric Charge
                              GlobalProductCode: '018'
                            - Description: Electric Charge - Time
                              GlobalProductCode: '087'
                            - Description: Electric Charge - Home
                              GlobalProductCode: '088'
                            - Description: DC Rapid eCharge
                              GlobalProductCode: '486'
                            - Description: eCharge Connection Fee
                              GlobalProductCode: '489'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: true
                            Name: Standard Diesel
                            ProductGroupId: P105
                            Products:
                            - Description: Diesel AGO
                              GlobalProductCode: '030'
                            - Description: GTL
                              GlobalProductCode: '031'
                            - Description: Fuel Economy Diesel (AGO Low Sulphur)
                              GlobalProductCode: '032'
                            - Description: Two Stroke
                              GlobalProductCode: '035'
                            - Description: HVO-100
                              GlobalProductCode: '036'
                            - Description: Industrial GasOil
                              GlobalProductCode: '037'
                            - Description: AdBlue Bulk
                              GlobalProductCode: '038'
                            - Description: AdBlue Packed
                              GlobalProductCode: '039'
                            - Description: HVO Blended
                              GlobalProductCode: '505'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: true
                            Name: Standard Petrol
                            ProductGroupId: P106
                            Products:
                            - Description: Unspecified Unleaded
                              GlobalProductCode: '020'
                            - Description: Unleaded - High octane
                              GlobalProductCode: '021'
                            - Description: Unleaded - Medium octane
                              GlobalProductCode: '022'
                            - Description: Unleaded - Low octane
                              GlobalProductCode: '023'
                            - Description: Unleaded Environmental
                              GlobalProductCode: '024'
                            - Description: Leaded and Lead Replacement
                              GlobalProductCode: '025'
                            - Description: Super Ethanol – E85
                              GlobalProductCode: '502'
                            - Description: Super Ethanol – E85
                              GlobalProductCode: '502'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Alcholic Drink
                            ProductGroupId: P107
                            Products:
                            - Description: Alcoholic drinks
                              GlobalProductCode: '073'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Car Cleaning
                            ProductGroupId: P109
                            Products:
                            - Description: Automatic Carwash
                              GlobalProductCode: '065'
                            - Description: Carwash Subscription
                              GlobalProductCode: '465'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Controlled Road Services
                            ProductGroupId: P110
                            Products:
                            - Description: Public transport and taxi
                              GlobalProductCode: '063'
                            - Description: Others
                              GlobalProductCode: '080'
                            - Description: Car hire
                              GlobalProductCode: '081'
                            - Description: Hotels
                              GlobalProductCode: '082'
                            - Description: Restaurant
                              GlobalProductCode: '083'
                            - Description: Telephone
                              GlobalProductCode: '089'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Food and Drink
                            ProductGroupId: P111
                            Products:
                            - Description: Food (low VAT)
                              GlobalProductCode: '071'
                            - Description: Non-alcoholic drinks
                              GlobalProductCode: '072'
                            - Description: Food (high VAT)
                              GlobalProductCode: '075'
                            ReferenceId: 0
                          Products:
                          - Description: Diesel AGO
                            GlobalProductCode: '030'
                          - Description: GTL
                            GlobalProductCode: '031'
                          - Description: Fuel Economy Diesel (AGO Low Sulphur)
                            GlobalProductCode: '032'
                          - Description: Two Stroke
                            GlobalProductCode: '035'
                          - Description: HVO-100
                            GlobalProductCode: '036'
                          - Description: Industrial GasOil
                            GlobalProductCode: '037'
                          - Description: AdBlue Bulk
                            GlobalProductCode: '038'
                          - Description: AdBlue Packed
                            GlobalProductCode: '039'
                          - Description: Automatic Carwash
                            GlobalProductCode: '065'
                          - Description: Electric Charge
                            GlobalProductCode: '018'
                          - Description: Electric Charge - Time
                            GlobalProductCode: '087'
                          - Description: Electric Charge - Home
                            GlobalProductCode: '088'
                          - Description: Unspecified Unleaded
                            GlobalProductCode: '020'
                          - Description: Unleaded - High octane
                            GlobalProductCode: '021'
                          - Description: Unleaded - Medium octane
                            GlobalProductCode: '022'
                          - Description: Unleaded - Low octane
                            GlobalProductCode: '023'
                          - Description: Unleaded Environmental
                            GlobalProductCode: '024'
                          - Description: Leaded and Lead Replacement
                            GlobalProductCode: '025'
                          - Description: Public transport and taxi
                            GlobalProductCode: '063'
                          - Description: Others
                            GlobalProductCode: '080'
                          - Description: Car hire
                            GlobalProductCode: '081'
                          - Description: Hotels
                            GlobalProductCode: '082'
                          - Description: Restaurant
                            GlobalProductCode: '083'
                          - Description: Telephone
                            GlobalProductCode: '089'
                          - Description: Food (low VAT)
                            GlobalProductCode: '071'
                          - Description: Non-alcoholic drinks
                            GlobalProductCode: '072'
                          - Description: Food (high VAT)
                            GlobalProductCode: '075'
                          - Description: Alcoholic drinks
                            GlobalProductCode: '073'
                          PurchaseCategoryCode: 'null'
                          PurchaseCategoryId: 0
                        UsageRestrictions: null
                      RestrictionCurrencyCode: null
                      RestrictionCurrencySymbol: null
                      AccountId: 449
                      AccountName: Test Card Customer Do Not Block
                      AccountNumber: SG00000446
                      AccountShortName: Test Card Customer Do Not Block
                      CardId: 6215
                      CardTypeCode: '7002872'
                      CardTypeId: 15
                      CardTypeName: SG FLE NAT SIN R2
                      ColCoCurrencyCode: SGD
                      ColCoCurrencySymbol: $
                      CurrencyCode: SGD
                      CurrencySymbol: $
                      DriverName: P1D3 FEB 16TH
                      ExpiryDate: '20270430'
                      IsCRT: false
                      IsFleet: true
                      IsInternational: false
                      IsNational: true
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: false
                      IssueDate: '20240301'
                      IssueNumber: 1
                      IsSuperseded: false
                      IsVirtualCard: false
                      PAN: '7002872532799004748'
                      PurchaseCategoryCode: '1'
                      PurchaseCategoryId: 55
                      PurchaseCategoryName: 1 - All Fuel Products
                      StatusDescription: Active
                      StatusId: 1
                      VRN: '1234'
                      MediumTypeID: 1
                      MediumType: Fuel Card
                    Error:
                      Code: '0000'
                      Description: Unable to fetch Usage Restriction / Day Time Restriction / Location Restriction details for few/all the cards.
                    RequestId: 91bbb8f0-ec5c-473b-aa3a-a4eeca5ad594
              examples:
                Example 1:
                  value:
                    Cards:
                    - BundleId: null
                      Restrictions:
                        DayTimeRestrictions:
                          Friday: false
                          Monday: false
                          Saturday: true
                          Sunday: true
                          Thursday: true
                          TimeFrom: 02:00:00
                          TimeTo: 19:00:00
                          Tuesday: false
                          Wednesday: false
                        LocationRestrictions: null
                        ProductRestrictions:
                          FuelSetId: 0
                          FuelSetName: null
                          NonFuelSets: null
                          ProductGroups:
                          - IsDefault: true
                            IsFuelType: true
                            Name: Electric
                            ProductGroupId: P100
                            Products:
                            - Description: Electric Charge
                              GlobalProductCode: '018'
                            - Description: Electric Charge - Time
                              GlobalProductCode: '087'
                            - Description: Electric Charge - Home
                              GlobalProductCode: '088'
                            - Description: DC Rapid eCharge
                              GlobalProductCode: '486'
                            - Description: eCharge Connection Fee
                              GlobalProductCode: '489'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: true
                            Name: Standard Diesel
                            ProductGroupId: P105
                            Products:
                            - Description: Diesel AGO
                              GlobalProductCode: '030'
                            - Description: GTL
                              GlobalProductCode: '031'
                            - Description: Fuel Economy Diesel (AGO Low Sulphur)
                              GlobalProductCode: '032'
                            - Description: Two Stroke
                              GlobalProductCode: '035'
                            - Description: HVO-100
                              GlobalProductCode: '036'
                            - Description: Industrial GasOil
                              GlobalProductCode: '037'
                            - Description: AdBlue Bulk
                              GlobalProductCode: '038'
                            - Description: AdBlue Packed
                              GlobalProductCode: '039'
                            - Description: HVO Blended
                              GlobalProductCode: '505'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: true
                            Name: Standard Petrol
                            ProductGroupId: P106
                            Products:
                            - Description: Unspecified Unleaded
                              GlobalProductCode: '020'
                            - Description: Unleaded - High octane
                              GlobalProductCode: '021'
                            - Description: Unleaded - Medium octane
                              GlobalProductCode: '022'
                            - Description: Unleaded - Low octane
                              GlobalProductCode: '023'
                            - Description: Unleaded Environmental
                              GlobalProductCode: '024'
                            - Description: Leaded and Lead Replacement
                              GlobalProductCode: '025'
                            - Description: Super Ethanol – E85
                              GlobalProductCode: '502'
                            - Description: Super Ethanol – E85
                              GlobalProductCode: '502'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Alcholic Drink
                            ProductGroupId: P107
                            Products:
                            - Description: Alcoholic drinks
                              GlobalProductCode: '073'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Car Cleaning
                            ProductGroupId: P109
                            Products:
                            - Description: Automatic Carwash
                              GlobalProductCode: '065'
                            - Description: Carwash Subscription
                              GlobalProductCode: '465'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Controlled Road Services
                            ProductGroupId: P110
                            Products:
                            - Description: Public transport and taxi
                              GlobalProductCode: '063'
                            - Description: Others
                              GlobalProductCode: '080'
                            - Description: Car hire
                              GlobalProductCode: '081'
                            - Description: Hotels
                              GlobalProductCode: '082'
                            - Description: Restaurant
                              GlobalProductCode: '083'
                            - Description: Telephone
                              GlobalProductCode: '089'
                            ReferenceId: 0
                          - IsDefault: true
                            IsFuelType: false
                            Name: Food and Drink
                            ProductGroupId: P111
                            Products:
                            - Description: Food (low VAT)
                              GlobalProductCode: '071'
                            - Description: Non-alcoholic drinks
                              GlobalProductCode: '072'
                            - Description: Food (high VAT)
                              GlobalProductCode: '075'
                            ReferenceId: 0
                          Products:
                          - Description: Diesel AGO
                            GlobalProductCode: '030'
                          - Description: GTL
                            GlobalProductCode: '031'
                          - Description: Fuel Economy Diesel (AGO Low Sulphur)
                            GlobalProductCode: '032'
                          - Description: Two Stroke
                            GlobalProductCode: '035'
                          - Description: HVO-100
                            GlobalProductCode: '036'
                          - Description: Industrial GasOil
                            GlobalProductCode: '037'
                          - Description: AdBlue Bulk
                            GlobalProductCode: '038'
                          - Description: AdBlue Packed
                            GlobalProductCode: '039'
                          - Description: Automatic Carwash
                            GlobalProductCode: '065'
                          - Description: Electric Charge
                            GlobalProductCode: '018'
                          - Description: Electric Charge - Time
                            GlobalProductCode: '087'
                          - Description: Electric Charge - Home
                            GlobalProductCode: '088'
                          - Description: Unspecified Unleaded
                            GlobalProductCode: '020'
                          - Description: Unleaded - High octane
                            GlobalProductCode: '021'
                          - Description: Unleaded - Medium octane
                            GlobalProductCode: '022'
                          - Description: Unleaded - Low octane
                            GlobalProductCode: '023'
                          - Description: Unleaded Environmental
                            GlobalProductCode: '024'
                          - Description: Leaded and Lead Replacement
                            GlobalProductCode: '025'
                          - Description: Public transport and taxi
                            GlobalProductCode: '063'
                          - Description: Others
                            GlobalProductCode: '080'
                          - Description: Car hire
                            GlobalProductCode: '081'
                          - Description: Hotels
                            GlobalProductCode: '082'
                          - Description: Restaurant
                            GlobalProductCode: '083'
                          - Description: Telephone
                            GlobalProductCode: '089'
                          - Description: Food (low VAT)
                            GlobalProductCode: '071'
                          - Description: Non-alcoholic drinks
                            GlobalProductCode: '072'
                          - Description: Food (high VAT)
                            GlobalProductCode: '075'
                          - Description: Alcoholic drinks
                            GlobalProductCode: '073'
                          PurchaseCategoryCode: 'null'
                          PurchaseCategoryId: 0
                        UsageRestrictions: null
                      RestrictionCurrencyCode: null
                      RestrictionCurrencySymbol: null
                      AccountId: 449
                      AccountName: Test Card Customer Do Not Block
                      AccountNumber: SG00000446
                      AccountShortName: Test Card Customer Do Not Block
                      CardId: 6215
                      CardTypeCode: '7002872'
                      CardTypeId: 15
                      CardTypeName: SG FLE NAT SIN R2
                      ColCoCurrencyCode: SGD
                      ColCoCurrencySymbol: $
                      CurrencyCode: SGD
                      CurrencySymbol: $
                      DriverName: P1D3 FEB 16TH
                      ExpiryDate: '20270430'
                      IsCRT: false
                      IsFleet: true
                      IsInternational: false
                      IsNational: true
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: false
                      IssueDate: '20240301'
                      IssueNumber: 1
                      IsSuperseded: false
                      IsVirtualCard: false
                      PAN: '7002872532799004748'
                      PurchaseCategoryCode: '1'
                      PurchaseCategoryId: 55
                      PurchaseCategoryName: 1 - All Fuel Products
                      StatusDescription: Active
                      StatusId: 1
                      VRN: '1234'
                      MediumTypeID: 1
                      MediumType: Fuel Card
                    Error:
                      Code: '0000'
                      Description: Unable to fetch Usage Restriction / Day Time Restriction / Location Restriction details for few/all the cards.
                    RequestId: 91bbb8f0-ec5c-473b-aa3a-a4eeca5ad594
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FleetmanagementV1UserLoggedinuser400Error1'
                - example:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v2/restriction/card:
    post:
      tags:
      - Restriction
      summary: ApplyRestriction
      description: "The Card Limit and Restriction API is REST-based and employs Basic and ApiKey authentication. The API endpoints accept JSON-encoded request bodies, return JSON-encoded responses and use standard HTTP response codes. \r\n\r\nAll resources are located in the Shell Card Platform.  The Shell Card Platform is the overall platform that encompasses all the internal Shell systems used to manage resources. The internal workings of the platform are not important when interacting with the API. However, it is worth noting that the platform uses a microservice architecture to communicate with various backend systems and some API calls are processed asynchronously.\r\n\r\nAll endpoints use the `POST` verb for retrieving, updating, creating and deleting resources in the Shell Card Platform. The endpoints that retrieve resources from the Shell Card Platform allow flexible search parameters in the API request body.\r\n\r\n**Important Note** - This operation allows setting or updating the restrictions on existing cards. (For up to 3 cards in a single call).\r\n\r\nAll restrictions of the cards are submitted and executed after successful below condition.\r\n•    The card exists.\r\n•    Day time restriction cannot be set to restrict the use of a card on all days of the week i.e., the values for all the days in the restriction cannot be set to false.\r\n•    Either of the usage, daytime, location or product restriction ‘Reset’ is set to ‘True’ or applied on the card.\r\n•    All the limits in the usage restriction profile for a card is not set to ‘0’/null.\r\n•    If IsVelocityCeiling is ‘true’, API will validate below condition:\r\nUsage restrictions for a card are lower than Customer Card Type level limits, if there are no customer level overrides available then lower than OU card type limits.\r\n•    In usage restrictions, the limits per transaction should be less than or equal to Daily, Daily should be less than or equal to Weekly, Weekly should be less than or equal to Monthly, Monthly should be less than or equal to Yearly (Annually). Exception being null/blank will be skipped. i.e., Daily value should be less than equal to Monthly value if Weekly value is null/blank. Lifetime limit is not considered for usage restrictions limits validation.\r\n•    Apply the card type limit to Gateway when a value is NULL in the input. However, if the card type limit is NULL for the same field, then no limit will be applied in Gateway.\r\n•    If ‘SetDefaultOnVelocityUpdate’ is ‘true’ then the operation will apply customer cardtype or OU level velocity limits on existing cards when restrictions are modified without providing custom values for all fields.\r\n"
      operationId: ApplyRestriction
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Card Restriction request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardRestrictionReq'
              - description: Card Restriction request body
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardRestrictionResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/createbundle:
    post:
      tags:
      - Restriction
      summary: CreateBundle
      description: "This API enables clients to create a new card bundle and apply restrictions.\r\n#### Supported operations\r\n  * Create bundle and include mandatory -\r\n    * Usage, day/time, product and location restrictions\r\n    * List of cards to add to bundle\r\n  * Create bundle and include optional identifier of bundle in external system\r\n#### Validation rules\r\n  The following are the key validation rules with the associated error codes for failed validation-\r\n  * `7012` - At least one card must be added to the bundle\r\n  *  `7011` - The total number of cards passed in the input must be 500 or less.\r\n  *  `7014` - All the cards passed in the input are part of the selected account.\r\n  *  `7013` - At least one restriction must be applied to the bundle i.e. either of usage, day/time, location or product restriction.\r\n  *  `7005` - Day time restriction cannot be set to restrict the use of a card on all days of the week.\r\n  *  `7000` - Usage restriction of the bundle is not open ended i.e. all the limits within the usage restriction must not be set to 0/null.\r\n  *  `7004` - In the usage restrictions, the limits per transaction should be less than or equal to Daily, Daily should be less than or equal to Weekly, Weekly should be less than or equal to Monthly. Exception being 0/blank will be skipped, i.e. Daily value should be less than equal to Monthly value if Weekly value is 0/blank. \r\n  *  `0007` - Error returned if request parameters fail validation e.g. mandatory check."
      operationId: CreateBundle
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: CreateBundle request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateBundleRequest'
              - description: CreateBundle request body
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBundleResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/updatebundle:
    post:
      tags:
      - Restriction
      summary: UpdateBundle
      description: "This API enables clients to update an existing card bundle and its associated restrictions.\r\n#### Supported operations\r\n  * Add new cards to an existing bundle\r\n  * Remove cards from existing bundle\r\n  * Update restrictions applied to existing bundle\r\n\r\n  The following are the key validation rules with the associated error codes for failed validation-      \r\n#### Validation rules\r\n  *  `9007` - The cards must exist in the cards platform for adding or removing cards.\r\n  *  `7014` - All the cards passed in the input are part of the selected account.\r\n  *  `7018` - All the cards passed in the input are part of the selected bundle.\r\n  *  `7011` - The total number of cards passed in the input must be 500 or less.\r\n  *  `7012` - The action to remove cards should not result in removing all the cards from the bundle.\r\n  *  `7016` - At least one restriction must be modified for â€œUpdateâ€ request action.\r\n  *  `7013` - All restrictions cannot be marked for â€œResetâ€ for â€œUpdateâ€ request action.\r\n  *  `7005` - Day time restriction cannot be set to restrict the use of a card on all days of the week. This validation is applicable for Update request action.\r\n  *  `7000` - Usage restriction of the bundle is not open ended i.e., all the limits within the usage restriction must not be set to 0/null. This validation is applicable for Update request action.\r\n  *  `7004` - In the usage restrictions, the limits per transaction should be less than or equal to Daily, Daily should be less than or equal to Weekly, Weekly should be less than or equal to Monthly. Exception being 0/blank will be skipped, i.e., Daily value should be less than equal to Monthly value if Weekly value is 0/blank. This validation is applicable for Update request action.\r\n  *  `0007` - Error returned if request parameters fail validation e.g. at least one card must be provided in the input."
      operationId: UpdateBundle
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Update Bundle request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateBundleRequest'
              - description: Update Bundle request body
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBundleResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/deletebundle:
    post:
      tags:
      - Restriction
      summary: DeleteBundle
      description: "This API enables clients to delete an existing card bundle in the Shell Card Platform. Once the card bundle is deleted the usage and product restrictions of the cards that were present in the bundle will be reset based on the request.\r\n#### Supported operations\r\n  * Delete card bundle by bundle Id\r\n#### Validation rules\r\n  The following are the key validation rules with the associated error codes for failed validation-\r\n  *  `7019` - The given card bundle is not available in the Shell Card Platform. \r\n  *  `0007` - Error returned if request parameters fail validation e.g. mandatory check."
      operationId: DeleteBundle
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Update Bundle request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteBundleRequest'
              - description: Update Bundle request body
                example:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 854
                  AccountNumber: PH50000844
                  BundleId: '123'
                  RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
            examples:
              Example 1:
                value:
                  ColCoCode: 86
                  ColCoId: 1
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountId: 854
                  AccountNumber: PH50000844
                  BundleId: '123'
                  RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteBundleResponse'
                - example:
                    Error:
                      Description: Success
                      Code: '0000'
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
              examples:
                Example 1:
                  value:
                    Error:
                      Description: Success
                      Code: '0000'
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/summaryofbundles:
    post:
      tags:
      - Restriction
      summary: summaryofbundles
      description: >-
        This API allows clients to get a summary of card bundles associated with Payer/Account. This API will return the basic bundle details including card and restriction details. Optionally the API will also include a count of cards that are not associated with the bundle but returned by the search criteria.



        Note - to include count of cards of an account that are not associated with any bundles, in the input parameter SearchCardBundles either pass all the bundles of the account in the list or pass only account with bundle id left blank/null.



        #### Supported operations

          * Get summary of bundles by list of bundle Ids
      operationId: SummaryOfBundles
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Summary of Bundle request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SummaryofbundlerRequest'
              - description: Summary of Bundle request body
                example:
                  includeCardBundleRestrictions: true
                  colCoCode: 32
                  payerNumber: CZ00000927
                  includeCountOfCardsNotInBundle: null
                  accountNumber: CZ00000927
            examples:
              Example 1:
                value:
                  includeCardBundleRestrictions: true
                  colCoCode: 32
                  payerNumber: CZ00000927
                  includeCountOfCardsNotInBundle: null
                  accountNumber: CZ00000927
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryofbundleResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/account:
    post:
      tags:
      - Restriction
      summary: RestrictionAccount
      description: "This API allows setting or updating the usage restrictions of an existing account. \r\n\r\nThen validation rules applied for this API.\r\n\r\n•    The account exists.\r\n•    Day time restriction cannot be set to restrict the use of a card, under the account, on all days of the week.\r\n•    Either of the usage, daytime or location is either marked for reset or new restriction values provided for the account.\r\n•    In usage restrictions, the limits per transaction should be less than or equal to Daily, Daily should be less than or equal to Weekly, Weekly should be less than or equal to Monthly. Exception being 0/blank will be skipped, i.e., Daily value should be less than equal to Monthly value if Weekly value is 0/blank.\r\n"
      operationId: RestrictionAccount
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Account Restriction request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccountRestrictionRequest'
              - description: Account Restriction request body
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRestrictionResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BearerToken: []
  /fleetmanagement/v1/restriction/searchaccountlimit:
    post:
      tags:
      - Restriction
      summary: SearchAccountLimit
      description: This API will allow user to get account level limits for the given account. It returns the velocity limits if its overridden at the account else the values will be null/empty.
      operationId: SearchAccountLimit
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Search Account Limit RequestBody
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchAccountLimitRequest'
              - description: Search Account Limit RequestBody
                example:
                  ColCoCode: 32
                  PayerId: 1240
                  AccountId: 1232
            examples:
              Example 1:
                value:
                  ColCoCode: 32
                  PayerId: 1240
                  AccountId: 1232
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SearchAccountLimitResponse'
                - example:
                    RequestId: 2ace3991-5d03-4a68-ac68-ca9119b25101
                    AccountId: 1232
                    ReferenceProduct: '021'
                    RestrictionCondition: DECLINE_ALERT
                    VelocityLimits:
                    - Type: VALUE
                      Period: MONTHLY
                      Limit: 330
                      Accumulation: 2220
                      Balance: 230
                      Override: true
                      ProductGroup: RoadSvc
                      Threshold: 3230
                    Error:
                      Code: '0000'
                      Description: Success
              examples:
                Example 1:
                  value:
                    RequestId: 2ace3991-5d03-4a68-ac68-ca9119b25101
                    AccountId: 1232
                    ReferenceProduct: '021'
                    RestrictionCondition: DECLINE_ALERT
                    VelocityLimits:
                    - Type: VALUE
                      Period: MONTHLY
                      Limit: 330
                      Accumulation: 2220
                      Balance: 230
                      Override: true
                      ProductGroup: RoadSvc
                      Threshold: 3230
                    Error:
                      Code: '0000'
                      Description: Success
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /fleetmanagement/v1/restriction/bundledetails:
    post:
      tags:
      - Restriction
      summary: bundledetails
      description: This API allows to get the details of a specific card bundle. It returns the bundle basic details along with the cards in the bundle and restrictions applied on them.
      operationId: BundleDetails
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Bundle Details Request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BudleDetailsRequest'
              - description: Bundle Details Request body
                example:
                  PayerNumber: CZ00000927
                  AccountNumber: CZ00000927
                  ColCoCode: 32
                  BundleId: '1060'
            examples:
              Example 1:
                value:
                  PayerNumber: CZ00000927
                  AccountNumber: CZ00000927
                  ColCoCode: 32
                  BundleId: '1060'
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleDetailsResponse'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /card-management/v1/search:
    post:
      tags:
      - Card
      summary: searchcard
      description: >-
        This API allows to search for Shell Cards in the Shell Card Platform. It provides flexible search criteria and supports paging.

        #### New version updates

          * Oauth authentication to access the API

          * New parameters have been added in the response. Below are the list of parameters added

              * IsEMVContact

              * IsEMVContactless

              * IsRFID

              * RFIDUID

              * EMAID

              * EVPrintedNumber

              * CardMediaCode

        #### Supported operations

          * Search cards by card id or PAN

          * Search cards by card status

          * Search cards by excluding card status

          * Search cards by date fields

          * Search cards by embossed fields

          * Search cards by card configuration fields

          * Search cards by included/excluded list of cards

          * Search cards by excluding card bundle Id
      operationId: SearchCard
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: requestbody
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCardRequest'
              - description: requestbody
                example:
                  Filters:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    AccountId: 1223
                    AccountNumber: CZ00000923
                    CardGroupId: 424
                    CardGroupName: CARDGRP1
                    CardSegment: Fleet
                    CardStatus:
                    - ACTIVE
                    - BLOCKED
                    CardTypeCode: '7077327'
                    ColCoCode: 32
                    ColCoId: 32
                    Coverage: National
                    CreationDate: '20211222'
                    DriverName:
                    - JAN KOLLER
                    - DRIVER23
                    - DRIVER25
                    EffectiveDate: '20211222'
                    ExcludeCancelledCards: true
                    ExcludeCardGroupId: 425
                    ExcludeCardGroupName: CARDGRP2
                    ExcludeCards:
                    - CardId: 466907
                      PAN: '7077327290224795811'
                      PANID: 17350065
                    ExcludeFraudCards: false
                    ExcludePendingRenewalCards: true
                    ExcludeReplacedCards: false
                    ExpiryMonth: '052022'
                    IncludeCards:
                    - CardId: 466906
                      PAN: '7077327290224795801'
                      PANID: 17350065
                    IncludeIntermediateStatus: false
                    IssuedAfter: '20211123'
                    Network: ShellSitesOnly
                    PANEndsWith: '1284'
                    PayerId: 1223
                    PayerNumber: CZ00000923
                    PurchaseCategoryCode: '3'
                    SortOrder: 1,3,7
                    IncludeScheduledCardBlocks: false
                    TokenTypeID: 107
                    TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                    VehicleRegistrationNumber:
                    - 5A2 7512
                    - 5A2 7514
                    ExcludeOldCards: false
                    ExcludeExpiringCards: false
                    ReissueSetting: 'true'
                    CurrentPage: 1
                    PageSize: 10
                  PageSize: '50'
                  Page: '1'
            examples:
              Example 1:
                value:
                  Filters:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    AccountId: 1223
                    AccountNumber: CZ00000923
                    CardGroupId: 424
                    CardGroupName: CARDGRP1
                    CardSegment: Fleet
                    CardStatus:
                    - ACTIVE
                    - BLOCKED
                    CardTypeCode: '7077327'
                    ColCoCode: 32
                    ColCoId: 32
                    Coverage: National
                    CreationDate: '20211222'
                    DriverName:
                    - JAN KOLLER
                    - DRIVER23
                    - DRIVER25
                    EffectiveDate: '20211222'
                    ExcludeCancelledCards: true
                    ExcludeCardGroupId: 425
                    ExcludeCardGroupName: CARDGRP2
                    ExcludeCards:
                    - CardId: 466907
                      PAN: '7077327290224795811'
                      PANID: 17350065
                    ExcludeFraudCards: false
                    ExcludePendingRenewalCards: true
                    ExcludeReplacedCards: false
                    ExpiryMonth: '052022'
                    IncludeCards:
                    - CardId: 466906
                      PAN: '7077327290224795801'
                      PANID: 17350065
                    IncludeIntermediateStatus: false
                    IssuedAfter: '20211123'
                    Network: ShellSitesOnly
                    PANEndsWith: '1284'
                    PayerId: 1223
                    PayerNumber: CZ00000923
                    PurchaseCategoryCode: '3'
                    SortOrder: 1,3,7
                    IncludeScheduledCardBlocks: false
                    TokenTypeID: 107
                    TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                    VehicleRegistrationNumber:
                    - 5A2 7512
                    - 5A2 7514
                    ExcludeOldCards: false
                    ExcludeExpiringCards: false
                    ReissueSetting: 'true'
                    CurrentPage: 1
                    PageSize: 10
                  PageSize: '50'
                  Page: '1'
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardSearchResponse'
                - example:
                    Page: 1
                    TotalRecords: 3420
                    TotalPages: 3420
                    PageSize: 50
                    Data:
                    - AccountId: 1223
                      AccountName: NewtestPandB
                      AccountNumber: CZ00000923
                      AccountShortName: NewtestPandB
                      BundleId: 'null'
                      CardBlockSchedules:
                      - 'null': null
                      CardGroupId: 5
                      CardGroupName: 'null'
                      CardId: 385316
                      CardTypeCode: '7077327'
                      CardTypeId: 105
                      CardTypeName: CZ CRT INT MUL R7
                      ColCoCountryCode: CZ
                      CreationDate: 20190911 13:58:30
                      DriverName: Jhon
                      EffectiveDate: '20190911'
                      ExpiryDate: '20230930'
                      FleetIdInput: true
                      IsCRT: true
                      IsFleet: false
                      IsInternational: true
                      IsNational: false
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: false
                      IssueDate: '20190911'
                      IsSuperseded: true
                      IsVirtualCard: false
                      LastModifiedDate: 20230720 09:33:28
                      LastUsedDate: 20230720 09:33:28
                      LocalCurrencyCode: CZK
                      LocalCurrencySymbol: Kč
                      OdometerInput: true
                      PAN: '7077327290223410782'
                      MaskedPAN: 7077327******410782
                      PANID: 17350064
                      PurchaseCategoryCode: '3'
                      PurchaseCategoryId: 103
                      PurchaseCategoryName: 3 - No Restriction
                      Reason: Lost
                      ReissueSetting: 'False'
                      StatusDescription: Active
                      StatusId: 1
                      TokenTypeID: 107
                      TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                      VRN: GHJHJDKSDS
                      ClientReferenceId: 233e4567-e89b-12d3-a456-426614174000
                      IsEMVContact: false
                      IsEMVContactless: false
                      IsRFID: false
                      RFIDUID: AFR56T
                      EMAID: JUYHF767
                      EVPrintedNumber: 87394FDE
                      CardMediaCode: '100999'
                      MediumTypeID: 0
                      MediumType: null
                    RequestId: 4cb1d11e-c387-48a5-b667-a1d862be4343
                    Status: SUCCESS
              examples:
                Example 1:
                  value:
                    Page: 1
                    TotalRecords: 3420
                    TotalPages: 3420
                    PageSize: 50
                    Data:
                    - AccountId: 1223
                      AccountName: NewtestPandB
                      AccountNumber: CZ00000923
                      AccountShortName: NewtestPandB
                      BundleId: 'null'
                      CardBlockSchedules:
                      - 'null': null
                      CardGroupId: 5
                      CardGroupName: 'null'
                      CardId: 385316
                      CardTypeCode: '7077327'
                      CardTypeId: 105
                      CardTypeName: CZ CRT INT MUL R7
                      ColCoCountryCode: CZ
                      CreationDate: 20190911 13:58:30
                      DriverName: Jhon
                      EffectiveDate: '20190911'
                      ExpiryDate: '20230930'
                      FleetIdInput: true
                      IsCRT: true
                      IsFleet: false
                      IsInternational: true
                      IsNational: false
                      IsPartnerSitesIncluded: true
                      IsShellSitesOnly: false
                      IssueDate: '20190911'
                      IsSuperseded: true
                      IsVirtualCard: false
                      LastModifiedDate: 20230720 09:33:28
                      LastUsedDate: 20230720 09:33:28
                      LocalCurrencyCode: CZK
                      LocalCurrencySymbol: Kč
                      OdometerInput: true
                      PAN: '7077327290223410782'
                      MaskedPAN: 7077327******410782
                      PANID: 17350064
                      PurchaseCategoryCode: '3'
                      PurchaseCategoryId: 103
                      PurchaseCategoryName: 3 - No Restriction
                      Reason: Lost
                      ReissueSetting: 'False'
                      StatusDescription: Active
                      StatusId: 1
                      TokenTypeID: 107
                      TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                      VRN: GHJHJDKSDS
                      ClientReferenceId: 233e4567-e89b-12d3-a456-426614174000
                      IsEMVContact: false
                      IsEMVContactless: false
                      IsRFID: false
                      RFIDUID: AFR56T
                      EMAID: JUYHF767
                      EVPrintedNumber: 87394FDE
                      CardMediaCode: '100999'
                      MediumTypeID: 0
                      MediumType: null
                    RequestId: 4cb1d11e-c387-48a5-b667-a1d862be4343
                    Status: SUCCESS
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/summary:
    post:
      tags:
      - Card
      summary: cardsummary
      description: "This API allows to search for fuel cards in the Shell Card Platform and returns a high-level summary count. It provides flexible search criteria.\r\n#### New version updates\r\n  * Oauth authentication to access the API\r\n  * Minor change in response structure with addition of Status parameter\r\n  \r\n#### Supported operations\r\n  * Search cards by card id or PAN\r\n  * Search cards by card status\r\n  * Search cards by excluding card status\r\n  * Search cards by date fields\r\n  * Search cards by embossed fields\r\n  * Search cards by card configuration fields\r\n  * Search cards by included/excluded list of cards"
      operationId: CardSummary
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: summary request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardSummaryRequest'
              - description: summary request body
                example:
                  Filters:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    AccountId: 1223
                    AccountNumber: CZ00000923
                    CardGroupId: 424
                    CardGroupName: CARDGRP1
                    CardSegment: Fleet
                    CardStatus:
                    - ACTIVE
                    - BLOCKED
                    CardTypeCode: '7077327'
                    ColCoCode: 32
                    ColCoId: 32
                    Coverage: National
                    CreationDate: '20211222'
                    DriverName:
                    - JAN KOLLER
                    - DRIVER23
                    - DRIVER25
                    EffectiveDate: '20211222'
                    ExcludeCancelledCards: true
                    ExcludeCardGroupId: 425
                    ExcludeCardGroupName: CARDGRP2
                    ExcludeCards:
                    - CardId: 466907
                      PAN: '7077327290224795811'
                    ExcludeFraudCards: false
                    ExcludePendingRenewalCards: true
                    ExcludeReplacedCards: false
                    ExpiryMonth: '052022'
                    IncludeCards:
                    - CardId: 466906
                      PAN: '7077327290224795801'
                    IncludeIntermediateStatus: false
                    IssuedAfter: '20211123'
                    Network: ShellSitesOnly
                    PANEndsWith: '1284'
                    PayerId: 1223
                    PayerNumber: CZ00000923
                    PurchaseCategoryCode: '3'
                    IncludeScheduledCardBlocks: false
                    TokenTypeID: 107
                    TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                    VehicleRegistrationNumber:
                    - 5A2 7512
                    - 5A2 7514
                    ExcludeOldCards: false
                    ExcludeExpiringCards: false
                    ReissueSetting: 'true'
            examples:
              Example 1:
                value:
                  Filters:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    AccountId: 1223
                    AccountNumber: CZ00000923
                    CardGroupId: 424
                    CardGroupName: CARDGRP1
                    CardSegment: Fleet
                    CardStatus:
                    - ACTIVE
                    - BLOCKED
                    CardTypeCode: '7077327'
                    ColCoCode: 32
                    ColCoId: 32
                    Coverage: National
                    CreationDate: '20211222'
                    DriverName:
                    - JAN KOLLER
                    - DRIVER23
                    - DRIVER25
                    EffectiveDate: '20211222'
                    ExcludeCancelledCards: true
                    ExcludeCardGroupId: 425
                    ExcludeCardGroupName: CARDGRP2
                    ExcludeCards:
                    - CardId: 466907
                      PAN: '7077327290224795811'
                    ExcludeFraudCards: false
                    ExcludePendingRenewalCards: true
                    ExcludeReplacedCards: false
                    ExpiryMonth: '052022'
                    IncludeCards:
                    - CardId: 466906
                      PAN: '7077327290224795801'
                    IncludeIntermediateStatus: false
                    IssuedAfter: '20211123'
                    Network: ShellSitesOnly
                    PANEndsWith: '1284'
                    PayerId: 1223
                    PayerNumber: CZ00000923
                    PurchaseCategoryCode: '3'
                    IncludeScheduledCardBlocks: false
                    TokenTypeID: 107
                    TokenTypeName: CZ CRT Int MultiNetwork - CHIP
                    VehicleRegistrationNumber:
                    - 5A2 7512
                    - 5A2 7514
                    ExcludeOldCards: false
                    ExcludeExpiringCards: false
                    ReissueSetting: 'true'
        required: false
      responses:
        '200':
          description: Summary count of fuel cards. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardSummaryResponse'
                - example:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: SUCCESS
                    Data:
                    - ActiveCards: 10
                      BlockedCards: 5
                      CancelledCards: 2
                      ExpiredCards: 5
                      ExpiringCards: 2
                      FraudCards: 0
                      NewCards: 0
                      RenewalPendingCards: 0
                      ReplacedCards: 0
                      TemporaryBlockByCustomer: 0
                      TemporaryBlockByShell: 0
                      TotalCards: 24
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: SUCCESS
                    Data:
                    - ActiveCards: 10
                      BlockedCards: 5
                      CancelledCards: 2
                      ExpiredCards: 5
                      ExpiringCards: 2
                      FraudCards: 0
                      NewCards: 0
                      RenewalPendingCards: 0
                      ReplacedCards: 0
                      TemporaryBlockByCustomer: 0
                      TemporaryBlockByShell: 0
                      TotalCards: 24
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/ordercard:
    post:
      tags:
      - Card
      summary: cardordercard
      description: "This API allows ordering one or more fuel cards (up to 50). If the API call succeeds, the API will return a reference number and queue the request for asynchronous processing.\r\n#### New version updates\r\n  * Oauth authentication to access the API\r\n  * New parameters have been added in the response for the new PIN management changes. Below parameters needs to be derived from the new PIN encryption method explained in our Mobility Card PIN Management product.  \r\n      * SelfSelectedEncryptedPIN\r\n      * SelfSelectedPINKeyID\r\n      * SelfSelectedPINSessionKey\r\n  * New parameters have been added in the response for card and pin delivery mechanism which gives the opportunity to deliver card & pin by email, SMS or post. \r\n    Also the possibility to deliver card and pin to different address if the use case demands. \r\n      * CardDeliveryType\r\n      * PINDeliveryAddressType\r\n      * PINAdviceType\r\n      * PINContact\r\n      * CardContact\r\n#### Supported operations\r\n  * Order one or more cards (up to 50)\r\n  * Order card with self selected PIN\r\n  * Order card with vehicle registration number\r\n  * Order card and add to new or exisitng card group\r\n  * Order card and enable fleetId or odemeter input\r\n  * Order card and specify product groups\r\n\r\n#### Validation rules\r\n* Number of cards per request does not exceed 50\r\n\r\n#### API response \r\n* A main reference number for the API request (**OrderReference**)\r\n* Individual reference numbers (**OrderCardReference**) for each new card"
      operationId: OrderCard
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Order card request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardManagementV1OrdercardRequest'
              - description: Order card request body
                example:
                  CardDetails:
                  - PayerId: 853
                    PayerNumber: PH50000843
                    AccountId: 854
                    AccountNumber: PH50000844
                    ColCoCode: 86
                    ColCoId: 1
                    CardTypeId: 1
                    TokenTypeId: 107
                    EmbossText: PARKLEY
                    VRN: MV65YLH
                    DriverName: Robert
                    OdometerInputRequired: false
                    FleetIdInputRequired: false
                    PurchaseCategoryId: 54
                    SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                    SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                    SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                    CardGroupId: 5
                    CardGroupName: Group1
                    IsNewCardGroup: false
                    EmbossCardGroup: false
                    CardDeliveryType: 1
                    CardContact:
                      DeliveryContactTitle: Mr.
                      DeliveryContactName: Robert
                      DeliveryCompanyName: WILTON AUFDERHAR
                      DeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      DeliveryAddressLine2: 10th avenue
                      DeliveryAddressLine3: makati city
                      DeliveryZipCode: '12130'
                      DeliveryCity: manila
                      DeliveryRegionId: 43
                      DeliveryRegion: Philippines
                      DeliveryCountry: WILTON AUFDERHAR
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      SaveForCardReissue: false
                    PINDeliveryAddressType: 1
                    PINAdviceType: 1
                    PINContact:
                      DeliveryContactTitle: Mr.
                      DeliveryContactName: Robert
                      DeliveryCompanyName: WILTON AUFDERHAR
                      DeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      DeliveryAddressLine2: 10th avenue
                      DeliveryAddressLine3: makati city
                      DeliveryZipCode: '12130'
                      DeliveryCity: manila
                      DeliveryRegionId: 43
                      DeliveryRegion: Philippines
                      DeliveryCountry: WILTON AUFDERHAR
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                    NotifyCaller: false
                    Caller: NextGenUI
                    NotifyCallerOnSync: false
                    ValidateFleetId: false
                    FleetOption: ALERT
                    BundleId: '1046'
                    UsageRestrictionAction: None
                    ProductRestrictionAction: None
                    Products:
                    - '011'
                    - '033'
                    ProductGroups:
                    - '670246404'
                    - '40557126'
                    ExpiryDate: '1221'
                    ClientReferenceId: cli123
            examples:
              Example 1:
                value:
                  CardDetails:
                  - PayerId: 853
                    PayerNumber: PH50000843
                    AccountId: 854
                    AccountNumber: PH50000844
                    ColCoCode: 86
                    ColCoId: 1
                    CardTypeId: 1
                    TokenTypeId: 107
                    EmbossText: PARKLEY
                    VRN: MV65YLH
                    DriverName: Robert
                    OdometerInputRequired: false
                    FleetIdInputRequired: false
                    PurchaseCategoryId: 54
                    SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                    SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                    SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                    CardGroupId: 5
                    CardGroupName: Group1
                    IsNewCardGroup: false
                    EmbossCardGroup: false
                    CardDeliveryType: 1
                    CardContact:
                      DeliveryContactTitle: Mr.
                      DeliveryContactName: Robert
                      DeliveryCompanyName: WILTON AUFDERHAR
                      DeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      DeliveryAddressLine2: 10th avenue
                      DeliveryAddressLine3: makati city
                      DeliveryZipCode: '12130'
                      DeliveryCity: manila
                      DeliveryRegionId: 43
                      DeliveryRegion: Philippines
                      DeliveryCountry: WILTON AUFDERHAR
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      SaveForCardReissue: false
                    PINDeliveryAddressType: 1
                    PINAdviceType: 1
                    PINContact:
                      DeliveryContactTitle: Mr.
                      DeliveryContactName: Robert
                      DeliveryCompanyName: WILTON AUFDERHAR
                      DeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      DeliveryAddressLine2: 10th avenue
                      DeliveryAddressLine3: makati city
                      DeliveryZipCode: '12130'
                      DeliveryCity: manila
                      DeliveryRegionId: 43
                      DeliveryRegion: Philippines
                      DeliveryCountry: WILTON AUFDERHAR
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                    NotifyCaller: false
                    Caller: NextGenUI
                    NotifyCallerOnSync: false
                    ValidateFleetId: false
                    FleetOption: ALERT
                    BundleId: '1046'
                    UsageRestrictionAction: None
                    ProductRestrictionAction: None
                    Products:
                    - '011'
                    - '033'
                    ProductGroups:
                    - '670246404'
                    - '40557126'
                    ExpiryDate: '1221'
                    ClientReferenceId: cli123
        required: false
      responses:
        '200':
          description: Fuel card order reference details. The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderCardResponse'
                - example:
                    RequestId: b88525fd-6340-404e-9313-12e702c33cb7
                    Status: SUCCESS
                    Data:
                    - DriverAndVRN: ROBERT:MV65YLH
                      OrderCardReference: 488351
                    MainReference: 488453
              examples:
                Example 1:
                  value:
                    RequestId: b88525fd-6340-404e-9313-12e702c33cb7
                    Status: SUCCESS
                    Data:
                    - DriverAndVRN: ROBERT:MV65YLH
                      OrderCardReference: 488351
                    MainReference: 488453
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                  Status: FAILED
                  Errors:
                  - Code: E0001
                    Title: Validation Error
                    Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                    AdditionalInfo:
                      ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/ordercardenquiry:
    post:
      tags:
      - Card
      summary: cardordercardenquiry
      description: >
        This API retrieves the card order status from the Shell Card Platform based on the given reference numbers.

          #### New version updates

            * Oauth authentication to access the API

            * Minor change in response structure with addition of Status parameter



          #### Supported operations

            * Get order status by Bulk Card Order Reference

            * Get order status by Order Reference (main reference for the order)

            * Get order status by Card Reference (individual card reference belonging to an order reference)
      operationId: OrderCardEnquiry
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Order Card Enquiry request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/OrderCardEnquiryRequest'
              - description: Order Card Enquiry request body
                example:
                  Filters:
                    AccountId: 70
                    AccountNumber: NL00000063
                    ColCoCode: 18
                    ColCoId: 18
                    ColCoCountryCode: NL
                    FromDate: '20210502'
                    PayerId: 70
                    PayerNumber: NL00000063
                    ReferenceNumber: 25
                    ReferenceType: 1
                    ToDate: '20210505'
                    OrderRequestId: 34edbfbf-f05e-4d8d-bcd4-9eb7aea5ea41
            examples:
              Example 1:
                value:
                  Filters:
                    AccountId: 70
                    AccountNumber: NL00000063
                    ColCoCode: 18
                    ColCoId: 18
                    ColCoCountryCode: NL
                    FromDate: '20210502'
                    PayerId: 70
                    PayerNumber: NL00000063
                    ReferenceNumber: 25
                    ReferenceType: 1
                    ToDate: '20210505'
                    OrderRequestId: 34edbfbf-f05e-4d8d-bcd4-9eb7aea5ea41
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OrderCardEnquiryResponse'
                - example:
                    RequestId: 6fb81ffe-bf1b-44b0-94f8-d6711afde392
                    Status: SUCCESS
                    Data:
                    - AccountId: 70
                      AccountNumber: NL00000063
                      BCOReference: 0
                      BCORowNumber: 0
                      CardGroupId: 0
                      CardGroupName: 'null'
                      CardId: 41008
                      CardPAN: '7077187910757000712'
                      MaskedPAN: 707718******000712
                      PANID: 17285721
                      CardTypeCode: '7077187'
                      CardTypeId: 704
                      CardTypeName: NL CRT Nat. Shell + partnernetwerk
                      DriverName: DAVE ROUSE TEST
                      ErrorCode: '0000'
                      ErrorDescription: 'null'
                      GatewaySyncErrorCode: '0000'
                      GatewaySyncErrorDescription: Success
                      GatewaySyncStatus: S
                      MainReference: 512164
                      OrderCardReference: 714069
                      OrderStatus: S
                      PayerId: 70
                      PayerNumber: NL00000063
                      ProcessedDate: 20231219 10:12:21
                      PurchaseCategoryCode: '3'
                      PurchaseCategoryId: 139
                      PurchaseCategoryName: 3 - No Restriction
                      SubmittedDate: 20231219 10:11:16
                      SyncProcessedDate: 20231219 10:15:44
                      SyncRequestedDate: 'null'
                      VRN: 'null'
                      OrderRequestId: ee625150-8d84-496c-b824-a4c47b482ae3
                      ExpiryDate: 20271231 00:00:00
                      ClientReferenceId: 9073ab4e-c1f5-4f2d-947f-753ead176c3d
                      StatusDescription: Success
              examples:
                Example 1:
                  value:
                    RequestId: 6fb81ffe-bf1b-44b0-94f8-d6711afde392
                    Status: SUCCESS
                    Data:
                    - AccountId: 70
                      AccountNumber: NL00000063
                      BCOReference: 0
                      BCORowNumber: 0
                      CardGroupId: 0
                      CardGroupName: 'null'
                      CardId: 41008
                      CardPAN: '7077187910757000712'
                      MaskedPAN: 707718******000712
                      PANID: 17285721
                      CardTypeCode: '7077187'
                      CardTypeId: 704
                      CardTypeName: NL CRT Nat. Shell + partnernetwerk
                      DriverName: DAVE ROUSE TEST
                      ErrorCode: '0000'
                      ErrorDescription: 'null'
                      GatewaySyncErrorCode: '0000'
                      GatewaySyncErrorDescription: Success
                      GatewaySyncStatus: S
                      MainReference: 512164
                      OrderCardReference: 714069
                      OrderStatus: S
                      PayerId: 70
                      PayerNumber: NL00000063
                      ProcessedDate: 20231219 10:12:21
                      PurchaseCategoryCode: '3'
                      PurchaseCategoryId: 139
                      PurchaseCategoryName: 3 - No Restriction
                      SubmittedDate: 20231219 10:11:16
                      SyncProcessedDate: 20231219 10:15:44
                      SyncRequestedDate: 'null'
                      VRN: 'null'
                      OrderRequestId: ee625150-8d84-496c-b824-a4c47b482ae3
                      ExpiryDate: 20271231 00:00:00
                      ClientReferenceId: 9073ab4e-c1f5-4f2d-947f-753ead176c3d
                      StatusDescription: Success
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                  Status: FAILED
                  Errors:
                  - Code: E0001
                    Title: Validation Error
                    Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                    AdditionalInfo:
                      ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/cancel:
    post:
      tags:
      - Card
      summary: cardcancel
      description: "This API allows cancelling one or multiple cards (up to 500) within a single API call. This API allows updating of\r\n  the card to the following status-\r\n*  Block (Cancelled)\r\n\r\n#### New version updates\r\n  * Oauth authentication to access the API\r\n  * Change in the request body\r\n    * PIN delivery address details have been added along with Email and Phone number for card and PIN delivery.\r\n\r\nRequests that passed the below validations are queued-\r\n  * All Mandatory fields are passed.\r\n  *  Card is present in the Shell Card Platform.\r\n  *  Only one matching card is available in the cards platform for the given PAN and expiry date for Block requests.\r\n  *  Card is allowed to be moved to proposed state as per the card status transition configuration in cards platform.\r\n  *  A valid Reason Id or Reason Text is provided. The reason for card cancellation can be “Damaged” or “NoLongerRequired”. \r\n  *  For the given card, there is no Cancel request already submitted via this API and is being processed.\r\n  *  ‘IsReplacementChargeable’ is set to ‘False’ only to the configured customer, other customers need to set it as ‘True’ only. If other customers pass this value as ‘False’.\r\n\r\n  Note- Shell Card Platform will maintain the list of   customers, to whom ‘IsReplacementChargeable’ can be set as ‘False’.\r\n\r\nIf all validations are passed, the request will be accepted and the API will return reference numbers for tracking purpose. If any of the validations fail, the API will return the appropriate error details on response.  The API response will include-\r\n  *  A main reference number for the API request.\r\n  *  A list of successfully validated and accepted cards along with the individual reference numbers for each of the successful requests.\r\n  *  A list of cards for which at least validation has failed along with the appropriate error code and details.\r\n\r\n  A permanent block (cancelled) request for the card will be queued in Shell Card Platform after the configured damaged card active period (configured as number of days).\r\n  \r\n  When a card is requested to be Blocked permanently (cancelled) for which a request has already been submitted to report as Damaged and the damaged card active period is not yet completed, the damaged card request will be marked as superseded and the new Block (cancelled) request will be processed."
      operationId: CardCancel
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Update status request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardManagementV1CancelRequest'
              - description: Update status request body
                example:
                  Cards:
                  - Caller: NextGenUI
                    IsReplacementChargeable: true
                    NotifyCaller: false
                    NotifyCallerOnSync: false
                    OrderCardReplacement: true
                    CardSettings:
                      SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                      SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                      SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                      ValidateFleetId: false
                      CardGroupId: 156
                      CardDeliveryType: 1
                      DeliveryContactTitle: Mr
                      DeliveryContactName: SAPE
                      DeliveryCompanyName: welcome
                      DeliveryAddressLine1: 123/89
                      DeliveryAddressLine2: Mac Street
                      DeliveryAddressLine3: NLStrret
                      DeliveryZipCode: '1213242'
                      DeliveryCity: Chennai
                      DeliveryRegionId: 54
                      DeliveryRegion: Mountain Province
                      DeliveryCountry: CZ
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@examp"le.com
                      PINDeliveryAddressType: 1
                      PINAdviceType: 1
                      PINDeliveryContactTitle: 5058F1AF
                      PINDeliveryContactName: WILTON
                      PINDeliveryCompanyName: WILTON AUFDERHAR
                      PINDeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      PINDeliveryAddressLine2: Wall street
                      PINDeliveryAddressLine3: Wall Street
                      PINDeliveryZipCode: '12103'
                      PINDeliveryCity: Berlin
                      PINDeliveryRegionId: 1
                      PINDeliveryRegion: Berlin-Brandenburg
                      PINDeliveryCountry: DEU
                      PINPhoneNumber: '99999999999'
                      PINEmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                      SaveForCardReissue: false
                      ExpiryDate: '1221'
                    TargetStatusId: 0
                    AccountId: 854
                    AccountNumber: PH50000844
                    CardExpiryDate: '20181031'
                    CardId: 125
                    ColCoCode: 86
                    ColCoId: 1
                    PAN: '7002861007636000020'
                    PayerId: 853
                    PayerNumber: PH50000843
                  ReasonText: Lost
                  RequestId: '1'
            examples:
              Example 1:
                value:
                  Cards:
                  - Caller: NextGenUI
                    IsReplacementChargeable: true
                    NotifyCaller: false
                    NotifyCallerOnSync: false
                    OrderCardReplacement: true
                    CardSettings:
                      SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                      SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                      SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                      ValidateFleetId: false
                      CardGroupId: 156
                      CardDeliveryType: 1
                      DeliveryContactTitle: Mr
                      DeliveryContactName: SAPE
                      DeliveryCompanyName: welcome
                      DeliveryAddressLine1: 123/89
                      DeliveryAddressLine2: Mac Street
                      DeliveryAddressLine3: NLStrret
                      DeliveryZipCode: '1213242'
                      DeliveryCity: Chennai
                      DeliveryRegionId: 54
                      DeliveryRegion: Mountain Province
                      DeliveryCountry: CZ
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@examp"le.com
                      PINDeliveryAddressType: 1
                      PINAdviceType: 1
                      PINDeliveryContactTitle: 5058F1AF
                      PINDeliveryContactName: WILTON
                      PINDeliveryCompanyName: WILTON AUFDERHAR
                      PINDeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      PINDeliveryAddressLine2: Wall street
                      PINDeliveryAddressLine3: Wall Street
                      PINDeliveryZipCode: '12103'
                      PINDeliveryCity: Berlin
                      PINDeliveryRegionId: 1
                      PINDeliveryRegion: Berlin-Brandenburg
                      PINDeliveryCountry: DEU
                      PINPhoneNumber: '99999999999'
                      PINEmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                      SaveForCardReissue: false
                      ExpiryDate: '1221'
                    TargetStatusId: 0
                    AccountId: 854
                    AccountNumber: PH50000844
                    CardExpiryDate: '20181031'
                    CardId: 125
                    ColCoCode: 86
                    ColCoId: 1
                    PAN: '7002861007636000020'
                    PayerId: 853
                    PayerNumber: PH50000843
                  ReasonText: Lost
                  RequestId: '1'
        required: false
      responses:
        '200':
          description: Cancel cards response. The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CancelCardResponse'
                - example:
                    RequestId: ba093ec6-a738-47d3-d25d-2f15a6d04fc6
                    MainReference: 466536
                    OrderReplacementReference: 466537
                    Status: SUCCESS
                    Data:
                    - ReplacementCardReference: 599643
                      UpdateCardReference: 39269
                      AccountId: 1227
                      AccountNumber: CZ00000927
                      CardExpiryDate: '20240930'
                      CardId: 462079
                      ColCoCode: 32
                      ColCoId: 32
                      PAN: '7002329040232130111'
                      PayerId: 1227
                      PayerNumber: CZ00000927
              examples:
                Example 1:
                  value:
                    RequestId: ba093ec6-a738-47d3-d25d-2f15a6d04fc6
                    MainReference: 466536
                    OrderReplacementReference: 466537
                    Status: SUCCESS
                    Data:
                    - ReplacementCardReference: 599643
                      UpdateCardReference: 39269
                      AccountId: 1227
                      AccountNumber: CZ00000927
                      CardExpiryDate: '20240930'
                      CardId: 462079
                      ColCoCode: 32
                      ColCoId: 32
                      PAN: '7002329040232130111'
                      PayerId: 1227
                      PayerNumber: CZ00000927
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [PAN]'
                      AdditionalInfo:
                        PAN: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [PAN]'
                      AdditionalInfo:
                        PAN: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/updatestatus:
    post:
      tags:
      - Card
      summary: cardupdatestatus
      description: "This API allows updating of the card status for one or more cards (up to 500) within a single API call.  If the API call succeeds, the API will return a reference number and queue the request for asynchronous processing. \r\n\r\n#### New version updates\r\n  * Oauth authentication to access the API\r\n  * Change in the request body\r\n    * Pin change related parameters - SelfSelectedEncryptedPIN, SelfSelectedPINKeyID, SelfSelectedPINSessionKey\r\n    * PIN delivery address details have been added along with Email and Phone number for card and PIN delivery. \r\n    * SaveForPINReminder - The given address will be used for sending PIN reminders in future when requested.\r\n    * SaveForCardReissue - If this is specified, the contact address will be saved in cards platform for card reissue processing.\r\n\r\n#### Supported operations\r\n  * Updating a card status to Temporary block, Unblock, Block (Cancelled)\r\n    or Damaged\r\n  * Requesting a replacement card when status is set to Block or Damaged\r\n\r\n#### Validation rules \r\n  * Number of cards per request does not exceed 500\r\n  * A card can be changed to proposed status as per the card status transition configuration in the Shell Card Platform\r\n  * Locating a card -\r\n    * If target status set to **TemporaryBlock**, then only one matching active card should exist in the Shell Card Platform for the given **PAN** and **CardExpiryDate**\r\n    * If target status set to **Unblock** or **Block**, then only one matching card should exist in the Shell Card Platform for the given **PAN** and **CardExpiryDate**\r\n  * A valid Reason Id or Reason Text is provided\r\n    * If target status set to **Block** or **Damaged** and a **ReasonText** is provided, the value must be from the fixed list - *'Lost'*, *'Stolen'* or *'Card no longer required'*\r\n  * For the given card, there is no Status Update request already submitted via this API and is being processed\r\n  * The **OrderReplacementCard** field is set to True only for cards with a target status set to Block or Damaged\r\n\r\n#### API response \r\n  * A main reference number for the API request (**OrderReplacementReference**)\r\n  * A list of successfully validated and accepted cards along with the individual reference numbers (**UpdateCardReference**) for each of the successful  request \r\n  * A list of cards (**ErrorCards**) that failed validation along with the appropriate error code and message\r\n\r\n#### Asynchronous processing of valid API request \r\n  * Replacement cards\r\n    * Request for a replacement card will be placed only when the Block card or Block damaged card request is successfully placed.\r\n    * The Replacement card request will be processed only when the permanent Block card request is successfully processed. In case of damaged card request, the replacement card request will be processed immediately.\r\n  * Damaged cards\r\n    * Setting a card to Damaged will automatically trigger a request to permanently block the card. This will only take effect once the ‘Damaged Active’ period has passed.\r\n    * The Damaged card active period is the number of days after which a \"Damaged\" card request will be processed. This value is configured at ColCo level.\r\n    * If a card is reported as damaged at 10pm local time on 1st Nov and the damaged card period is set to 10 days, then the block request will be submitted to the Shell Card Platform on 11th Nov 00-01 local time.\r\n    * If during the damage card active period another request is made to set the card to Temporarily Blocked or Blocked permanently (cancelled), then the damaged card request will be marked as superseded and the new Temporary Block or Block (cancelled) will be processed."
      operationId: CardUpdateStatus
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Update status request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardManagementV1UpdatestatusRequest'
              - description: Update status request body
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Cards:
                  - Caller: Motix
                    IsReplacementChargeable: true
                    NotifyCaller: true
                    NotifyCallerOnSync: false
                    OrderCardReplacement: true
                    CardSettings:
                      SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                      SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                      SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                      ValidateFleetId: false
                      CardGroupId: 156
                      CardDeliveryType: 1
                      DeliveryContactTitle: Mr
                      DeliveryContactName: SAPE
                      DeliveryCompanyName: welcome
                      DeliveryAddressLine1: 123/89
                      DeliveryAddressLine2: Mac Street
                      DeliveryAddressLine3: NLStrret
                      DeliveryZipCode: '1213242'
                      DeliveryCity: Chennai
                      DeliveryRegionId: 54
                      DeliveryRegion: Mountain Province
                      DeliveryCountry: CZ
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      PINDeliveryAddressType: 1
                      PINAdviceType: 1
                      PINDeliveryContactTitle: 50388633F
                      PINDeliveryContactName: WILTON
                      PINDeliveryCompanyName: WILTON AUFDERHAR
                      PINDeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      PINDeliveryAddressLine2: Wall street
                      PINDeliveryAddressLine3: Wall Street
                      PINDeliveryZipCode: '12103'
                      PINDeliveryCity: Berlin
                      PINDeliveryRegionId: 1
                      PINDeliveryRegion: Berlin-Brandenburg
                      PINDeliveryCountry: DEU
                      PINPhoneNumber: '99999999999'
                      PINEmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                      SaveForCardReissue: false
                      ExpiryDate: '1221'
                    TargetStatusId: 0
                    AccountId: 1223
                    AccountNumber: CZ00000928
                    CardExpiryDate: '20221215'
                    CardId: 385360
                    ColCoCode: 32
                    ColCoId: 32
                    PAN: '7077327290223410816'
                    PANID: 17350064
                    PayerId: 1223
                    PayerNumber: CZ00000928
                  ReasonId: 1236
                  ReasonText: Unblock
                  TargetStatus: Unblock
            examples:
              Example 1:
                value:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Cards:
                  - Caller: Motix
                    IsReplacementChargeable: true
                    NotifyCaller: true
                    NotifyCallerOnSync: false
                    OrderCardReplacement: true
                    CardSettings:
                      SelfSelectedEncryptedPIN: 0hCx7wfFp3z8QkW8dElhHiMwCwC1
                      SelfSelectedPINKeyID: 123aaa33198dc8f3s4k77dsc78
                      SelfSelectedPINSessionKey: WoWB+8UEd71+8QXwuE75flkAQ /4Q6gDFSn027oJ/0ne6LmzVIxJ87yoeqKS /C+OIBJ7bTvasLH+xvDSZtzoOZHr 7wfFmpfSyet8KnKjnagSicrUgpGk 7qFyOw3iA9/Qd6Oy9djYR3C3cDWEpj /YREZ1lBGReb9fqdSpoKx8mnGuPAw7
                      ValidateFleetId: false
                      CardGroupId: 156
                      CardDeliveryType: 1
                      DeliveryContactTitle: Mr
                      DeliveryContactName: SAPE
                      DeliveryCompanyName: welcome
                      DeliveryAddressLine1: 123/89
                      DeliveryAddressLine2: Mac Street
                      DeliveryAddressLine3: NLStrret
                      DeliveryZipCode: '1213242'
                      DeliveryCity: Chennai
                      DeliveryRegionId: 54
                      DeliveryRegion: Mountain Province
                      DeliveryCountry: CZ
                      PhoneNumber: '99999999999'
                      EmailAddress: xxxxx@example.com
                      PINDeliveryAddressType: 1
                      PINAdviceType: 1
                      PINDeliveryContactTitle: 50388633F
                      PINDeliveryContactName: WILTON
                      PINDeliveryCompanyName: WILTON AUFDERHAR
                      PINDeliveryAddressLine1: Herrn Dieter Whausen Lansstrab
                      PINDeliveryAddressLine2: Wall street
                      PINDeliveryAddressLine3: Wall Street
                      PINDeliveryZipCode: '12103'
                      PINDeliveryCity: Berlin
                      PINDeliveryRegionId: 1
                      PINDeliveryRegion: Berlin-Brandenburg
                      PINDeliveryCountry: DEU
                      PINPhoneNumber: '99999999999'
                      PINEmailAddress: xxxxx@example.com
                      SaveForPINReminder: false
                      SaveForCardReissue: false
                      ExpiryDate: '1221'
                    TargetStatusId: 0
                    AccountId: 1223
                    AccountNumber: CZ00000928
                    CardExpiryDate: '20221215'
                    CardId: 385360
                    ColCoCode: 32
                    ColCoId: 32
                    PAN: '7077327290223410816'
                    PANID: 17350064
                    PayerId: 1223
                    PayerNumber: CZ00000928
                  ReasonId: 1236
                  ReasonText: Unblock
                  TargetStatus: Unblock
        required: false
      responses:
        '200':
          description: Update cards status response.The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateCardStatusResponse'
                - example:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    MainReference: 466543
                    OrderReplacementReference: 466544
                    Status: SUCCESS
                    Data:
                    - ReplacementCardReference: 599649
                      UpdateCardReference: 39270
                      AccountId: 1227
                      AccountNumber: CZ00000927
                      CardExpiryDate: '20240930'
                      CardId: 462083
                      ColCoCode: 32
                      ColCoId: 32
                      PAN: '7077327290223421201'
                      PANID: 17352931
                      MaskedPAN: 7077327******421201
                      PayerId: 1227
                      PayerNumber: CZ00000927
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    MainReference: 466543
                    OrderReplacementReference: 466544
                    Status: SUCCESS
                    Data:
                    - ReplacementCardReference: 599649
                      UpdateCardReference: 39270
                      AccountId: 1227
                      AccountNumber: CZ00000927
                      CardExpiryDate: '20240930'
                      CardId: 462083
                      ColCoCode: 32
                      ColCoId: 32
                      PAN: '7077327290223421201'
                      PANID: 17352931
                      MaskedPAN: 7077327******421201
                      PayerId: 1227
                      PayerNumber: CZ00000927
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                  Status: FAILED
                  Errors:
                  - Code: E0001
                    Title: Validation Error
                    Detail: 'Missing / Invalid value(s) for: [PAN]'
                    AdditionalInfo:
                      PAN: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [PAN]'
                      AdditionalInfo:
                        PAN: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /fleetmanagement/v1/master/purchasecategory:
    post:
      tags:
      - Card
      summary: PurchaseCategory
      description: "This API will allow querying the purchase categories of Card\r\n for the given country and/or card type.\r\n  It will also include the below data associated with each of the purchase categories on it’s response.\r\n  *  List of fuel and non-fuel product sets associated. \r\n  *  List of products configured in each product set"
      operationId: PurchaseCategory
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: PurchaseCategory request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PurchaseCategoryRequest'
              - description: PurchaseCategory request body
                example:
                  ColCoId: 32
                  ColCocode: null
                  cardtypeId: 100
                  LanguageCode: EN-GB
            examples:
              Example 1:
                value:
                  ColCoId: 32
                  ColCocode: null
                  cardtypeId: 100
                  LanguageCode: EN-GB
        required: false
      responses:
        '200':
          description: The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PurchaseCategoryResponse'
                - example:
                    PurchaseCategories:
                    - Code: '0'
                      Id: 100
                      IsVisible: false
                      Name: 0 - Diesel Products and TMF
                      Title: 0 - Diesel Products and TMF
                      Description: 0 - Diesel Products and TMF
                      ProductGroups:
                      - IsDefault: false
                        IsFuelType: true
                        Name: Other Fuels
                        ProductGroupId: P102
                        Products:
                        - Description: Hydrogen
                          GlobalProductCode: '019'
                        - Description: CNG
                          GlobalProductCode: '029'
                        - Description: LPG
                          GlobalProductCode: '034'
                        ReferenceId: 100
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 47aca5b8-8186-49e5-b8d0-30f73fffd0f1
              examples:
                Example 1:
                  value:
                    PurchaseCategories:
                    - Code: '0'
                      Id: 100
                      IsVisible: false
                      Name: 0 - Diesel Products and TMF
                      Title: 0 - Diesel Products and TMF
                      Description: 0 - Diesel Products and TMF
                      ProductGroups:
                      - IsDefault: false
                        IsFuelType: true
                        Name: Other Fuels
                        ProductGroupId: P102
                        Products:
                        - Description: Hydrogen
                          GlobalProductCode: '019'
                        - Description: CNG
                          GlobalProductCode: '029'
                        - Description: LPG
                          GlobalProductCode: '034'
                        ReferenceId: 100
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: 47aca5b8-8186-49e5-b8d0-30f73fffd0f1
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/details:
    post:
      tags:
      - Card
      summary: carddetails
      description: >-
        This API allows to fetch details of a single fuel card from the Shell Card Platform. If a **CardId** request parameter is provided, this will return a single card.  If a **PAN** request parameter is provided, this may result in multiple fuel cards matching the search criteria. The card details of the most recently issued card will be returned.



          #### Supported operations

          * Get card by card id or PAN
      operationId: CardDetails
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Card details request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardDetailsRequest'
              - description: Card details request body
                example:
                  ColCoCode: 86
                  ColCoId: 1
                  ColCoCountryCode: PH
                  ClientReferenceId: adc-1671-ftwiQweh-67UJs
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountNumber: PH50000844
                  AccountId: 854
                  PAN: '7002861007636000020'
                  CardId: 125
                  TokenTypeID: 107
                  TokenTypeName: PH FLE NAT SIN R1
                  CreationDate: '20181001'
                  EffectiveDate: '20181001'
                  IncludeBundleDetails: false
                  IncludeIntermediateStatus: false
                  IncludeScheduledCardBlocks: false
            examples:
              Example 1:
                value:
                  ColCoCode: 86
                  ColCoId: 1
                  ColCoCountryCode: PH
                  ClientReferenceId: adc-1671-ftwiQweh-67UJs
                  PayerNumber: PH50000843
                  PayerId: 853
                  AccountNumber: PH50000844
                  AccountId: 854
                  PAN: '7002861007636000020'
                  CardId: 125
                  TokenTypeID: 107
                  TokenTypeName: PH FLE NAT SIN R1
                  CreationDate: '20181001'
                  EffectiveDate: '20181001'
                  IncludeBundleDetails: false
                  IncludeIntermediateStatus: false
                  IncludeScheduledCardBlocks: false
        required: false
      responses:
        '200':
          description: Details of requested fuel Card.The http status code 200 and the Error.Code "0000" in the response body would indicate the API call is successful. The http status code 200 with Error Code other than "0000" in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardDetailsResponse'
                - example:
                    PayerId: 853
                    PayerNumber: PH50000843
                    AccountId: 854
                    AccountNumber: PH50000844
                    AccountShortName: PARKLEY
                    ColCoCountryCode: PH
                    LocalCurrencyCode: EUR
                    LocalCurrencySymbol: €
                    CardId: 125
                    PAN: '7002861007636000020'
                    StatusId: 1
                    Status: string
                    OdometerPrompt: true
                    FleetIdPrompt: true
                    PINType: Card
                    HasPIN: true
                    IsSelfSelectedPIN: true
                    TemporaryBlockAllowed: true
                    UnblockAllowed: true
                    PermanentBlockAllowed: true
                    IssueNumber: 1
                    ReissueSetting: 'True'
                    InternationalPOSLanguageID: 8
                    InternationalPOSLanguageCode: eng
                    LocalPOSLanguageID: 8
                    LocalPOSLanguageCode: eng
                    CardTypeCode: '7077861'
                    CardTypeId: 1
                    CardTypeName: Philippines CRT 7077861
                    TokenTypeId: 107
                    TokenTypeName: PH FLE NAT SIN R1
                    IsChipCard: false
                    IsMagStripCard: true
                    IsVirtualCard: true
                    PurchaseCategoryCode: '6'
                    PurchaseCategoryId: 54
                    PurchaseCategoryName: 2 - FuelSave and Lubricants
                    IsCRT: true
                    IsFleet: true
                    IsInternational: true
                    IsNational: true
                    IsPartnerSitesIncluded: true
                    IsShellSitesOnly: true
                    FuelSets:
                    - ProductRestrictionId: 120
                      Description: 'FS02: Diesel'
                    NonFuelSets:
                    - ProductRestrictionId: 120
                      Description: 'FS02: Diesel'
                    IssuedDate: '20181001'
                    ExpiryDate: '20181031'
                    LastUsedDate: 20181001 13:23:55
                    MisuseDate: 20181001 13:23:55
                    Temperature: 10-Warm
                    DriverName: ROBERT
                    VRN: MV65YLH
                    EmbossText: PARKLEY
                    CardGroupId: 5
                    CardGroupName: GROUP1
                    RenewalDate: '20181001'
                    RenewedCardId: 1325
                    RenewedCardStatusId: 10
                    RenewedCardStatus: New
                    RenewedCardExpiryDate: '20181031'
                    RenewedCardIssueNumber: 2
                    RenewedCardReissueSetting: 'True'
                    CreationDate: '20181001'
                    EffectiveDate: '20181001'
                    LastModifiedDate: 20181001 13:23:55
                    BundleId: null
                    CardDeliveryAddress:
                      ContactForeName: ROBERT
                      ContactMiddleName: M
                      ContactLastName: Langdon
                      ContactTitle: Mr.
                      CompanyName: PARKLEY Philippines
                      AddressId: 1768
                      AddressLine1: No 345, 1st cross,
                      AddressLine2: 10th avenue
                      AddressLine3: makati city
                      ZipCode: '1630'
                      City: manila
                      RegionId: null
                      Region: EU
                      CountryId: 1
                      CountryISOCode: PH
                      Country: Philippines
                    PINDeliveryAddress:
                      ContactForeName: ROBERT
                      ContactMiddleName: M
                      ContactLastName: Langdon
                      ContactTitle: Mr.
                      CompanyName: PARKLEY Philippines
                      AddressId: 1768
                      AddressLine1: No 345, 1st cross,
                      AddressLine2: 10th avenue
                      AddressLine3: makati city
                      ZipCode: '1630'
                      City: manila
                      RegionId: null
                      Region: EU
                      CountryId: 1
                      CountryISOCode: PH
                      Country: Philippines
                    CardBlockSchedules:
                    - FromDate: '20210212'
                      ToDate: '20210212'
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
              examples:
                Example 1:
                  value:
                    PayerId: 853
                    PayerNumber: PH50000843
                    AccountId: 854
                    AccountNumber: PH50000844
                    AccountShortName: PARKLEY
                    ColCoCountryCode: PH
                    LocalCurrencyCode: EUR
                    LocalCurrencySymbol: €
                    CardId: 125
                    PAN: '7002861007636000020'
                    StatusId: 1
                    Status: string
                    OdometerPrompt: true
                    FleetIdPrompt: true
                    PINType: Card
                    HasPIN: true
                    IsSelfSelectedPIN: true
                    TemporaryBlockAllowed: true
                    UnblockAllowed: true
                    PermanentBlockAllowed: true
                    IssueNumber: 1
                    ReissueSetting: 'True'
                    InternationalPOSLanguageID: 8
                    InternationalPOSLanguageCode: eng
                    LocalPOSLanguageID: 8
                    LocalPOSLanguageCode: eng
                    CardTypeCode: '7077861'
                    CardTypeId: 1
                    CardTypeName: Philippines CRT 7077861
                    TokenTypeId: 107
                    TokenTypeName: PH FLE NAT SIN R1
                    IsChipCard: false
                    IsMagStripCard: true
                    IsVirtualCard: true
                    PurchaseCategoryCode: '6'
                    PurchaseCategoryId: 54
                    PurchaseCategoryName: 2 - FuelSave and Lubricants
                    IsCRT: true
                    IsFleet: true
                    IsInternational: true
                    IsNational: true
                    IsPartnerSitesIncluded: true
                    IsShellSitesOnly: true
                    FuelSets:
                    - ProductRestrictionId: 120
                      Description: 'FS02: Diesel'
                    NonFuelSets:
                    - ProductRestrictionId: 120
                      Description: 'FS02: Diesel'
                    IssuedDate: '20181001'
                    ExpiryDate: '20181031'
                    LastUsedDate: 20181001 13:23:55
                    MisuseDate: 20181001 13:23:55
                    Temperature: 10-Warm
                    DriverName: ROBERT
                    VRN: MV65YLH
                    EmbossText: PARKLEY
                    CardGroupId: 5
                    CardGroupName: GROUP1
                    RenewalDate: '20181001'
                    RenewedCardId: 1325
                    RenewedCardStatusId: 10
                    RenewedCardStatus: New
                    RenewedCardExpiryDate: '20181031'
                    RenewedCardIssueNumber: 2
                    RenewedCardReissueSetting: 'True'
                    CreationDate: '20181001'
                    EffectiveDate: '20181001'
                    LastModifiedDate: 20181001 13:23:55
                    BundleId: null
                    CardDeliveryAddress:
                      ContactForeName: ROBERT
                      ContactMiddleName: M
                      ContactLastName: Langdon
                      ContactTitle: Mr.
                      CompanyName: PARKLEY Philippines
                      AddressId: 1768
                      AddressLine1: No 345, 1st cross,
                      AddressLine2: 10th avenue
                      AddressLine3: makati city
                      ZipCode: '1630'
                      City: manila
                      RegionId: null
                      Region: EU
                      CountryId: 1
                      CountryISOCode: PH
                      Country: Philippines
                    PINDeliveryAddress:
                      ContactForeName: ROBERT
                      ContactMiddleName: M
                      ContactLastName: Langdon
                      ContactTitle: Mr.
                      CompanyName: PARKLEY Philippines
                      AddressId: 1768
                      AddressLine1: No 345, 1st cross,
                      AddressLine2: 10th avenue
                      AddressLine3: makati city
                      ZipCode: '1630'
                      City: manila
                      RegionId: null
                      Region: EU
                      CountryId: 1
                      CountryISOCode: PH
                      Country: Philippines
                    CardBlockSchedules:
                    - FromDate: '20210212'
                      ToDate: '20210212'
                    Error:
                      Code: '0000'
                      Description: Success
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/move:
    post:
      tags:
      - Card
      summary: CardMove
      description: "This API allows to move one or more fuel cards (up to 500) across card groups within a single account or across accounts under the same payer. If the API call succeeds, the API will return a reference number and queue the request for asynchronous processing.\r\n#### Supported operations\r\n  * Moving card to exisitng card group\r\n  * Moving card to new card group\r\n  * Removing a card from a card group \r\n\r\n#### Validation rules\r\n  * Number of cards per request does not exceed 500\r\n  * Given **PAN** for a card matches with only one card\r\n  * A card is allowed to be moved to the **TargetCardGroupId** or **TargetAccountNumber**\r\n  * A pending move request does not exist in the queue for a card submitted on the same date (customers local)\r\n  * A card has not been moved as part of a previous request on the same date (customers local)\r\n\r\n#### API response \r\n  * A main reference number for the API request (**MoveCardRequestReference**)\r\n  * Individual reference numbers (**MoveCardReference**) for each card move request that passes validation  \r\n  * A list of cards (**ErrorCards**) that failed validation along with the appropriate error code and message\r\n\r\n#### Asynchronous processing of valid API request \r\n  * Move card requests that have been submitted and processed will be reflected after midnight according to the customers local date\r\n"
      operationId: CardMove
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Move cards request body.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardMoveRequest'
              - description: Move cards request body.
                example:
                  ColCoCode: 86
                  ColCoId: 1
                  ColCoCountryCode: PH
                  PayerNumber: PH50000843
                  PayerId: 853
                  Cards:
                  - AccountNumber: PH50000844
                    AccountId: 854
                    PAN: '7002861007636000020'
                    CardId: 125
                  TargetAccountId: 855
                  TargetAccountNumber: GB000000123
                  TargetCardGroupId: 93
                  TargetNewCardGroupName: GROUP1
                  RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
            examples:
              Example 1:
                value:
                  ColCoCode: 86
                  ColCoId: 1
                  ColCoCountryCode: PH
                  PayerNumber: PH50000843
                  PayerId: 853
                  Cards:
                  - AccountNumber: PH50000844
                    AccountId: 854
                    PAN: '7002861007636000020'
                    CardId: 125
                  TargetAccountId: 855
                  TargetAccountNumber: GB000000123
                  TargetCardGroupId: 93
                  TargetNewCardGroupName: GROUP1
                  RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
        required: false
      responses:
        '200':
          description: Move Card response.The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CardMoveResponse'
                - example:
                    MoveCardRequestReference: 0
                    SuccessfulRequests:
                    - AccountNumber: PH50000844
                      AccountId: 854
                      PAN: '7002861007636000020'
                      CardId: 125
                      MoveCardReference: 9074
                    ErrorCards:
                    - AccountNumber: PH50000844
                      AccountId: 854
                      PAN: '7002861007636000020'
                      CardId: 125
                      ValidationErrorCode: '0000'
                      ValidationErrorDescription: Invalid parameter value – [ParameterName]
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
                    Error:
                      Description: Success
                      Code: '0000'
              examples:
                Example 1:
                  value:
                    MoveCardRequestReference: 0
                    SuccessfulRequests:
                    - AccountNumber: PH50000844
                      AccountId: 854
                      PAN: '7002861007636000020'
                      CardId: 125
                      MoveCardReference: 9074
                    ErrorCards:
                    - AccountNumber: PH50000844
                      AccountId: 854
                      PAN: '7002861007636000020'
                      CardId: 125
                      ValidationErrorCode: '0000'
                      ValidationErrorDescription: Invalid parameter value – [ParameterName]
                    RequestId: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
                    Error:
                      Description: Success
                      Code: '0000'
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
  /card-management/v1/pinreminder:
    post:
      tags:
      - Card
      summary: cardpinreminder
      description: "This API allows requesting a PIN reminder for a fuel card. If the API call succeeds, the API will return a reference number and queue the request for asynchronous processing. \r\n#### New version updates\r\n  * Oauth authentication to access the API\r\n  * Change in request body where PIN delivery type can be requested via Email, SMS or Post. PIN delivery contact can be set to different values based on previous contact details of card or pin delivery or can set specific contact details for this request. \r\n    * PINAdviceType\r\n    * PINContactType\r\n    * PINDeliverTo \r\n  * Please note that we have a **savePINReminder** parameter in order to save the contact details for future such requests. \r\n  * Change in response body where Card details are also provided along with expiry date and PAN details. \r\n\r\n#### Supported operations\r\n  * Request a pin reminder by card Id or PAN\r\n\r\n#### Validation rules\r\n  * Given **PAN** or **CardId** is active\r\n  * Given **PAN** matches only one active card\r\n  * Requested card has PIN\r\n  * There is no pending PIN Reminder request in the queue awaiting to be processed for the card\r\n  * A PIN reminder request has not been successfully processed in the last 48 hours for the card"
      operationId: CardPinReminder
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: PIN reminder request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CardManagementV1PinreminderRequest'
              - description: PIN reminder request body
                example:
                  AccountNumber: CZ00000927
                  ColCoCode: 32
                  PayerNumber: CZ00000927
                  PINReminderCardDetails:
                  - CardId: 463402
                    PAN: '7027329200000115820'
                    CardExpiryDate: '20241031'
                    PINAdviceType: 1
                    PINContactType: 4
                    PINDeliverTo:
                      ContactName: Alex
                      ContactTitle: Mr
                      CompanyName: CGI
                      AddressLine: Address1
                      ZipCode: '938373'
                      City: City1
                      RegionID: 0
                      CountryID: 0
                      PhoneNumber: '9998883332'
                      EmailAddress: abc.gmail.com
                      SavePINReminder: false
            examples:
              Example 1:
                value:
                  AccountNumber: CZ00000927
                  ColCoCode: 32
                  PayerNumber: CZ00000927
                  PINReminderCardDetails:
                  - CardId: 463402
                    PAN: '7027329200000115820'
                    CardExpiryDate: '20241031'
                    PINAdviceType: 1
                    PINContactType: 4
                    PINDeliverTo:
                      ContactName: Alex
                      ContactTitle: Mr
                      CompanyName: CGI
                      AddressLine: Address1
                      ZipCode: '938373'
                      City: City1
                      RegionID: 0
                      CountryID: 0
                      PhoneNumber: '9998883332'
                      EmailAddress: abc.gmail.com
                      SavePINReminder: false
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PINReminderResponse'
                - example:
                    RequestId: ba093ec6-a738-47d3-d25d-2f15a6d04fc6
                    MainReference: 466588
                    Status: SUCCESS
                    Data:
                    - CardId: 463402
                      PANID: null
                      PAN: null
                      CardExpiryDate: null
                      ReferenceId: 2360
              examples:
                Example 1:
                  value:
                    RequestId: ba093ec6-a738-47d3-d25d-2f15a6d04fc6
                    MainReference: 466588
                    Status: SUCCESS
                    Data:
                    - CardId: 463402
                      PANID: null
                      PAN: null
                      CardExpiryDate: null
                      ReferenceId: 2360
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/schedulecardblock:
    post:
      tags:
      - Card
      summary: ScheduleCardBlock
      description: "This API allows scheduling Card Block / Unblock requests for one or multiple cards (up to 500 (configurable)) within a single API call. This API is used to perform the following Actions:\r\n\r\n>  \r\n   *  AddOrUpdate (Schedule a new request or update an existing     scheduled request for the overlapping period.\r\n   *  AddAndOverwriteAll (all the existing requests of the given card will be removed and a new request with the specified FromDate and ToDate will be added.)\r\n   *  Delete (Deletes the scheduled request for the same From and To date)\r\n   *  DeleteAll (Deletes all the scheduled requests for the given card)\r\n\r\n> Requests that passed the below validations are queue:\r\n*  All Mandatory fields are passed in the request.\r\n*  Card is present in the Shell Card Platform. Only one matching card is available in the cards platform for the given PAN and expiry date for the requests\r\n*  The scheduled period start date or end date should be later than or equal to the current date.  \r\n\r\n> If all validations are passed, the request will be accepted and saved in the intermediate queue  and the API will return reference numbers for tracking purpose. \r\n\r\n> A background service will execute the block/unblock requests on a daily basis, based on the scheduled block or unblock date.\r\n\r\n  \r\n  *  The newly added block/unblock request will have a status ‘A’ when it is yet to be moved to the actual queue. \r\n  *  When the request is moved to the actual queue table, the status will be updated as ‘P’ if the request has a value for ‘ToDate’, else, the status will be updated as ‘S’ or ‘F’ based on whether the request has been successfully moved to the actual queue table or if an error is encountered during processing. \r\n  \r\n  *  When the unblock request is moved to the actual queue table, the status of the request will be changed from ‘P’ to ‘S’ or ‘F’ based on whether the request has been successfully moved to the actual queue table or if an error has occurred during processing.\r\n\r\n\r\n> If any of the validations fail, the API will return the appropriate error details in the response. \r\n> The API response will include:\r\n  *  An error entity holding the details of any error encountered.\r\n  * A list of submitted cards along with the individual reference numbers for each of the request."
      operationId: ScheduleCardBlock
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ScheduleCardBlockRequest'
              - description: request body
                example:
                  IsTimeSupported: true
                  ScheduleCardBlockCards:
                  - ColCoCode: 32
                    ColCoId: 32
                    AccountId: 928
                    AccountNumber: CZ00000928
                    PayerId: 928
                    PayerNumber: CZ00000928
                    CardId: 234
                    PAN: '7077327290223418348'
                    PANID: '130128'
                    CardExpiryDate: '20240731'
                    Action: AddOrUpdate
                    FromDate: 20230701 14:30
                    ToDate: 20230731 16:30
                    Caller: NextGenUI
                    NotifyCaller: true
            examples:
              Example 1:
                value:
                  IsTimeSupported: true
                  ScheduleCardBlockCards:
                  - ColCoCode: 32
                    ColCoId: 32
                    AccountId: 928
                    AccountNumber: CZ00000928
                    PayerId: 928
                    PayerNumber: CZ00000928
                    CardId: 234
                    PAN: '7077327290223418348'
                    PANID: '130128'
                    CardExpiryDate: '20240731'
                    Action: AddOrUpdate
                    FromDate: 20230701 14:30
                    ToDate: 20230731 16:30
                    Caller: NextGenUI
                    NotifyCaller: true
        required: false
      responses:
        '200':
          description: List of fuel cards. The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ScheduleCardBlockResponse'
                - example:
                    MainReference: 4124828
                    RequestId: b471023f-b1e1-45df-8fe8-126291bd0c30
                    Status: SUCCESS
                    Data:
                    - CardId: 458951
                      FromDate: 20230613 00:00
                      ToDate: 20230614 00:00
                      ReferenceId: 342
              examples:
                Example 1:
                  value:
                    MainReference: 4124828
                    RequestId: b471023f-b1e1-45df-8fe8-126291bd0c30
                    Status: SUCCESS
                    Data:
                    - CardId: 458951
                      FromDate: 20230613 00:00
                      ToDate: 20230614 00:00
                      ReferenceId: 342
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                  Status: FAILED
                  Errors:
                  - Code: E0001
                    Title: Validation Error
                    Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                    AdditionalInfo:
                      ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/autorenew:
    post:
      tags:
      - Card
      summary: autorenew
      description: "This API allows to update the reissue indicator of a single card. If the API call succeeds, the API will return a reference number for tracking purposes and queue the request for asynchronous processing.\r\n#### Supported operations\r\n  * Update the reissue indicator of a card to enable auto renewal\r\n  * Update the reissue indicator of a card to disable auto renewal\r\n\r\n#### Validation rules\r\n  * Card status must be either Active, Temporary Block (Customer), Temporary Block (Shell) or Pending Renewal, otherwise an error code 9016 is returned\r\n  \r\n#### API response\r\n  * Returns a reference number for the API request (**AutoRenewReference**)\r\n\r\n#### Asynchronous processing of valid API request\r\n  * If the provided card is superseded i.e. a replacement/new card is already issued, then the latest card's reissue indicator should be updated in the Shell Card Platform.\r\n  * Providing a **PAN** request paramter may result in multiple fuel cards being located in the Shell Card Platform. The card details of the most recently issued card will be considered."
      operationId: AutoRenew
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Auto renew request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AutoRenewCardRequest'
              - description: Auto renew request body
                example:
                  ColCoId: 32
                  ColCoCode: 32
                  PayerNumber: CZ00000928
                  PayerId: 1227
                  AutoRenewCards:
                  - AccountNumber: CZ00000929
                    AccountId: 1229
                    PAN: '7077327290223440243'
                    PANID: 17240826
                    CardId: 446472
                    ReissueSetting: true
            examples:
              Example 1:
                value:
                  ColCoId: 32
                  ColCoCode: 32
                  PayerNumber: CZ00000928
                  PayerId: 1227
                  AutoRenewCards:
                  - AccountNumber: CZ00000929
                    AccountId: 1229
                    PAN: '7077327290223440243'
                    PANID: 17240826
                    CardId: 446472
                    ReissueSetting: true
        required: false
      responses:
        '200':
          description: Auto renew response.The http status code 200 and the Error.Code '0000' in the response body would indicate the API call is successful. The http status code 200 with Error Code other than '0000' in the response body would indicate there is a failure in the API call.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AutoRenewCardResponse'
                - example:
                    MainReference: 326712
                    RequestId: 0e6fb42a-51b0-43b2-f010-92f822657f6a
                    Status: SUCCESS
                    Data:
                    - AutoRenewReferenceId: 226
                      CardIdAndPAN: 446472;7077327290223440243
                      PANID: 17240826
              examples:
                Example 1:
                  value:
                    MainReference: 326712
                    RequestId: 0e6fb42a-51b0-43b2-f010-92f822657f6a
                    Status: SUCCESS
                    Data:
                    - AutoRenewReferenceId: 226
                      CardIdAndPAN: 446472;7077327290223440243
                      PANID: 17240826
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                  Status: FAILED
                  Errors:
                  - Code: E0001
                    Title: Validation Error
                    Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                    AdditionalInfo:
                      ReferenceType: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [ReferenceType]'
                      AdditionalInfo:
                        ReferenceType: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/updatemobilepaymentregistrationstatus:
    post:
      tags:
      - Card
      summary: updatemobilepaymentregistrationstatus
      description: "This operation allows  update the approval status of Mobile Payment Registration requests requiring for Fleet Manager approval.\r\nIf the approval status is:\r\n*    “Approved” then the request status will be changed to Pending for processing. \r\n*    “Rejected” then status will be updated to “CI” (Failed) with appropriate error message. \r\n"
      operationId: UpdateMobilePaymentRegistrationStatus
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMPayRegStatusRequest'
              - description: Request body
                example:
                  ColCoId: 32
                  ColCoCode: 32
                  PayerId: 1223
                  PayerNumber: CZ00000923
                  MPayRequests:
                  - GlobalRequestID: '123'
                    Status: Rejected
                    ApproverUserID: AdminUser100
                    ApproverUserDisplayName: AdminUser100
                    Reason: approved
            examples:
              Example 1:
                value:
                  ColCoId: 32
                  ColCoCode: 32
                  PayerId: 1223
                  PayerNumber: CZ00000923
                  MPayRequests:
                  - GlobalRequestID: '123'
                    Status: Rejected
                    ApproverUserID: AdminUser100
                    ApproverUserDisplayName: AdminUser100
                    Reason: approved
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateMPayRegStatusResponse'
                - example:
                    RequestId: b471023f-b1e1-45df-8fe8-126291bd0c30
                    Status: SUCCESS
              examples:
                Example 1:
                  value:
                    RequestId: b471023f-b1e1-45df-8fe8-126291bd0c30
                    Status: SUCCESS
        '400':
          description: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ErrorObject'
                - example:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [PAN]'
                      AdditionalInfo:
                        PAN: null
              examples:
                Example 1:
                  value:
                    RequestId: 01837d82-a7af-4f7d-99dc-4e1f126da824
                    Status: FAILED
                    Errors:
                    - Code: E0001
                      Title: Validation Error
                      Detail: 'Missing / Invalid value(s) for: [PAN]'
                      AdditionalInfo:
                        PAN: null
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 233e4567-e89b-12d3-a456-426614174000
                  Status: FAILED
                  Errors:
                  - Code: E0003
                    Title: Unauthorized
                    Detail: Supplied credentials are invalid or user does not have access to the operation
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 233e4567-e89b-12d3-a456-426614174000
                    Status: FAILED
                    Errors:
                    - Code: E0003
                      Title: Unauthorized
                      Detail: Supplied credentials are invalid or user does not have access to the operation
                      AdditionalInfo: {}
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                  Status: FAILED
                  Errors:
                  - Code: E0005
                    Title: Resource Not Found
                    Detail: Requested resource not found
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: 976c5a14-7ed9-4306-b268-e158efd4dc4f
                    Status: FAILED
                    Errors:
                    - Code: E0005
                      Title: Resource Not Found
                      Detail: Requested resource not found
                      AdditionalInfo: {}
        '500':
          description: The server encountered an unexpected condition that  prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                  Status: FAILED
                  Errors:
                  - Code: E0002
                    Title: Unknown Error
                    Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                    AdditionalInfo: {}
              examples:
                Example 1:
                  value:
                    RequestId: b271f876-dcdd-4e10-bac8-d343649070da
                    Status: FAILED
                    Errors:
                    - Code: E0002
                      Title: Unknown Error
                      Detail: 'fc147d47-1881-497d-9254-429a0ad316e5: Internal Error'
                      AdditionalInfo: {}
      deprecated: false
      security:
      - BearerToken: []
  /pin-management/v1/generatepinkeys:
    get:
      tags:
      - Card
      summary: getkey
      description: Get a new public key that will be used to encrypt data for selected PIN process when ordering new Shell Card. This encrypted data is used for further processing.
      operationId: GetKey
      parameters:
      - name: RequestId
        in: header
        description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        required: true
        style: simple
        schema:
          type: string
      - name: fleet
        in: query
        description: If the public key will be used a long time for multiple files this parameter will be true. If the parameter is true then public Key will be valid for 90 days. If the parameter is false then the key will be valid for one time. default value will be false.
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GeneratePINKeyResponse'
                - example:
                    uid: 123aaa33198dc8f3s4k77dsc78
                    value: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUFvZ0dSQ3k4N1FjQ3d6MFI0NE9LTwpucEhhZ0p1bW83Wll1V21JdXY2b1ZseUxqYkcwWlgyUFBSUy9LVUdhbXdiWGQwMGtYeHBXbFA5cXJ2N2hYMlNSCkJ2TFJVWFR0TCtvWS9QajN0c2Z6d0liT3VDei9qUnQ5Uk9WdzNBTkZTNjF6blVFTkVsSlNXN2dudnJuL29USWwKRWlid2VVTE5aTlJObFRwQTI1QVhKanhXMzM3ZUx0Y2F5cXJiQlNJNVFmRitCTGJJbE1Rd2tqSkNhUFEzV0pUKwpxcnlCREFCME5ocm02VlBmK2toN2FyR2JqL3ZLS0NRWVBkQWhRKzI3OGp0ZGJZdFBzYWtjN0RqVXpTenl2Wm9HCmhiSEt4V0ZTODFnL2ZlQUZNbFFDVlErZk15ZVN5dFZKOGlmZjFZR2RydEJCdG16U0NRN2V0K1IwaHpUbzJXblcKZzREZG1oWmlZT0MvUU55dk5uY1VSeDRZMU84VW1nSmorNE56c3VyQ2dQMmRSUjNpVXRIYlZaZjRzTEpZWk5CWApORGxjUDNzYWlwTXJ6Z0RpM0VCbWZzdEJOODdvWVdsRzRQNmlPVGt3dzdDVyt0TUdRNmJPcVBBNFF0cWMrYUZMCktZR3FWREhWRnBhZWdwYXl0U2g3T25nd0cwckJod0M4ODNpeVFaZDNKRW1lSWt2V05wYTVRSExqRmJKTEg4M2YKdk9TR2E0aGR6ZmZqYUhUM2VvR2VCRU5NaTZIbFo4RVZHWUh0VUpXZGMzZ2h5OHdPbmZkTlN2NzV3SUZYbHNragpIdHM3Z3NkM3hDN1B3ZnBqOEV5Lyt2aTVLNHM5M29IaE5TYlRhNlUzNUVsZkFXL20zK1YxWjZqVUpwRWpmZkZYCnI0YlFiR3pQNVhWYkNKL21ndmVNM3lNQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=
              examples:
                Example 1:
                  value:
                    uid: 123aaa33198dc8f3s4k77dsc78
                    value: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUFvZ0dSQ3k4N1FjQ3d6MFI0NE9LTwpucEhhZ0p1bW83Wll1V21JdXY2b1ZseUxqYkcwWlgyUFBSUy9LVUdhbXdiWGQwMGtYeHBXbFA5cXJ2N2hYMlNSCkJ2TFJVWFR0TCtvWS9QajN0c2Z6d0liT3VDei9qUnQ5Uk9WdzNBTkZTNjF6blVFTkVsSlNXN2dudnJuL29USWwKRWlid2VVTE5aTlJObFRwQTI1QVhKanhXMzM3ZUx0Y2F5cXJiQlNJNVFmRitCTGJJbE1Rd2tqSkNhUFEzV0pUKwpxcnlCREFCME5ocm02VlBmK2toN2FyR2JqL3ZLS0NRWVBkQWhRKzI3OGp0ZGJZdFBzYWtjN0RqVXpTenl2Wm9HCmhiSEt4V0ZTODFnL2ZlQUZNbFFDVlErZk15ZVN5dFZKOGlmZjFZR2RydEJCdG16U0NRN2V0K1IwaHpUbzJXblcKZzREZG1oWmlZT0MvUU55dk5uY1VSeDRZMU84VW1nSmorNE56c3VyQ2dQMmRSUjNpVXRIYlZaZjRzTEpZWk5CWApORGxjUDNzYWlwTXJ6Z0RpM0VCbWZzdEJOODdvWVdsRzRQNmlPVGt3dzdDVyt0TUdRNmJPcVBBNFF0cWMrYUZMCktZR3FWREhWRnBhZWdwYXl0U2g3T25nd0cwckJod0M4ODNpeVFaZDNKRW1lSWt2V05wYTVRSExqRmJKTEg4M2YKdk9TR2E0aGR6ZmZqYUhUM2VvR2VCRU5NaTZIbFo4RVZHWUh0VUpXZGMzZ2h5OHdPbmZkTlN2NzV3SUZYbHNragpIdHM3Z3NkM3hDN1B3ZnBqOEV5Lyt2aTVLNHM5M29IaE5TYlRhNlUzNUVsZkFXL20zK1YxWjZqVUpwRWpmZkZYCnI0YlFiR3pQNVhWYkNKL21ndmVNM3lNQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BearerToken: []
  /card-management/v1/deliveryaddressupdate:
    post:
      tags:
      - Card
      summary: deliveryaddressupdate
      description: >-
        This API allows users to update the card’s delivery addresses (card delivery address used for card re-issue and PIN delivery address used when PIN reminder is requested)

        #### Supported operations

          * card delivery address update
      operationId: DeliveryAddressUpdate
      parameters:
      - name: apikey
        in: header
        description: This is the API key of the specific environment which needs to be passed by the client.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Delivery Address Update Request Body
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeliveryAddressUpdateRequest'
              - description: Delivery Address Update Request Body
                example:
                  ColCoId: 5
                  ColCoCode: 5
                  PayerId: 123456
                  PayerNumber: GB000000123
                  AccountId: 12356
                  AccountNumber: GB000000124
                  DeliveryAddressUpdates:
                  - CardId: 123
                    PAN: '7002051006629889654'
                    CardExpiryDate: '20170930'
                    UseCustomerDefaultAddress: true
                    UpdateCardRenewalAddress:
                      ContactName: Jack
                      ContactTitle: Mr
                      CompanyName: Travel Transport
                      AddressLine: Elm Street 11
                      ZipCode: 1023EA
                      City: London
                      RegionID: 2
                      CountryID: 8
                      EmailAddress: testmail@gmail.com
                      PhoneNumber: '+99999999999'
            examples:
              Example 1:
                value:
                  ColCoId: 5
                  ColCoCode: 5
                  PayerId: 123456
                  PayerNumber: GB000000123
                  AccountId: 12356
                  AccountNumber: GB000000124
                  DeliveryAddressUpdates:
                  - CardId: 123
                    PAN: '7002051006629889654'
                    CardExpiryDate: '20170930'
                    UseCustomerDefaultAddress: true
                    UpdateCardRenewalAddress:
                      ContactName: Jack
                      ContactTitle: Mr
                      CompanyName: Travel Transport
                      AddressLine: Elm Street 11
                      ZipCode: 1023EA
                      City: London
                      RegionID: 2
                      CountryID: 8
                      EmailAddress: testmail@gmail.com
                      PhoneNumber: '+99999999999'
        required: false
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeliveryAddressUpdateResponse'
                - example:
                    RequestId: eb621f45-a543-4d9a-a934-2f223b263c42
                    ServiceReference: 123456
                    DeliveryAddressUpdateReferences:
                      CardId: 12345
                      CardPAN: '7002051006629889654'
                      AccountId: 12356
                      AccountNumber: GB000000124
                      ReferenceId: 573567
                      ErrorInfo: 'null'
                    Error:
                      Code: '0000'
                      Description: Success
              examples:
                Example 1:
                  value:
                    RequestId: eb621f45-a543-4d9a-a934-2f223b263c42
                    ServiceReference: 123456
                    DeliveryAddressUpdateReferences:
                      CardId: 12345
                      CardPAN: '7002051006629889654'
                      AccountId: 12356
                      AccountNumber: GB000000124
                      ReferenceId: 573567
                      ErrorInfo: 'null'
                    Error:
                      Code: '0000'
                      Description: Success
        '400':
          description: "The server cannot or will not process the request  due to something that is perceived to be a client\r\n error (e.g., malformed request syntax, invalid \r\n request message framing, or deceptive request routing)."
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Bad Request
                    detail:
                      errorcode: The request contains bad syntax or cannot be fulfilled
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Bad Request
                      detail:
                        errorcode: The request contains bad syntax or cannot be fulfilled
        '401':
          description: The request has not been applied because it lacks valid  authentication credentials for the target resource.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Invalid ApiKey
                    detail:
                      errorcode: oauth.v2.InvalidApiKey
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Invalid ApiKey
                      detail:
                        errorcode: oauth.v2.InvalidApiKey
        '403':
          description: The server understood the request but refuses to authorize it.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  Error:
                    Code: '0002'
                    Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
              examples:
                Example 1:
                  value:
                    Error:
                      Code: '0002'
                      Description: User does not have access to one or more payers and/or accounts / Logged in user does not have access to the requested operation.
        '404':
          description: The origin server did not find a current representation  for the target resource or is not willing to disclose  that one exists.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Unable to identify proxy for host
                    detail:
                      errorcode: messaging.adaptors.http.flow.ApplicationNotFound
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Unable to identify proxy for host
                      detail:
                        errorcode: messaging.adaptors.http.flow.ApplicationNotFound
        '500':
          description: The server encountered an unexpected condition the prevented it from fulfilling the request.
          headers: {}
          content:
            application/json:
              schema:
                example:
                  fault:
                    faultstring: Internal Server error
                    detail:
                      errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
              examples:
                Example 1:
                  value:
                    fault:
                      faultstring: Internal Server error
                      detail:
                        errorcode: steps.basicauthentication.InvalidBasicAuthenticationSource
      deprecated: false
      security:
      - BasicAuth: []
components:
  schemas:
    LoggedInUserRequest:
      title: LoggedInUserRequest
      type: object
      properties:
        IncludePayerGroup:
          type: boolean
          description: True/False. The output will include the payer group information only when true is passed.
          default: false
          example: false
        IncludeEIDDetails:
          type: boolean
          description: True/False. The output will include the EID (Electronic Invoice data) information only when true is passed..
          default: false
          example: false
        RequestedAPIName:
          type: string
          description: >-
            Name of the API on which user access needs to be validated

            Optional.
          nullable: true
          example: Name of the API
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.</br>

            Optional.</br>

            This input is a search criterion.</br>

            Note: If PayerId or PayerNumber is provided in the input, the given payer will be available in the output if the user has access to the given payer.
          format: int32
          nullable: true
          example: 123456
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.</br>

            Optional</br>

            This input is a search criterion.</br>

            Note: If Payerid or PayerNumber is provided in the input, the given payer will be available in the output if the user has access to the given payer.
          nullable: true
          example: GB00123456
      description: This entity models the data that is sent in the http request body for Logged In User operation. This class inherits RequestBase class.
    LoggedInUserResponse:
      title: LoggedInUserResponse
      type: object
      properties:
        UserName:
          type: string
          description: Logged in User Identifier
          nullable: true
          example: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
        DisplayName:
          type: string
          description: Name of the logged in user.
          nullable: true
          example: 3rdParty test
        IdMSSOID:
          type: string
          description: Single Sign On/Unique Identifier of the User in Identity Management system
          nullable: true
          example: D09PZ29h2eaBWi5Da8gcHsTRO10w8Qh9
        PreferredLanguage:
          type: string
          description: ISO culture code/ Language chosen by the logged in user
          nullable: true
          example: en-GB
        IsSuperAdmin:
          type: boolean
          description: Whether the user is a super administrator
          default: false
        DateFormat:
          type: string
          description: Preferred Date format for the logged in user
          nullable: true
          example: dd/MM/yy
        TimeFormat:
          type: string
          description: Preferred Time format for the logged in user
          nullable: true
          example: hh:mm tt
        WeekBegins:
          type: integer
          description: Preferred Day to Begin the Week. The value will be between 1 to 7 or null.
          format: int32
          nullable: true
          example: 1
        DisplayWeek:
          type: boolean
          description: Preferred Display Week on Fuel Prices configuration for the logged in User.
          default: true
        CSVSeparator:
          type: string
          description: Preferred CSV Separator for the logged in user.
          nullable: true
          example: ;
        DecimalSeparator:
          type: string
          description: >-
            Preferred Decimal separator configured for the logged in user

            Note: - Colco default value (configured at Microservices) is returned when the user is not provided or does not exist.
          nullable: true
          example: 1,234,567.00
        ReportFormat:
          type: string
          description: Preferred report format configured for the logged in user
          nullable: true
          example: csv
        HasAPIAccess:
          type: boolean
          description: >-
            True/False

            True, if user has access to the requested API. This is validated based on the role Vs API access matrix and client Vs API access matrix.
          default: true
        Roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: List of roles the user have access to
        Payers:
          type: array
          items:
            $ref: '#/components/schemas/PayerAccess'
          description: >-
            List of payers which the user has access to.

            •    It will return 250 payers only and it is configurable. If the user has more than that, the remaining will be ignored.

            •    The payer which is marked as default will be the first item in the output.



            Note: This list will be empty for users mapped with roles which has either IsShellAdmin or IsServiceAccount set to true as their access level is controlled at ColCo level only.
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountAccess'
          description: >-
            List of accounts which the user has access to.

            Note: This list will be empty for users mapped with roles which has either IsCustomerAdmin, IsShellAdmin or IsServiceAccount set to true as their access level is controller at either ColCo or payer level only.
        CollectingCompanies:
          type: array
          items:
            $ref: '#/components/schemas/ColCoAccess'
          description: "List of collecting companies to which the user has access to \r\nNote: This list will be empty for users mapped with roles which has either IsCustomerAdmin or IsCustomerUser set to true as their access level is controller at Payer or Account level."
        EIDAccessDetails:
          type: array
          items:
            $ref: '#/components/schemas/EIDAccess'
          description: >-
            List of Electronic Invoice Data configured for the user.

            Note: This list will be empty if the value of EIDDetails is set to false or empty in the request.
        UserClassificationBySystem:
          type: string
          description: User classification by system.
          nullable: true
          example: S
        UserClassificationByShell:
          type: string
          description: User classification by Shell.
          nullable: true
          example: S
        PayerCount:
          type: integer
          description: "Count of payers accessible to the user at the time when user was created or last updated. \r\nNote:\r\nCount may vary based on customer operations hence it may not be an up to date value."
          format: int32
          nullable: true
          example: 1
        AccountCount:
          type: integer
          description: "Count of accounts at the time when the user was created or last updated. \r\nNote:\r\nCount may vary based on customer operations hence it may not be an up to date value."
          format: int32
          nullable: true
          example: 1
        CardCount:
          type: integer
          description: "Count of cards at the time when the user was created or last updated.\r\nNote: \r\nCount may vary based on customer operations hence it may not be an up to date value."
          format: int32
          nullable: true
          example: 15
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: Request Id of the API call
          example: f20979a8-872f-4653-cf12-89b52f1dc7cb
    Role:
      title: Role
      type: object
      properties:
        RoleName:
          type: string
          description: Role Name of the user
          example: FleetManager
        IsCustomerAdmin:
          type: boolean
          description: Whether the role is an administrator.
          default: true
        IsCustomerUser:
          type: boolean
          description: Whether the role is a customer user.
          default: false
        IsShellAdmin:
          type: boolean
          description: True if the role is Shell user, else false.
          default: false
        IsServiceAccount:
          type: boolean
          description: >-
            True/False.

            True if the role is Service accounts, else false.
          default: false
        IsUserAdmin:
          type: boolean
          description: >-
            True/False.

            True, if the role allows user administration, else false.
          default: true
    PayerAccess:
      title: PayerAccess
      type: object
      properties:
        IsDefault:
          type: boolean
          description: Whether this payer is the default payer of the user.
          default: false
        ColcoId:
          type: integer
          description: Collecting company id.
          format: int32
          nullable: true
          example: 14
        ColcoCode:
          type: integer
          description: >-
            Collecting company code.

            Example:

            86-Philippines

            5-UK
          format: int32
          nullable: true
          example: 14
        ColCoCountryCode:
          type: string
          description: The 2-character ISO Code for the customer and card owning country
          nullable: true
          example: DE
        PayerGroupId:
          type: integer
          description: Payer Group Id of the payer.
          format: int32
          nullable: true
          example: 123
        PayerGroup:
          type: string
          description: "Payer group of the payer. \r\nThe value of this parameter will always be null when the input parameter “IncludePayerGroup” is false."
          nullable: true
          example: 'null'
        PayerId:
          type: integer
          description: >-
            Payer Id to which the user has access

            Example: 123456
          format: int32
          nullable: true
          example: 854
        PayerNumber:
          type: string
          description: >-
            Payer Number to which the user has access

            Example: GB000000123
          nullable: true
          example: DE26688504
        PayerName:
          type: string
          description: Name of the Payer to which the user has access
          nullable: true
          example: TK MobilPlus
    AccountAccess:
      title: AccountAccess
      type: object
      properties:
        ColcoId:
          type: integer
          description: Collecting company id.
          format: int32
          nullable: true
          example: 14
        ColcoCode:
          type: integer
          description: Collecting company code.
          format: int32
          nullable: true
          example: 14
        PayerId:
          type: integer
          description: Payer Id to which the user has access
          format: int32
          nullable: true
          example: 854
        PayerNumber:
          type: string
          description: Payer Number to which the user has access
          nullable: true
          example: DE26688504
        PayerName:
          type: string
          description: Name of the Payer to which the user has access
          nullable: true
          example: TK MobilPlus
        AccountId:
          type: integer
          description: Account Id to which the user has access
          format: int32
          nullable: true
          example: 435
        AccountNumber:
          type: string
          description: Account Number to which the user has access
          example: DE26688504
        AccountName:
          type: string
          description: Name of the Account to which the user has access
          nullable: true
          example: TK Sub Account
    ColCoAccess:
      title: ColCoAccess
      type: object
      properties:
        ColCoId:
          type: string
          description: Collecting company ID.
          nullable: true
          example: '14'
        ColCoCode:
          type: string
          description: Collecting company code.
          nullable: true
          example: '14'
        ColCoCountryName:
          type: string
          description: 'Collecting company’s Country name. ex: United Kingdom'
          nullable: true
          example: DE
        IssuingCountryNumber:
          type: string
          description: >-
            Issuing Country Number.

             ex: 032 - Czech Republic
          nullable: true
          example: DE
    EIDAccess:
      title: EIDAccess
      type: object
      properties:
        ColCoId:
          type: string
          description: Collecting company id.
          nullable: true
          example: '14'
        ColCoCode:
          type: integer
          description: Collecting company Code
          format: int32
          nullable: true
          example: 14
        AccountGroupId:
          type: string
          description: Identifier for the EID account group configured for the user.
          nullable: true
          example: '345'
    ErrorStatus:
      title: ErrorStatus
      type: object
      properties:
        Code:
          type: string
          description: Error Code
          example: '0000'
        Description:
          type: string
          description: Error Description
          example: Success
    DefaultError:
      title: DefaultError
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
      description: Error response
    DefaultErrorFault:
      title: DefaultErrorFault
      type: object
      properties:
        faultstring:
          type: string
          description: Error Description
        detail:
          $ref: '#/components/schemas/Detail'
      description: Error object
    DefaultErrorFaultDetail:
      title: DefaultErrorFaultDetail
      type: object
      properties:
        errorcode:
          type: string
          description: Error code
      description: Details about the error
    ErrorUserAccess:
      title: ErrorUserAccess
      type: object
      properties:
        Error:
          $ref: '#/components/schemas/ErrorUserAccessError'
    ErrorUserAccessError:
      title: ErrorUserAccessError
      type: object
      properties:
        Code:
          type: string
          description: Error Code
        Description:
          type: string
          description: Description
    PayerRequest:
      title: PayerRequest
      type: object
      properties:
        Payers:
          type: array
          items:
            $ref: '#/components/schemas/Payers'
          description: >-
            List of Payer entity.

            Optional.

            Note:

            •    Max number of payers allowed in the input is 10, if it exceeds in the input it will throw an error.

            •    This value is configurable. Initial configuration will be 1000 and will change to 10 once SFH changes are integrated.
        ReturnBasicDetailsOnly:
          type: boolean
          description: Returns only the high-level basic details of payers. Set this field to ‘true’ when only the basic details are required to get the result quicker.
          default: false
        IncludeAddresses:
          type: boolean
          description: Include address related fields on the response. Set this field to ‘False’ when Address fields are not required to get the result quicker.
          default: false
        IncludeBonusParameters:
          type: boolean
          description: Include the Finance Currency, used for Finance Widget, in the response
          default: false
        CurrentPage:
          type: integer
          description: Page Number
          format: int32
          example: 1
        PageSize:
          type: integer
          description: "Page Size – Number of records to show on a page\r\n\r\nDefault value 50\r\nReturn 250 rows only in the response if -1 is supplied as page size.\r\n\r\nNote: \r\n•    Max page size is 250, if the user provided value is more than 250 then it will throw error.\r\n•    This value is configurable."
          format: int32
          example: 15
    Payers:
      title: Payers
      type: object
      properties:
        ColCoId:
          type: integer
          description: Collecting Company Id of the payer
          format: int32
          nullable: true
          example: 14
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided."
          format: int32
          nullable: true
          example: 14
        PayerId:
          type: integer
          description: Payer id of the customer.
          format: int32
          nullable: true
          example: 12345
        PayerNumber:
          type: string
          description: Payer Number of the customer.
          nullable: true
        PayerName:
          type: string
          description: Payer Name of the customer.
          nullable: true
          example: ABC company
        PayerGroupId:
          type: integer
          description: Payer Group identifier of the customer
          format: int32
          nullable: true
          example: 456
    PayerResponse:
      title: PayerResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        Payers:
          type: array
          items:
            $ref: '#/components/schemas/PayerDetails'
          description: ''
        CurrentPage:
          type: integer
          description: Current Page
          format: int32
          example: 1
        RowCount:
          type: integer
          description: Total row count matched for the given input criteria
          format: int32
          example: 1
        TotalPages:
          type: integer
          description: Calculated page count based on page size from the incoming API request and total number of rows matched for the given input criteria. Return 1 if the page size is -1 as all records are returned
          format: int32
          example: 1
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    PayerDetails:
      title: PayerDetails
      type: object
      properties:
        ColCoId:
          type: integer
          description: Collecting company id of the customer.
          format: int32
          nullable: true
          example: 14
        ColCoCode:
          type: integer
          description: Collecting company code of the customer.
          format: int32
          nullable: true
          example: 14
        CountryCode:
          type: string
          description: ISO code of the customer country.
          nullable: true
          example: DE
        Country:
          type: string
          description: Country of the customer
          nullable: true
          example: Germany
        PayerId:
          type: integer
          description: Payer id of the customer
          format: int32
          nullable: true
          example: 12345
        PayerNumber:
          type: string
          description: Payer Number of the customer
          nullable: true
          example: DE000000123
        PayerFullName:
          type: string
          description: Full Name of the Payer
          nullable: true
          example: ABC Company
        PayerShortName:
          type: string
          description: Short name of the payer
          nullable: true
          example: ABC
        PayerGroupId:
          type: integer
          description: Payer Group Id
          format: int32
          nullable: true
          example: 456
        AmountDue:
          type: number
          description: Invoiced amount and due for payment from the last SOA.
          nullable: true
          example: 1500
        AmountOverdue:
          type: number
          description: Invoiced amount and overdue for payment from the last SOA.
          nullable: true
          example: 450
        AmountNotOverdue:
          type: number
          description: Invoiced amount and not overdue for payment from the last SOA.
          nullable: true
          example: 4546.76
        OutstandingBalance:
          type: number
          description: Current outstanding balance amount from the last SOA.
          nullable: true
          example: 456
        UnallocatedPayment:
          type: number
          description: >-
            Unallocated payment.

            When negative, indicates overdue amount from the last SOA.
          nullable: true
          example: 123
        SOACurrencyCode:
          type: string
          description: Currency ISO code
          nullable: true
          example: EUR
        SOACurrencySymbol:
          type: string
          description: Currency symbol
          nullable: true
          example: €
        SOACreditLimitCurrencyCode:
          type: string
          description: Currency ISO code
          nullable: true
          example: EUR
        SOACreditLimitCurrencySymbol:
          type: string
          description: Currency symbol
          nullable: true
          example: €
        LastPaymentCurrencyCode:
          type: string
          description: Currency ISO code
          nullable: true
          example: EUR
        LastPaymentCurrencySymbol:
          type: string
          description: currency symbol
          nullable: true
          example: €
        LastPaymentAmount:
          type: number
          description: Latest payment amount for the requested payer.
          nullable: true
          example: 5465
        LastPaymentDate:
          type: string
          description: Latest payment date for the requested payer.
          nullable: true
          example: '20230405'
        SOALastPaymentAmount:
          type: number
          description: Last payment amount in statement of account for the requested payer.
          nullable: true
          example: 45443
        SOALastPaymentDate:
          type: string
          description: Last payment date in statement of account for the requested payer.
          nullable: true
          example: '20230805'
        CurrencyCode:
          type: string
          description: Currency ISO code
          nullable: true
          example: EUR
        CurrencySymbol:
          type: string
          description: Currency Symbol
          nullable: true
          example: €
        ColCoCountryCode:
          type: string
          description: The 2-character ISO Code for the customer and card owning country.
          nullable: true
          example: DE
        LocalCurrencyCode:
          type: string
          description: Currency ISO code of the local country.
          nullable: true
          example: EUR
        LocalCurrencySymbol:
          type: string
          description: Currency Symbol of the local country
          nullable: true
          example: €
        LocalCurrencyExchangeRate:
          type: number
          description: Exchange rate from OU base currency to local currency.
          nullable: true
          example: 1.45
        LocalCurrencyExchangeRate_SoA:
          type: number
          description: Exchange rate from SoA credit limit currency to local currency
          nullable: true
          example: 1.2
        BillingFrequencyTypeId:
          type: integer
          description: >-
            Billing/Invoice frequency Identifier. Indicates the frequency in which the transactions will be considered for invoicing in a bulling run

            E.g.: 1, 2, 3, etc.
          format: int32
          nullable: true
          example: 1
        BillingFrequencyType:
          type: string
          description: "Billing/Invoice frequency. The frequency in which the transactions will be considered for invoicing in a bulling run\r\nE.g.: \r\n1    Daily (all days)\r\n2    Daily (only working days)\r\n3    Weekly - Monday\r\n4    Weekly – Tuesday\r\nEtc."
          nullable: true
          example: weekly
        BillingRunFrequencyTypeId:
          type: integer
          description: >-
            Frequency at which the billing process is triggered.

            E.g.: 1, 2, 3, etc.
          format: int32
          nullable: true
          example: 1
        BillingRunFrequnecy:
          type: string
          description: "Frequency at which the billing process is triggered.E.g.: \r\n1    Daily (all days)\r\n2    Daily (only working days)\r\n3    Weekly - Monday\r\n4    Weekly – Tuesday\r\nEtc."
          nullable: true
          example: weekly
        Day1Run:
          type: integer
          description: The first day in a month when the billing should run in case of multiple billing runs configured with in a single month.
          format: int32
          nullable: true
          example: 0
        Day2Run:
          type: integer
          description: The second day in a month when the billing should run in case of multiple billing runs configured with in a single month.
          format: int32
          nullable: true
          example: 0
        Day3Run:
          type: integer
          description: The third day in a month when the billing should run in case of multiple billing runs configured with in a single month.
          format: int32
          nullable: true
          example: 0
        Day4Run:
          type: integer
          description: The fourth day in a month when the billing should run in case of multiple billing runs configured with in a single month.
          format: int32
          nullable: true
          example: 0
        InvoiceDistributionMethods:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDistributionMethod'
          description: ''
        OutputType:
          type: string
          description: >-
            Invoice output type (Id-Description)

            E.g.:

            1-PDF

            6-Print
          nullable: true
          example: PDF
        InvoiceAccountID:
          type: integer
          description: The Account ID of the account on which the invoice is generated.
          format: int32
          nullable: true
          example: 12345
        InvoiceAccountNumber:
          type: string
          description: The Account Number of the account on which the invoice is generated.
          nullable: true
          example: '1234567'
        InvoiceAccountShortName:
          type: string
          description: The Account Short Name of the account on which the invoice is generated.
          nullable: true
          example: Test Account
        BestOfIndicator:
          type: boolean
          description: Best of Indicator of the Pricing customer/account configured.
          default: false
        IsInternational:
          type: boolean
          description: Whether the account is international.
          default: false
        TotalAccounts:
          type: integer
          description: Total number of accounts under the payer.
          format: int32
          nullable: true
          example: 5
        TotalActiveAccounts:
          type: integer
          description: Total number of active accounts under the payer.
          format: int32
          nullable: true
          example: 4
        TotalCards:
          type: integer
          description: Total number of cards under the payer.
          format: int32
          nullable: true
          example: 567
        TotalActiveCards:
          type: integer
          description: Total number of active cards under the payer.
          format: int32
          nullable: true
          example: 560
        TotalBlockedCards:
          type: integer
          description: Total number of cards under the payer that are permanently blocked
          format: int32
          nullable: true
          example: 6
        TotalCancelledCards:
          type: integer
          description: Total number of cards under the payer that are cancelled
          format: int32
          nullable: true
          example: 0
        TotalExpiredCards:
          type: integer
          description: Total number of expired cards under the payer.
          format: int32
          nullable: true
          example: 1
        TotalRenewalPendingCards:
          type: integer
          description: Total number of Renewal Pending cards under the payer.
          format: int32
          nullable: true
          example: 0
        TotalReplacedCards:
          type: integer
          description: Total number of cards under the payer with status as “Replaced
          format: int32
          nullable: true
          example: 0
        TotalTemporaryBlockCardsByCustomer:
          type: integer
          description: Total number of cards under the payer that are temporarily blocked by customer.
          format: int32
          nullable: true
          example: 0
        TotalTemporaryBlockCardsByShell:
          type: integer
          description: Total number of cards under the payer that are temporarily blocked by Shell.
          format: int32
          nullable: true
          example: 0
        TotalNewCards:
          type: integer
          description: Total number of cards in “New” status
          format: int32
          nullable: true
          example: 0
        TotalFraudCards:
          type: integer
          description: Total number of cards in Fraud status
          format: int32
          nullable: true
        TotalBlockedAccounts:
          type: integer
          description: Total number of accounts in Blocked status
          format: int32
          nullable: true
          example: 0
        TotalCancelledAccounts:
          type: integer
          description: Total number of accounts in Cancel status
          format: int32
          nullable: true
          example: 0
        PayerTradingName:
          type: string
          description: Trading name for the Payer
          nullable: true
          example: ABC Company
        Status:
          type: string
          description: "Payer current status id and description\r\ne.g. (Id – Description):\r\n1-Active\r\n2-Requested from UTA \r\n3-Awaiting embossing \r\n4-Manufactured\r\n5-Awaiting despatch"
          example: Active
        BillingLanguage:
          type: string
          description: Payer Billing Language id and description
          nullable: true
          example: 1-German
        LegalEntity:
          type: string
          description: Legal entity id and description of the Payer
          nullable: true
          example: 20-Unlimited Corporation
        DateEstablished:
          type: string
          description: Payer/Company Established Date.
          nullable: true
          example: '19880504'
        CustomerClassification:
          type: string
          description: Payer/Company Classification id and description
          nullable: true
          example: 3-10049 Domestic
        IndustryClass:
          type: string
          description: Payer/Company Industry class id and description
          nullable: true
          example: 4-Growing of sugar cane
        MarketingSegmentation:
          type: string
          description: Marketing Segmentation id and description
          nullable: true
          example: 1-National CRT
        LineOfBusiness:
          type: string
          description: Payer/Company Line of Business Id and Description
          nullable: true
          example: 1-CRT
        PrintCreditLimit:
          type: boolean
          description: >-
            Is Credit Limit printed on the statement of account: True/False

            If True Credit Limit is printed on invoice/SOA
          default: false
        CardGroupType:
          type: string
          description: >-
            Card Group Type configured for Payer

            e.g. (Id – Description):

            1-Horizontal only

            2-Vertical only

            3-Both
          nullable: true
          example: 1-Horizontal only
        RenewCards:
          type: boolean
          description: If set to True cards will be automatically renewed on expiry
          default: false
        AllowSelectPIN:
          type: boolean
          description: If set to True then Self Select PIN is allowed for Payer
          default: false
        UseFleetPIN:
          type: boolean
          description: If set to True then Fleet PIN is applied for the cards directly under payer
        VATRegNumber:
          type: string
          description: Payer/Company VAT registration number.
          nullable: true
          example: '4534545'
        VATRegNumber2:
          type: string
          description: Payer/Company VAT registration number 2.
          example: '45345545'
        RegistrationNumber:
          type: string
          description: Payer/Company Registration number
          nullable: true
          example: '453543'
        RegistrationNumber2:
          type: string
          description: Payer/Company Registration number2
          nullable: true
          example: '35435'
        SalesLedgerBalance:
          type: number
          description: Sales Ledger Balance (Billed)
          nullable: true
          example: 0
        Exposure:
          type: number
          description: Exposure after guarantee
          nullable: true
          example: 0
        OutstandingDebt:
          type: number
          description: Total outstanding debt (including billed and unbilled sales and fee items)
          nullable: true
          example: 0
        AvailableCredit:
          type: number
          description: >-
            The available credit for the payer.

            This is the credit limit minus the outstanding debt.
          nullable: true
          example: 0
        Band:
          type: string
          description: >-
            Band Id and Description of the Payer in Card Platform.

            e.g. (Id – Description):

            1-Platinum

            2-Gold

            3-Silver

            4-Bronze
          nullable: true
          example: Gold
        GlobalCustomerReferenceId:
          type: string
          description: Global Customer reference id configured in card platform for Payer (Same as Payer Group)
          nullable: true
          example: '1234'
        CreditLimit:
          type: number
          description: Payment Credit limit of Payer.
          nullable: true
          example: 3434
        CreditLimitInCustomerCurrency:
          type: number
          description: >-
            Credit limit in Customer currency.

            Note: For currency details refer the parameters CurrencyCode & CurrencySymbol in the PayerDetail response.
          nullable: true
        BillingCurrencyCode:
          type: string
          description: Customer Billing currency ISO code.
          nullable: true
          example: EUR
        BillingCurrencySymbol:
          type: string
          description: Customer Billing currency Symbol.
          nullable: true
          example: €
        PaymentMethod:
          type: string
          description: Payment method Id and Description as configured for Payer in Card Platform
          nullable: true
          example: Incoming - Bank Transfer
        PaymentTerms:
          type: string
          description: Payment terms Id and Description as configured for Payer in Card Platform
          nullable: true
          example: 0 days after invoice
        TemporaryCreditLimitIncrease:
          type: number
          description: Temporary Credit limit increase value
          nullable: true
          example: 0
        TemporaryCreditLimitIncreaseInCustomerCurrency:
          type: number
          description: Temporary Credit limit increase value
          nullable: true
          example: 0
        TemporaryCreditLimitExpiryDate:
          type: string
          description: Temporary Credit limit expiry date
          nullable: true
          example: '20230504'
        PayerBankAccount:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
          description: ''
        CardDeliveryAddress:
          $ref: '#/components/schemas/Address'
        CorrespondanceAddress:
          $ref: '#/components/schemas/Address'
        BillingAddress:
          $ref: '#/components/schemas/Address'
        HasActiveVolBasedPricing:
          type: boolean
          description: >-
            True, if the payer is setup for volume-based pricing and is active on the current date, else false.



            This field is returned only when IncludeBonusParameters is set to True in the request. Else set to null.
        HasActiveVolBasedBonus:
          type: boolean
          description: >-
            True, if the payer is setup for volume-based bonus and is active on the current date, else false.

            This field is returned only when IncludeBonusParameters is set to True in the request. Else set to null.
        HasActiveVolBasedAssociationBonus:
          type: boolean
          description: >-
            True, if the payer is setup for volume-based association bonus and is active on the current date, else false.

            This field is returned only when IncludeBonusParameters is set to True in the request. Else set to null.
        FinanceCurrency:
          $ref: '#/components/schemas/FinanceCurrency2'
        TollsCustomerId:
          type: string
          description: >-
            Customer id in e-TM system

            This field will have value only when ReturnTollsCustomerId is set to true in the request else set to null or empty.
          nullable: true
          example: '2332'
        TollsColcoCountryTypeId:
          type: string
          description: >-
            String    Colco country type id in e-TM system

            This field will have value only when ReturnTollsCustomerId is set to true in the request else set to null or empty.
          nullable: true
          example: '33'
        Contracts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerContract'
          description: ''
    InvoiceDistributionMethod:
      title: InvoiceDistributionMethod
      type: object
      properties:
        IsPrimary:
          type: boolean
          description: If True then this distribution method is the default distribution method.
          default: true
        FrequencyType:
          type: string
          description: >-
            Frequency type unit Id & description

            E.g.:

            1- Daily

            2-Weekly

            3-Monthly

            4-Invoicing

            6-Calendar quarter
          nullable: true
          example: weekly
        DistributionMethod:
          type: string
          description: >-
            Invoice Distribution Method (Id-Description)

            E.g.:

            1-e-mail

            2-Fax

            3-Courier to Customer

            4-Courier to Client

            5-Print

            6-FTP

            7-SMS
          nullable: true
          example: e-mail
        OutputType:
          type: string
          description: Invoice output type (Id - Description)
          nullable: true
          example: 1 - PDF
    BankAccount:
      title: BankAccount
      type: object
      properties:
        AccountNumber:
          type: string
          description: Account Number
          nullable: true
          example: '45346346443'
        BankName:
          type: string
          description: Bank Name
          nullable: true
          example: swiss
        AccountName:
          type: string
          description: Account Name
          nullable: true
          example: ARIM SERVIS
        DateEffective:
          type: string
          description: Bank Account effective date for the payer
          nullable: true
          example: '20200808'
        DateTerminated:
          type: string
          description: Bank Account terminated date. Default is null
          nullable: true
        IBAN:
          type: string
          description: Bank Account IBAN for Payer
          nullable: true
          example: CZ6508000000192000145399
        CurrencyCode:
          type: string
          description: Bank Account currency ISO code.
          nullable: true
          example: EUR
        CurrencySymbol:
          type: string
          description: Bank Account currency Symbol.
          nullable: true
          example: €
        CountryISOCode:
          type: string
          description: Bank Account Country ISO Code
          nullable: true
          example: DE
        Country:
          type: string
          description: >-
            Bank Account Country Name

            1-Austria

            2-Belgium

            3-Bulgaria

            4-Croatia

            5-Czech Republic
          nullable: true
          example: Germany
        SortCode:
          type: string
          description: Payer bank Sort Code
          nullable: true
          example: '0100'
        SwiftCode:
          type: string
          description: Payer Bank Swift Code
          nullable: true
          example: KOMBCZPPXXX
        BankType:
          type: string
          description: Bank Type Id and Description
          nullable: true
          example: 1-Test
    Address:
      title: Address
      type: object
      properties:
        AddressId:
          type: integer
          description: Address Id in cards platform.
          format: int32
          nullable: true
          example: 1
        AddressLine1:
          type: string
          description: Address line1
          nullable: true
          example: test street
        AddressLine2:
          type: string
          description: Address line2
          nullable: true
          example: Address line2
        AddressLine3:
          type: string
          description: AddressLine3
          nullable: true
          example: AddressLine3
        ZipCode:
          type: string
          description: ZipCode
          nullable: true
          example: 667 78
        City:
          type: string
          description: City
          nullable: true
          example: LUMPUR
        RegionId:
          type: integer
          description: Region Id of the address.
          format: int32
          nullable: true
          example: 1234
        CountryISOCode:
          type: string
          description: Country ISO code of the address
          nullable: true
          example: CZ
        Country:
          type: string
          description: Country for the address
          nullable: true
          example: Germany
        Telephone:
          type: string
          description: Telephone number of the address contact
          nullable: true
          example: '3245872364823'
        EmailAddress:
          type: string
          description: Email address of the address contact
          nullable: true
          example: testmail@gmail.com
        Fax:
          type: string
          description: Fax number of the address contact
          nullable: true
          example: '3245872364823'
    FinanceCurrency:
      title: FinanceCurrency
      type: object
      properties:
        CurrencyCode:
          type: string
          description: Currency ISO Code used for the Finance Widget.
          nullable: true
          example: EUR
        CurrencySymbol:
          type: string
          description: Currency Symbol
          nullable: true
          example: €
        Invoice_ExchangeRate:
          type: number
          description: Factor to be used for converting the amounts in invoice currency to finance widget currency. (If finance currency is same as invoice currency, then the value of this field will be “1” so that the value does not change)
          nullable: true
          example: 1
        CreditLimit_ExchangeRate:
          type: number
          description: Factor to be used for converting the amounts in credit limit currency to finance widget currency. (If finance currency is same as credit limit currency, then the value of this field will be “1” so that the value does not change)
          nullable: true
          example: 1
      description: This entity will not be present in the response if the ‘IncludeFinanceCurrency’ flag in the request is ‘false’
    CustomerContract:
      title: CustomerContract
      type: object
      properties:
        PartnerId:
          type: string
          description: Partner Id in e-TM system
          nullable: true
          example: '335'
        PartnerName:
          type: string
          description: Partner Name in e-TM system
          nullable: true
          example: Test
    CustomerDetailRequest:
      title: CustomerDetailRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id (in GFN) of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
          nullable: true
          example: 14
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
          nullable: true
          example: 14
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e., Customer Id of the Payment Customer in H3 Cards Platform) of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
          example: 12345
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
          nullable: true
          example: GB000000123
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Optional if AccountNumber is passed else Mandatory.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed else Mandatory.
          nullable: true
          example: GB000000124
    CustomerDetailResponse:
      title: CustomerDetailResponse
      type: object
      properties:
        AccountId:
          type: integer
          description: Account Id of the selected account.
          format: int32
          nullable: true
          example: 1227
        AccountName:
          type: string
          description: Account Name of the selected account.
          nullable: true
          example: 5.11.3 DE
        AccountNumber:
          type: string
          description: Account Number of the selected account.
          nullable: true
          example: DE00001067
        AccountShortName:
          type: string
          description: Short name of the customer.
          nullable: true
          example: 5.11.3 DE
        AccountTradingName:
          type: string
          description: Trading name of the customer
          nullable: true
          example: 5.11.3 DE
        AllowFleetIdInput:
          type: boolean
          description: >-
            True/False.

            When false, users should not be allowed to enable Fleet Id prompt option while ordering cards under this account.
        Band:
          type: string
          description: >-
            Band Id and Description of the Payer in Card Platform

            e.g. (Id – Description):

            1-Platinum

            2-Gold

            3-Silver

            4-Bronze
          nullable: true
          example: 2 - Gold
        BillingAddress:
          $ref: '#/components/schemas/Address'
        CardGroupPosition:
          type: string
          description: >-
            Card group position at –

            •    Payer – Payer level

            •    Account – Account level
          nullable: true
        CorrespondenceAddress:
          $ref: '#/components/schemas/Address'
        DeliveryAddresses:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAddresses'
          description: ''
        FleetPin:
          type: boolean
          description: Is Fleet Pin optional enabled for the selected account
        FullName:
          type: string
          description: Full Name of the customer
          nullable: true
          example: 5.11.3 DE
        InvoiceCustomerId:
          type: integer
          description: Customer Id of the Invoice Point of the account
          format: int32
          nullable: true
          example: 1227
        InvoiceCustomerShortName:
          type: string
          description: Short Name of the Invoice Point of the account
          nullable: true
          example: 5.11.3 DE
        IsInvoicePoint:
          type: boolean
          description: Whether the account is an invoice point.
          nullable: true
        MarketingSegmentation:
          type: string
          description: >-
            Marketing Segmentation id and description

            e.g. (Id – Description):

            1-National CRT

            2-International CRT & IKAs

            3-Small Customers

            4-National/International Fleet/IKA
          nullable: true
          example: 4 - National/International Fleet/IKA
        VATNumber:
          type: string
          description: VAT Registration Number of Customer
          nullable: true
          example: PH6578900900
        PayerId:
          type: integer
          description: Payer Id of the selected account.
          format: int32
          nullable: true
          example: 1227
        PayerName:
          type: string
          description: Payer Name of the selected account.
          nullable: true
          example: 5.11.3 DE
        PayerNumber:
          type: string
          description: Payer Number of the selected account.
          nullable: true
          example: DE00001067
        SelfSelectedPin:
          type: boolean
          description: Is Self-selected Pin enabled for the account
          nullable: true
        Status:
          type: string
          description: "Payer current status id and description\r\ne.g. (Id – Description):\r\n1-Active\r\n2-Requested from UTA \r\n3-Awaiting embossing \r\n4-Manufactured\r\n5-Awaiting despatch"
          nullable: true
          example: 1 - Active
        DefaultPINAdviceType:
          type: integer
          description: >-
            Default PIN AdviceType of the customer.

            Possible Values:

            1.    Paper

            2.    Email

            3.    SMS

            4.    None
          format: int32
          nullable: true
          example: 1
        PINAdviceTypes:
          type: array
          items:
            $ref: '#/components/schemas/PINAdviceTypes'
          description: ''
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request id
          nullable: true
          example: 908358e3-03ca-4aef-93b2-37586b859171
        PINChangeAllowedByCardholder:
          type: boolean
          description: PIN change allowed for card holder or not.
        PINChangeAllowedFromFleetPIN:
          type: boolean
          description: PIN change allowed from fleetpin or not.
    DeliveryAddresses:
      title: DeliveryAddresses
      type: object
      properties:
        AddressId:
          type: integer
          description: Address Id
          format: int32
          nullable: true
          example: 1
        AddressLine1:
          type: string
          description: AddressLine1
          nullable: true
          example: AddressLine1
        AddressLine2:
          type: string
          description: AddressLine2
          nullable: true
          example: AddressLine2
        AddressLine3:
          type: string
          description: AddressLine3
          nullable: true
          example: AddressLine3
        City:
          type: string
          description: City
          nullable: true
          example: germany
        CompanyName:
          type: string
          description: Account Name
          nullable: true
          example: 5.11.3 DE
        ContactForeName:
          type: string
          description: Contact fore name of the delivery address.
          nullable: true
          example: 5.11.13 DE
        ContactLastName:
          type: string
          description: Contact last name of the delivery address.
          nullable: true
          example: SAM
        ContactMiddleName:
          type: string
          description: Contact middle name of the delivery address.
          nullable: true
          example: SAM
        ContactTitle:
          type: string
          description: ContactTitle
          nullable: true
          example: Mr
        Country:
          type: string
          description: Country
          nullable: true
          example: Germany
        CountryId:
          type: integer
          description: Country Id
          format: int32
          nullable: true
          example: 9
        CountryISOCode:
          type: string
          description: Country ISO code
          nullable: true
          example: DE
        Fax:
          type: string
          description: Fax number of the address contact.
          nullable: true
          example: '657875'
        Region:
          type: string
          description: Region of the Card Delivery address
          nullable: true
          example: Germany
        RegionId:
          type: integer
          description: Region Id of the address.
          format: int32
          nullable: true
          example: 133
        Telephone:
          type: string
          description: Telephone number of the address contact
          nullable: true
          example: '78787786868'
        ZipCode:
          type: string
          description: Delivery Zip code
          nullable: true
          example: E14 5HQ
        AddressType:
          type: integer
          description: >-
            Delivery address type.

            Possible Values:

            1 – Card and PIN delivery address

            2 – Card delivery address

            3 – PIN delivery address
          format: int32
          nullable: true
          example: 1
    PINAdviceTypes:
      title: PINAdviceTypes
      type: object
      properties:
        PINAdviceTypeID:
          type: integer
          description: >-
            Id of of PIN advice type.

            Possible Values:

            1.    Paper

            2.    Email

            3.    SMS

            4.    None
          format: int32
          nullable: true
          example: 1
        IsCardOrderOption:
          type: boolean
          description: Whether the PIN advice type is available for card ordering
        IsPINReminderOption:
          type: boolean
          description: Whether the PIN advice type is available for PIN Reminder
    AccountRequest:
      title: AccountRequest
      type: object
      properties:
        Status:
          type: string
          description: >-
            Account Status.

            Optional if StatusList is passed, else mandatory.

            Ignored if StatusList is passed.

            Allowed values:

            •    ALL

            •    ACTIVE

            •    BLOCKED

            •    CANCELLED

            •    CREDITLOCK

            •    DELINQUENCYLOCK
          nullable: true
          example: ALL
        IncludeCardSummary:
          type: boolean
          description: >-
            Include card summary details in the response.



            When passed as false, the card summary related parameters on response will be set to null.



            Optional – default value: true.
          default: true
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.

            Optional if PayerNumber is passed, else Mandatory.
          format: int32
          nullable: true
          example: 9
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.

            Optional if PayerId is passed, else Mandatory.
          nullable: true
          example: GB00000111
        PageSize:
          type: integer
          description: >-
            Page Size – Number of records to show on a page.

            Optional

            Default value 50
          format: int32
          nullable: true
          example: 10
        RequestId:
          type: string
          description: API Request Id
          nullable: true
          example: b9eb91b6-65d4-4196-f910-6b0846875e70
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nColCoCode or ColCoCountryCode  is Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided."
          format: int32
          nullable: true
          example: 14
        ColCoCountryCode:
          type: string
          description: >-
            The 2-character ISO Code for the customer and card owning country.

            ColCoCode or ColCoCountryCode  is Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.
          nullable: true
          example: '14'
        CurrentPage:
          type: integer
          description: >-
            Page Number (as shown to the users)

            Optional

            Default value 1
          format: int32
          nullable: true
          example: 1
        InvoicePointsOnly:
          type: boolean
          description: >-
            Optional – default value: false.

            When passed as true, the API will return accounts that are configured as Invoice Point only.
          default: false
          nullable: true
        ColCoId:
          type: integer
          description: "Collecting Company Id (in GFN) of the selected payer. \r\nOptional if ColCoCode or ColCoCountryCode  is passed else Mandatory."
          format: int32
          nullable: true
          example: 14
        ReturnTollsCustomerId:
          type: boolean
          description: Return e-Toll Customer details When True.
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/Accounts'
          description: ''
        AccountName:
          type: string
          description: "Account Name of the customer.\r\nOptional. \r\nMinimum of 4 characters should be provided else not considered.\r\nAccounts those have the entered value at any part of the Name will be returned."
          nullable: true
          example: test
        StatusList:
          type: array
          items:
            type: string
            nullable: true
          description: "Account Statuses.\r\nOptional \r\nMultiple statuses are allowed to be included in the search criteria.\r\nAllowed values:\r\n•    ACTIVE\r\n•    BLOCKED\r\n•    CANCELLED\r\n•    CREDITLOCK\r\n•    DELINQUENCYLOCK"
    Accounts:
      title: Accounts
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional, if AccountNumber is passed, else mandatory.
          format: int32
          nullable: true
          example: 3453
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional, if AccountId is passed, else mandatory.
          nullable: true
          example: GB000000124
    AccountResponse:
      title: AccountResponse
      type: object
      properties:
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponseAccountsItems'
          description: ''
        CurrentPage:
          type: integer
          description: current page
          format: int32
          example: 1
        RowCount:
          type: integer
          description: Total row count matched for the given input criteria
          format: int32
          example: 1
        TotalPages:
          type: integer
          description: Calculated page count based on page size from the incoming API request and total number of rows matched for the given input criteria.
          format: int32
          example: 1
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request ID
          example: e5165f29-7e6f-45b4-96fe-f303df9ca180
    AccountResponseAccountsItems:
      title: AccountResponseAccountsItems
      type: object
      properties:
        AccountFullName:
          type: string
          description: Account Full Name
          nullable: true
          example: CI TEST_Update20 New updated
        AccountId:
          type: integer
          description: Account Id
          format: int32
          nullable: true
          example: 123
        AccountNumber:
          type: string
          description: Account Number
          nullable: true
          example: DE00000008
        AccountShortName:
          type: string
          description: Account Short Name
          nullable: true
          example: CI TEST_Update20
        BestOfIndicator:
          type: boolean
          description: Best of Indicator of the Pricing customer/account configured.
        BillingFrequencyType:
          type: string
          description: "Billing/Invoice frequency. The frequency in which the transactions will be considered for invoicing in a bulling run\r\nE.g.: \r\n1    Daily (all days)\r\n2    Daily (only working days)\r\n3    Weekly - Monday\r\n4    Weekly – Tuesday\r\nEtc."
          nullable: true
          example: Monthly - 3rd
        BillingFrequencyTypeId:
          type: integer
          description: Billing/Invoice frequency Identifier. Indicates the frequency in which the transactions will be considered for invoicing in a bulling run
          format: int32
          nullable: true
          example: 1
        BillingRunFrequency:
          type: string
          description: "Frequency at which the billing process is triggered. E.g.: \r\n1    Daily (all days)\r\n2    Daily (only working days)\r\n3    Weekly - Monday\r\n4    Weekly – Tuesday\r\nEtc."
          nullable: true
          example: Weekly - Monday
        BillingRunFrequencyTypeId:
          type: integer
          description: >-
            Frequency at which the billing process is triggered.

            E.g.: 1, 2, 3, etc.
          format: int32
          nullable: true
          example: 1
        ColCoCountryCode:
          type: string
          description: The 2-character ISO Code for the customer and card owning country.
          nullable: true
          example: '14'
        CurrencyCode:
          type: string
          description: ISO code of customer currency.
          nullable: true
          example: '14'
        CurrencySymbol:
          type: string
          description: €
          nullable: true
          example: EUR
        Day1Run:
          type: integer
          description: The first day in a month when the billing should run in case of multiple billing runs configured with in a single month
          format: int32
          nullable: true
          example: 1
        Day2Run:
          type: integer
          description: The second day in a month when the billing should run in case of multiple billing runs configured with in a single month
          format: int32
          nullable: true
          example: 31
        Day3Run:
          type: integer
          description: The third day in a month when the billing should run in case of multiple billing runs configured with in a single month
          format: int32
          nullable: true
          example: 2
        Day4Run:
          type: integer
          description: The fourth day in a month when the billing should run in case of multiple billing runs configured with in a single month
          format: int32
          nullable: true
          example: 3
        FrequencyType:
          type: string
          description: >-
            Frequency type unit id & description

            E.g.:

            1 - Daily

            2 - Weekly

            3 - Monthly

            4 - Invoicing

            6 - Calendar quarter
          nullable: true
          example: Daily
        GrossAmount:
          type: number
          description: Gross amount in customer currency.
          nullable: true
          example: 1232
        InternationalPOSLanguageCode:
          type: string
          description: POS international language code
          nullable: true
          example: deu
        InternationalPOSLanguageID:
          type: integer
          description: POS international language ID
          format: int32
          nullable: true
          example: 1
        InvoiceAccountID:
          type: integer
          description: The Account ID of the account on which the invoice is generated.
          format: int32
          nullable: true
          example: 9
        InvoiceAccountNumber:
          type: string
          description: The Account Number of the account on which the invoice is generated.
          nullable: true
          example: DE00000008
        InvoiceAccountShortName:
          type: string
          description: The Account Short Name of the account on which the invoice is generated.
          nullable: true
          example: BCI TEST_Update20
        InvoiceDistributionMethods:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDistributionMethod'
          description: ''
        IsInternational:
          type: boolean
          description: Whether the account is international.
          nullable: true
        IsInvoicePoint:
          type: boolean
          description: Whether the account is an invoice point.
          nullable: true
        LastModifiedDate:
          type: string
          description: Account last modified date and time
          nullable: true
          example: 20240131 11:12:34
        LocalCurrencyCode:
          type: string
          description: ISO code of customer currency.
          nullable: true
          example: EUR
        LocalCurrencySymbol:
          type: string
          description: Customer currency symbol.
          nullable: true
          example: €
        LocalPOSLanguageCode:
          type: string
          description: POS local language code
          nullable: true
          example: deu
        LocalPOSLanguageID:
          type: integer
          description: POS local language ID
          format: int32
          nullable: true
          example: 1
        NetAmount:
          type: number
          description: Net amount in customer currency.
          nullable: true
          example: 3434
        OutstandingBalance:
          type: number
          description: Outstanding balance in customer currency.
          nullable: true
          example: 4354
        PaidAmount:
          type: number
          description: Amount paid in customer currency.
          nullable: true
          example: 4343
        Status:
          type: string
          description: Account Status
          nullable: true
          example: Blocked
        StatusReason:
          type: string
          description: Account status change reason id-description for the Status Reason, if any
          nullable: true
          example: 3 - Customer Request
        TotalActiveCardGroups:
          type: integer
          description: Total number of active card groups under the account
          format: int32
          nullable: true
          example: 198
        TotalActiveCards:
          type: integer
          description: Total number of active cards under the account.
          format: int32
          nullable: true
          example: 544
        TotalBlockedCards:
          type: integer
          description: Total number of cards under the account that are permanently blocked
          format: int32
          nullable: true
          example: 121
        TotalCancelledCards:
          type: integer
          description: Total number of cards under the account that are cancelled
          format: int32
          nullable: true
          example: 168
        TotalCards:
          type: integer
          description: Total number of cards under the account.
          format: int32
          nullable: true
          example: 10966
        TotalExpiredCards:
          type: integer
          description: Total number of expired cards under the account.
          format: int32
          nullable: true
          example: 1000
        TotalFraudCards:
          type: integer
          description: Total number of cards in Fraud status.
          format: int32
          nullable: true
          example: 8
        TotalNewCards:
          type: integer
          description: Total number of cards in “New” status.
          format: int32
          nullable: true
          example: 2
        TotalRenewalPendingCards:
          type: integer
          description: Total number of Renewal Pending account under the payer
          format: int32
          nullable: true
          example: 0
        TotalReplacedCards:
          type: integer
          description: Total number of cards under the account with status as “Replaced”
          format: int32
          nullable: true
          example: 20
        TotalTemporaryBlockCardsByCustomer:
          type: integer
          description: Total number of cards under the account that are temporarily blocked by customer.
          format: int32
          nullable: true
          example: 9
        TotalTemporaryBlockCardsByShell:
          type: integer
          description: Total number of cards under the account that are temporarily blocked by Shell.
          format: int32
          nullable: true
          example: 2
        VATAmount:
          type: number
          description: VAT amount in customer currency.
          nullable: true
          example: 2322
        IsPartnerCard:
          type: integer
          description: >-
            The account / sub-account is partner card account or not.

            Possible values (1= Non-PC account, 2= PC account, 3= PC Payer with Card Types, 4= PC Payer)

            Note: A partner card account is assumed to have only partner card card-types associated
          format: int32
          nullable: true
          example: 1
        TollsCustomerId:
          type: string
          description: Customer id in e-TM system
          nullable: true
          example: '332'
        TollsColcoCountryTypeId:
          type: string
          description: Colco country type id in e-TM system
          nullable: true
          example: '14'
        Contracts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerContract'
          description: ''
        IsConsortiumMember:
          type: string
          description: 'true'
          nullable: true
    CardTypeRequest:
      title: CardTypeRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory."
          format: int32
          nullable: true
          example: 14
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided."
          format: int32
          nullable: true
          example: 14
        PayerId:
          type: integer
          description: Payer Id of the selected payer.
          format: int32
          nullable: true
          example: 2343
        PayerNumber:
          type: string
          description: Payer Number of the selected payer.
          nullable: true
          example: GB000000124
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional if AccountNumber is passed else Mandatory.
          format: int32
          nullable: true
          example: 343
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed else Mandatory

            Example: GB000000124
          nullable: true
          example: GB000000124
        IncludeUsageRestrictions:
          type: boolean
          description: >-
            Include usage restrictions in the response.

            Optional field– default value is False.

            Possible values: True/False
        IncludePurchaseCategories:
          type: boolean
          description: >-
            Include purchase categories in the response.

            Optional field– default value is False.

            Possible values: True/False
    CardTypeResponse:
      title: CardTypeResponse
      type: object
      properties:
        CustomerCardTypes:
          type: array
          items:
            $ref: '#/components/schemas/CardTypeResponseCustomerCardTypesItems'
          description: ''
        Error:
          $ref: '#/components/schemas/CardTypeResponseError'
        RequestId:
          type: string
          description: API Request Id
          example: a0a7ceb0-5b32-4ec8-88e1-ad868967e43f
    CardTypeResponseCustomerCardTypesItems:
      title: CardTypeResponseCustomerCardTypesItems
      type: object
      properties:
        CanHavePIN:
          type: boolean
          description: True/False – Whether the cards of this card type can have PIN.
        CardTypeId:
          type: integer
          description: Card Type Id
          format: int32
          nullable: true
          example: 228
        CardTypeName:
          type: string
          description: Card Type Name.
          nullable: true
          example: DE-Kleinfhzg. International Multi
        ColCoCurrencyCode:
          type: string
          description: ISO currency code of the country.
          nullable: true
          example: EUR
        CustomerCardTypeId:
          type: integer
          description: Customer Card Type Id
          format: int32
          nullable: true
          example: 1576
        DayTimeRestrictions:
          $ref: '#/components/schemas/CardDayTimeRestrictions'
        DefaultPurchaseCategoryId:
          type: integer
          description: Default Purchase category of the card type.
          format: int32
          nullable: true
          example: 127
        EmbossAccountName:
          type: string
          description: Default Name to be embossed on the card
          nullable: true
          example: 5.11.3 DE
        ExpiryPeriod:
          type: integer
          description: Default Expiry period.
          format: int32
          nullable: true
          example: 48
        IsCRT:
          type: boolean
          description: True/False – Wether it is a CRT Card type or not.
        IsFleet:
          type: boolean
          description: True/False – Whether it is it a Fleet Card typeor not.
        IsInternational:
          type: boolean
          description: True/False – Whether it is an International Card type or not.
        IsNational:
          type: boolean
          description: True/False – Whether it is a National Card type or not.
        IsPartnerSitesIncluded:
          type: boolean
          description: True/False – Whether this card type is allowed in partner Stations.
        IsShellSitesOnly:
          type: boolean
          description: True/False – Whether it is only allowed in Shell Stations or not.
        IsVirtual:
          type: boolean
          description: True/False - Whether it is a Virtual Card type or not.
        IsVisibleToCustomers:
          type: boolean
          description: True/False – Whether this card type is visible in SFH for card ordering.
        IsActive:
          type: boolean
          description: Whether card type is active or not.
        IsCardAvailableForDownload:
          type: boolean
        IsCardVisibleToCustomers:
          type: boolean
        PANLength:
          type: integer
          description: PAN Length
          format: int32
          nullable: true
          example: 19
        PurchaseCategories:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseCategories'
          description: ''
          nullable: true
        TokenTypeId:
          type: integer
          description: Token type identifier.
          format: int32
          nullable: true
          example: 160
        TokenTypeName:
          type: string
          description: Token Type Name.
          nullable: true
          example: DE FLT INT MUL - CHIP
        UsageRestrictions:
          $ref: '#/components/schemas/CardUsageRestrictions'
        EMVContactless:
          type: boolean
          description: Is Europay, MasterCard, and Visa Contactless enabled or not.
        RFID:
          type: boolean
          description: Whether the card type is enabled for RFID (Radio Frequency Identification)
        PINChangeSupported:
          type: boolean
          description: PIN change supported or not.
        RequirePIN:
          type: boolean
          description: Whether a PIN is mandatory for the cards of this card type.
        OfflinePIN:
          type: boolean
          description: Whether offline PIN is enabled or not.
        IsDefault:
          type: boolean
          description: Whether card type is default or not.
        ApplicationsToShowNPIITokens:
          type: boolean
          description: "True/False \r\nNote: ApplicationsToShowNPIITokens will be set as ‘True’ when the accessing application API key exists in the “ApplicationsToShowNPIITokens” card type configuration else “False”."
        MediumTypeID:
          type: integer
          description: >-
            Id of the medium type identifier.

            Example: 1,2,4



            Full list below:

            1 - Fuel Card

            2 - Fuel Card with EV

            3 - EV only

            4 - Fuel Card and Key Fob

            5 - Key Fob

            6 - Virtual Card

            7 - NPII Token

            8 – Smartpay Token
          format: int32
          nullable: true
          example: 1
        MediumType:
          type: string
          description: "Name of the medium type identifier.\r\nExample: Fuel Card, Fuel Card with EV, Key Fob  \r\n\r\nFull list below:\r\n1 - Fuel Card\r\n2 - Fuel Card with EV\r\n3 - EV only\r\n4 - Fuel Card and Key Fob\r\n5 - Key Fob\r\n6 - Virtual Card\r\n7 - NPII Token\r\n8 - Smartpay Token"
          nullable: true
          example: Fuel Card
        ColCoCurrencySymbol:
          type: string
          description: Currency symbol of the country.
          nullable: true
          example: £
    CardDayTimeRestrictions:
      title: CardDayTimeRestrictions
      type: object
      properties:
        Level:
          type: string
          description: "Describes at which level the restriction is set at.\r\nPossible values:\r\nOU = Restriction set at ColCo card type \r\nCustomer = Restriction set at customer card type"
          nullable: true
          example: OU= 24537
        Monday:
          type: boolean
          description: Whether the transaction is allowed on Mondays or not.
        Tuesday:
          type: boolean
          description: Whether the transaction is allowed on Tuesdays or not.
        Wednesday:
          type: boolean
          description: Whether the transaction is allowed on Wednesdays or not.
        Thursday:
          type: boolean
          description: Whether the transaction is allowed on Thursdays or not.
        Friday:
          type: boolean
          description: Whether the transaction is allowed on Fridays or not.
        Saturday:
          type: boolean
          description: Whether the transaction is allowed on Saturdays or not.
        Sunday:
          type: boolean
          description: Whether the transaction is allowed on Sundays or not.
        TimeFrom:
          type: string
          description: "The time in the day from when the transaction is allowed.\r\nFormat: HH:mm: ss\r\nE.g., 21:00:00\r\n\r\nNote: \r\n1) The client application has to convert the value to the required date-time data type.\r\n2) The value will be 00:00:00 when no restriction set for this field."
          nullable: true
          example: 07:56:00
        TimeTo:
          type: string
          description: "allowed.\r\nFormat: HH:mm: ss\r\nE.g., 21:00:00\r\n\r\nNote: \r\n1) The client application has to convert the value to the required date-time data type.\r\n2) The value will be 00:00:00 when no restriction set for this field."
          nullable: true
          example: 08:19:09
    PurchaseCategories:
      title: PurchaseCategories
      type: object
      properties:
        Id:
          type: integer
          description: Purchase category Id
          format: int32
          example: 123
        Code:
          type: string
          description: >-
            Purchase category code

            Example: 0,1, 2 etc.

            Full list below:

            0 - All Fuels (without VP) and Lubricants

            1 - Fuel Save only

            2 - Fuel Save and Lubricants

            3 - No Restrictions

            4 - VP and Fuel Save

            5 - Diesel ONLY

            6 - Diesel and Lubricants

            7 - VP and Lubricants

            8 - VP and Fuel Save and Lubricants
          example: '1'
        Name:
          type: string
          description: "Purchase category name \r\nExample: Fuel Save Only\r\nFull list below:\r\n0 - All Fuels (without VP) and Lubricants\r\n1 - Fuel Save only\r\n2 - Fuel Save and Lubricants\r\n3 - No Restrictions\r\n4 - VP and Fuel Save\r\n5 - Diesel ONLY\r\n6 - Diesel and Lubricants\r\n7 - VP and Lubricants\r\n8 - VP and Fuel Save and Lubricants"
          example: FuelSave only
        IsVisible:
          type: boolean
          description: >-
            If True then PurchaseCategory can be used while submitting new order cards requests.

            If false this PurchaseCategory will not be used for Ordering Cards.
        ProductGroups:
          type: string
          description: List of Default product groups
          example: 19,1
    CardUsageRestrictions:
      title: CardUsageRestrictions
      type: object
      properties:
        Level:
          type: string
          description: "Describes at which level the restriction is set at.\r\nPossible values:\r\nOU = Restriction set at ColCo card type \r\nCustomer = Restriction set at customer card type"
          nullable: true
          example: OU
        DailySpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in a day.
          nullable: true
          example: 120
        WeeklySpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in a week.
          nullable: true
          example: 56.07
        MonthlySpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in a month.
          nullable: true
          example: 0
        AnnualSpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in a year.
          nullable: true
          example: 0
        LifeTimeSpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in the card’s life time.
          nullable: true
          example: 0
        DailyVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in a day.
          nullable: true
          example: 0
        WeeklyVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in a week.
          nullable: true
          example: 0
        MonthlyVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in a month.
          nullable: true
          example: 0
        AnnualVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in a year.
          default: 0
          nullable: true
        LifeTimeVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in the card’s life time.
          nullable: true
          example: 0
        TransactionSpendLimit:
          type: number
          description: Maximum amount that can be spend on the card in a transaction.
          nullable: true
          example: 0
        TransactionVolumeLimit:
          type: number
          description: Maximum volume of fuel that can be bought on the card in a transaction.
          nullable: true
          example: 0
        DailyTransactionCount:
          type: number
          description: Maximum number of transactions allowed on a card in a day.
          nullable: true
          example: 100
        WeeklyTransactionCount:
          type: number
          description: Maximum number of transactions allowed on a card in a week.
          nullable: true
          example: 100
        MonthlyTransactionCount:
          type: number
          description: Maximum number of transactions allowed on a card in a month.
          nullable: true
          example: 100
        AnnualTransactionCount:
          type: number
          description: Maximum number of transactions allowed on the card in a year.
          nullable: true
          example: 100
        LifeTimeTransactionCount:
          type: number
          description: Maximum number of transactions allowed on the card in the card’s life time.
          nullable: true
          example: 100
        IsVelocityCeiling:
          type: boolean
          description: "IsVelocityCeiling flag \r\nNote: When \"True\", the velocity defaults configured in MS DB will be considered as the Max Limits for velocity changes. When ‘false’ max allowed limits will be 999999999999 for Type “Count” and 9999999999.99 for Type ‘Value’."
    CardTypeResponseError:
      title: CardTypeResponseError
      type: object
      properties:
        Code:
          type: string
        Description:
          type: string
    CardGroupRequest:
      title: CardGroupRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
          example: 14
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
          example: 14
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.

            Optional if PayerNumber is passed, else Mandatory.

            This input is a search criterion.

            Example: 123456
          format: int32
          nullable: true
          example: 123
        PayerNumber:
          type: string
          description: "PayerNumber of the customer.\r\nOptional if PayerId is passed, else Mandatory. \r\nThis input is a search criterion.\r\nExample: GB00123456"
          nullable: true
          example: GB00123456
        Account:
          type: array
          items:
            $ref: '#/components/schemas/Accounts'
          description: ''
        CardGroupName:
          type: string
          description: "Card Group Name \r\nOptional. \r\nMinimum of 2 characters should be provided else not considered.\r\nCardGroups those have the entered value at any part"
          nullable: true
          example: test
        Status:
          type: string
          description: >-
            Card Group Status

            Mandatory

            Allowed values:

            •    ALL

            •    TERMINATED

            •    ACTIVE
          nullable: true
          example: ALL
        CurrentPage:
          type: integer
          description: >-
            Page Number (as shown to the users)

            Optional

            Default value 1
          format: int32
        PageSize:
          type: integer
          description: >-
            Page Size – Number of records to show on a page.

            Optional

            Default value 50.

            Return all rows if -1 is supplied as page size.
          format: int32
          example: 1
    CardGroupResponse:
      title: CardGroupResponse
      type: object
      properties:
        CardGroups:
          type: array
          items:
            $ref: '#/components/schemas/CardGroupResponseCardGroupsItems'
          description: ''
        CurrentPage:
          type: integer
          description: current page
          format: int32
          example: 1
        RowCount:
          type: integer
          description: number of records in current response
          format: int32
          example: 1
        TotalPages:
          type: integer
          description: Total pages available
          format: int32
          example: 1
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request id
          example: 3cc14d61-8f2a-4d88-cc3c-c53110646a85
    CardGroupResponseCardGroupsItems:
      title: CardGroupResponseCardGroupsItems
      type: object
      properties:
        AccountId:
          type: integer
          description: Account Id for the associated card group
          format: int32
          nullable: true
          example: 1229
        AccountNumber:
          type: string
          description: Account number for the associated card group
          nullable: true
          example: CZ00000929
        AccountShortName:
          type: string
          description: Account short name for the associated card group
          nullable: true
          example: Dominica South1
        ActiveCards:
          type: integer
          description: Total number of active cards for the given search criteria
          format: int32
          nullable: true
          example: 0
        BlockedCards:
          type: integer
          description: Total number of cards for the given search criteria that are permanently blocked
          format: int32
          nullable: true
          example: 1
        CancelledCards:
          type: integer
          description: Total number of cards for the given search criteria that are cancelled
          format: int32
          nullable: true
          example: 0
        CardDeliveryPoint:
          type: boolean
          description: card delivery point enabled or not
          nullable: true
        CardGroupId:
          type: integer
          description: Id of the card group matching the search criteria.
          format: int32
          nullable: true
          example: 1234
        CardGroupName:
          type: string
          description: Name of the card group matching the search criteria.
          nullable: true
          example: 1234T
        CardTypeCode:
          type: string
          description: Card Type Code
          nullable: true
          example: '0123'
        CardTypeId:
          type: integer
          description: Card Type Id
          format: int32
          nullable: true
          example: 123
        CardTypeName:
          type: string
          description: Card Type Name
          nullable: true
          example: test
        ExpiredCards:
          type: integer
          description: Total number of expired cards for the given search criteria
          format: int32
          nullable: true
          example: 0
        ExpiryDate:
          type: string
          description: >-
            Expiry date of the card.

            Format: yyyyMMdd

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
          example: '20231231'
        PrintOnCard:
          type: boolean
          description: PrintOnCard true/false
          nullable: true
        RenewalPendingCards:
          type: integer
          description: Total number of Renewal Pending Cards for the given search criteria
          format: int32
          nullable: true
          example: 5
        ReplacedCards:
          type: integer
          format: int32
          nullable: true
          example: 0
        Status:
          type: string
          description: Status of the card group.
          nullable: true
          example: TERMINATED
        TemporaryBlockByCustomer:
          type: integer
          description: Total number of cards for the given search criteria that are temporarily blocked by customer
          format: int32
          nullable: true
          example: 0
        TemporaryBlockByShell:
          type: integer
          description: Total number of cards for the given search criteria that are temporarily blocked by Shell
          format: int32
          nullable: true
          example: 0
        TerminatedDate:
          type: string
          description: "Terminated Date. \r\nFormat: yyyyMMdd\r\nNote: Clients to convert this to appropriate Date Time type."
          nullable: true
          example: '20210712'
        TotalCards:
          type: integer
          description: Total number of cards for the given search criteria
          format: int32
          nullable: true
          example: 10
    AuditRequest:
      title: AuditRequest
      type: object
      properties:
        Status:
          type: string
          description: >-
            Status of requests to be fetched.

            •    Success

            •    Failed

            •    InProgress

            •    Submitted

            •    Rejected

            •    PendingApproval

            •    All

            •    MailedToCSC

            Optional

            If not passed “All” will be considered as the default value.
          example: All
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory
          nullable: true
          example: BE00000113
        PayerId:
          type: integer
          description: >-
            Payer Id  of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
          example: 123
        AccountNumber:
          type: string
          nullable: true
          example: BE00000113
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
          example: 9
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
          example: 9
        Accounts:
          $ref: '#/components/schemas/Accounts'
        PageSize:
          type: integer
          description: >-
            Page Size – Number of records to show on a page

            Optional

            Default value 50
          format: int32
          example: 500
        RequestedOperation:
          type: array
          items:
            type: string
          description: >-
            Type of requests to be fetched.

            Optional

            Allowed values:

            •    OrderCard

            •    CreateCardGroup

            •    PINReminder

            •    MoveCard

            •    UpdateCardStatus

            •    UpdateCardGroup

            •    AutoRenew

            •    BulkCardOrder

            •    BulkCardBlock

            •    BulkCardOrderMultiAccount

            •    MobilePaymentRegistration

            •    UpdateCompanyInfo

            •    BCOSummary

            •    BCOMultiAccountSummary

            •    BCBSummary

            •    FundTransfer

            •    DeliveryAddressUpdate
        SortOrder:
          type: string
          description: "Allowed Sorting Options:\r\n1.    SubmittedDateDescending\r\n2.    SubmittedDateAscending \r\n3.    AccountNumberAscending\r\n4.    AccountNumberDescending\r\nOptional: Default value is 1\r\nExample value to be passed: 1,3"
          nullable: true
          example: '1'
        SearchText:
          type: string
          description: >-
            Search text used as criteria to filter the requests.

            Optional

            Minimum length is 4 characters (configurable). Else, an error (0007) will be returned. When valid text is provided, MS will return all the records that contains the Search Text within any of the look up fields
          nullable: true
          example: orde
        CurrentPage:
          type: integer
          description: >-
            Page Number (as shown to the users)

            Optional

            Default value 1
          format: int32
          nullable: true
          example: 1
        FromDate:
          type: string
          description: >-
            To search for requests submitted from this date.

            Optional

            Maximum of X days duration allowed per search. The X value is configurable and initially set to 180 days.

            Format: yyyyMMdd

            Example: 20200101

            If FromDate is not provided and ToDate is provided, then FromDate will be considered as 30 days less than ToDate. However, when both FromDate and ToDate is not provided then last 30 days will be considered for filtering.
          nullable: true
          example: '20240101'
        ToDate:
          type: string
          description: "To search for requests submitted until this date.\r\nOptional \r\nFormat: yyyyMMdd \r\nExample: 20200130\r\nIf ToDate is not provided and FromDate is provided, then ToDate will be considered as current date or 30 days from FromDate, whichever is earlier. However, when both FromDate and ToDate is not provided then last 30 days will be considered for filtering."
          nullable: true
          example: '20240202'
    AuditResponse:
      title: AuditResponse
      type: object
      properties:
        Audits:
          type: array
          items:
            $ref: '#/components/schemas/AuditResponseAuditsItems'
          description: ''
        CurrentPage:
          type: integer
          description: Current Page
          format: int32
          example: 1
        RowCount:
          type: integer
          description: Total row count matched for the given input criteria
          format: int32
          example: 1
        TotalPages:
          type: integer
          description: Calculated page count based on page size from the incoming API request and total number of rows matched for the given input criteria
          format: int32
          example: 1
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API RequestId
          example: 14915cff-5d37-4ee9-cb32-bd77b9d271cf
    AuditResponseAuditsItems:
      title: AuditResponseAuditsItems
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account id of the customer.

            It will be the source account id in case of “Fund Transfer
          format: int32
          nullable: true
          example: 123
        AccountNumber:
          type: string
          description: >-
            Account number of the customer.

            It will be the source account number in case of “Fund Transfer”
          nullable: true
          example: BE00000113
        AdditionalInformation1:
          type: string
          description: Additional information in the request.
          nullable: true
          example: '922'
        AdditionalInformation2:
          type: string
          description: Additional information in the request.
          nullable: true
          example: '2016'
        AdditionalInformation3:
          type: string
          description: Additional information in the request.
          nullable: true
          example: MERCEDES GLE KLASSE SEGM. L
        AdditionalInformation4:
          type: string
          description: Additional information in the request.
          nullable: true
          example: 408135/3
        AdditionalInformation5:
          type: string
          description: Additional information in the request.
          nullable: true
          example: API TEST CUSTOMER 113
        AdditionalInformation6:
          type: string
          description: Additional information in the request.
          nullable: true
          example: 408135/3
        AdditionalInformation7:
          type: string
          description: Additional information in the request.
          nullable: true
          example: 'null'
        AdditionalInformation8:
          type: string
          description: Additional information in the request.
          nullable: true
          example: 'null'
        AdditionalInformation9:
          type: string
          description: Additional information in the request.
          nullable: true
          example: 'null'
        CardGroupId:
          type: integer
          description: Additional information in the request.
          format: int32
          nullable: true
          example: 123
        CardGroupName:
          type: string
          description: Card group name in the request.
          nullable: true
          example: test
        CardId:
          type: integer
          description: Card Id in the request
          format: int32
          nullable: true
          example: 10594
        ColCoCode:
          type: integer
          description: Collecting company code of the customer
          format: int32
          nullable: true
          example: 9
        ColCoId:
          type: integer
          description: Collecting company id of the customer.
          format: int32
          nullable: true
          example: 9
        ErrorCode:
          type: string
          description: Error code of the request
          example: '0000'
        ErrorString:
          type: string
          description: Error description of the request
          nullable: true
          example: 'null'
        GlobalRequestID:
          type: string
          description: Global unique request reference provided by client application.
          nullable: true
          example: 6f1473ea-7f68-4ccb-acee-4b5b997aad5a
        PAN:
          type: string
          description: >-
            PAN in the request.

            If Mask PAN is enabled at Microservices configuration then all digits of the PAN, except the last 6 digits, will be masked.
          nullable: true
          example: '7002097550439850717'
        PayerId:
          type: integer
          description: Payer id of the customer.
          format: int32
          nullable: true
          example: 123
        PayerNumber:
          type: string
          description: Payer number of the customer.
          nullable: true
          example: BE00000113
        ProcessedOn:
          type: string
          description: "Request processed date. \r\nFormat: yyyyMMdd HH:mm: ss"
          nullable: true
          example: 20240201 14:30:26
        RequestedBy:
          type: string
          description: >-
            vUUID of the user who submitted this request.

            It will be the UUID of the Driver in the case of “MobilePaymentRegistration”
          nullable: true
          example: EWyIv8LpjgW3LlKDDUo0VZMN6JKpqRc
        RequestedOperation:
          type: string
          description: "User requested operation. \r\nPossible values:\r\n•    OrderCard\r\n•    CreateCardGroup\r\n•    PINReminder\r\n•    MoveCard\r\n•    UpdateCardStatus\r\n•    UpdateCardGroup\r\n•    AutoRenew\r\n•    BulkCardOrder\r\n•    BulkCardBlock\r\n•    BulkCardOrderMultiAccount\r\n•    MobilePaymentRegistration\r\n•    UpdateCompanyInfo\r\n•    BCOSummary\r\n•    BCOMultiAccountSummary\r\n•    BCBSummary\r\n•    FundTransfer\r\n•    DeliveryAddressUpdate"
          nullable: true
          example: OrderCard
        RequestReference:
          type: integer
          description: Reference number for the requested operation.
          format: int32
          nullable: true
          example: 519876
        RequestType:
          type: string
          description: "Request type initiated under the requested operation. \r\nPossible values:\r\n•    OrderCard\r\n•    CreateCardGroup\r\n•    PINReminder\r\n•    MoveCard\r\n•    UpdateCardStatus\r\n•    UpdateCardGroup\r\n•    AutoRenew\r\n•    BulkCardOrder\r\n•    BulkCardBlock\r\n•    BulkCardOrderMultiAccount\r\n•    MobilePaymentRegistration\r\n•    UpdateCompanyInfo\r\n•    BCOSummary\r\n•    BCOMultiAccountSummary\r\n•    BCBSummary\r\n•    FundTransfer\r\n•    DeliveryAddressUpdate"
          nullable: true
          example: OrderCard
        Status:
          type: string
          description: >-
            Status of the request.

            Possible values:

            •    Success

            •    Failed

            •    InProgress

            •    Submitted

            •    Rejected

            •    PendingApproval

            •    MailedToCSC
          nullable: true
          example: Success
        SubmittedOn:
          type: string
          description: "Request submitted date. \r\nFormat: yyyyMMdd HH:mm: ss"
          nullable: true
          example: 20240201 14:29:16
        SubRequestReference:
          type: integer
          description: Reference number for the individual request type.
          format: int32
          nullable: true
          example: 720061
        UserDisplayName:
          type: string
          description: >-
            Display name of the user who submitted this request.

            It will be the Display Name of the Driver in the case of “MobilePaymentRegistration” in the below format:
          nullable: true
          example: Supriya-ThridPartyAgent
    CreateCardGroupRequest:
      title: CreateCardGroupRequest
      type: object
      properties:
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e., Customer Id of the Payment Customer in H3 Cards Platform) of the selected payer.

            Optional if PayerNumber is passed else Mandatory
          format: int32
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Optional if AccountNumber is passed else Mandatory.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed else Mandatory.
        PrintOnCard:
          type: boolean
          description: Whether card group name to be embossed on the cards or not.
        CardGroupName:
          type: string
          nullable: true
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/CreateCardGroupRequestCardsItems'
          description: >-
            List of cards to be moved to the new card group. This list is optional – no card will be moved to the new card group when the list is empty.

            The fields of Card entity are described in the below rows.

            The maximum number of cards allowed to be moved in a request is 500 (configurable). The whole request including the card group creation will be rejected when the limit is exceeded.
    CreateCardGroupRequestCardsItems:
      title: CreateCardGroupRequestCardsItems
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account Id of the account of the card.

            Optional if AccountNumber is passed, else Mandatory.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the account of the card.

            Optional if AccountId is passed, else Mandatory.
        CardId:
          type: integer
          description: >-
            Card Id of the card.

            Optional if PAN is passed, else Mandatory.
          format: int32
        PAN:
          type: string
          description: >-
            PAN of the card.

            Optional if CardId is passed, else Mandatory.
    CreateCardGroupResponse:
      title: CreateCardGroupResponse
      type: object
      properties:
        MainReference:
          type: integer
          description: >-
            Reference number for tracking the execution of the requests – new Card Group creation and to move the cards to the new card group.

            Reference number will be null when the validations of new card group parameters fail.
          format: int32
        NewCardGroupReference:
          type: integer
          description: "Reference number for tracking the execution of card group creation. \r\nReference number will be null when the validations of new card group parameters fail."
          format: int32
        SuccessfulRequests:
          type: array
          items:
            $ref: '#/components/schemas/CreateCardGroupResponseSuccessfulRequestsItems'
          description: List of cards validated and submitted successfully for processing.
        ErrorCards:
          type: array
          items:
            $ref: '#/components/schemas/CreateCardGroupResponseErrorCardsItems'
          description: >-
            List of cards that failed validation and not submitted for processing.

            Entity: FailedCardReference

            This list will be empty when the validations of new card group parameters fail.
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request Id
          example: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
    CreateCardGroupResponseSuccessfulRequestsItems:
      title: CreateCardGroupResponseSuccessfulRequestsItems
      type: object
      properties:
        CardId:
          type: integer
          description: Card Id of the card.
          format: int32
        PAN:
          type: string
          description: PAN of the card.
        Reference:
          type: integer
          description: Reference number for tracking of update status request of the specific card,
          format: int32
    CreateCardGroupResponseErrorCardsItems:
      title: CreateCardGroupResponseErrorCardsItems
      type: object
      properties:
        CardId:
          type: integer
          description: Card Id of the card.
          format: int32
        PAN:
          type: string
          description: PAN of the card.
        ErrorCode:
          type: string
          description: Error code for validation failure.
        ErrorDescription:
          type: string
          description: Description of validation failure.
    UpdateCardGroupRequest:
      title: UpdateCardGroupRequest
      type: object
      properties:
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e., Customer Id of the Payment Customer) of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
        AccountId:
          type: integer
          description: Account ID of the card-group to be updated/terminated.
          format: int32
        AccountNumber:
          type: string
          description: Account Number of the card-group to be updated/terminated.
        CardGroupId:
          type: integer
          description: Unique Id of the card group that needs to be updated or terminated.
          format: int32
        CardGroupName:
          type: string
          description: >-
            New name for the card group if it needs to be updated. Set this field to ‘null’ if no change required to the current card group name.



            Optional



            Minimum length: 1 (Configurable)

            Maximum length: 40 (Configurable)

            Allowed characters (Configurable) are: - A-Z 0-9, / ‘. & Ä Ö Ü Å Æ É Ø

            Note: The card group name has to be unique for customer. Else an error with error code 9015 is returned.
        PrintOnCard:
          type: boolean
          description: "Whether to emboss the card group name on the cards. \r\nPopulate this field only if the value needs to be updated. Otherwise set to ‘null’."
        CardTypeId:
          type: integer
          description: "Card Type ID of the card group. \r\nPopulate this field if the value needs to be updated. Otherwise set to ‘null’.\r\nOptional\r\nNote: \r\n1)    If a card type is passed, the cardgorup will allow cards with same card type to be moved in to the card group.\r\n2)    Pass ‘-1’ to remove the card type from the card group."
          format: int32
        TerminateCardGroup:
          type: boolean
          description: >-
            Whether to terminate the card group.

            When set to true, the card group will be terminated by setting current date as it’s termination date.

            Optional, False by default .
        MoveCards:
          type: boolean
          description: >-
            Whether to move the cards from this CardGroup in to a different or a new CardGroup.

            Optional

            When the value is set to ‘False’ or ‘null’, the cards that are currently in the card-group will remain under the same card-group.
        TargetAccountId:
          type: integer
          description: >-
            Account ID of the new/target card-group.

            Either TargetAccountId or TargetAccountNumber is mandatory when MoveCards is set to True.
          format: int32
        TargetAccountNumber:
          type: string
          description: >-
            Account Number of the new/target card-group.

            Either TargetAccountId or TargetAccountNumber is mandatory when MoveCards is set to True.
        TargetNewCardGroupName:
          type: string
          description: >-
            Name of the new card group if the cards in the existing card-group have to be moved to a new card-group.



            Mandatory when MoveCards parameter is True and TargetCardGroupId is null.



            Minimum length: 1 (Configurable)

            Maximum length: 30 (Configurable)
        TargetCardGroupId:
          type: integer
          description: >-
            ID of the card group if the cards in the existing card-group have to be moved to another existing card-group.

            Mandatory when MoveCards parameter is True and TargetNewCardGroupName is null.

            If the value is “-1” then the cards will be moved out of the current CardGroup.
          format: int32
    UpdateCardGroupResponse:
      title: UpdateCardGroupResponse
      type: object
      properties:
        MainReference:
          type: integer
          description: >-
            Reference number for tracking the overall request.

            The value will be null when the validation fails.
          format: int32
        UpdateCardGroupReference:
          type: integer
          description: >-
            Reference number for tracking the execution of terminate card-group request.

            Reference number will be null when the validations fail or TerminateCardGroup in the request object is false.
          format: int32
        NewCardGroupReference:
          type: integer
          description: "Reference number for tracking the execution of new card group creation in the case when the cards in the terminating card-group have to be moved to a new card-group. \r\nReference number will be null when the validations fail or new card-group creation is not requested."
          format: int32
        MoveCardReferences:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCardGroupResponseMoveCardReferencesItems'
          description: >-
            List of cards submitted successfully for processing the move to the target card-group or to change card-group to null.

            This list will be empty when the validations fail or there are no cards in the card-group that is getting terminated or MoveCards in the request object is false
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request ID
    UpdateCardGroupResponseMoveCardReferencesItems:
      title: UpdateCardGroupResponseMoveCardReferencesItems
      type: object
      properties:
        CardId:
          type: integer
          description: >-
            Card Id of the card.

            Example: 123
          format: int32
          nullable: true
        PAN:
          type: string
          description: >-
            PAN of the card.

            Example: 7002051123456789145
          nullable: true
        Reference:
          type: integer
          description: Reference number for tracking of update status request of the specific card.
          format: int32
          nullable: true
    SearchCardRequest:
      title: SearchCardRequest
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/Filters'
        PageSize:
          type: string
          description: >-
            Page Size – Number of records to show on a page

            Optional

            Default value 50
          example: '1'
        Page:
          type: string
          description: Page Number
          example: '1'
    SearchRequest:
      title: SearchRequest
      required:
      - CardStatus
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          nullable: true
        CardGroupId:
          type: integer
          description: >-
            Card group id. <br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            When -1 is passed, those cards that does not belong to any card group will be returned.
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: >-
            Card group name.<br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            If CardGroupId is provided then this search criterion will be ignored, else, those cards that have the card group name completely matching with the entered value will be returned.
          nullable: true
        CardSegment:
          type: string
          description: >-
            Market segment to which card belongs to.<br />

            Optional.<br />

            Allowed values<br />

            • CRT<br />

            • Fleet
          nullable: true
        CardStatus:
          type: array
          items:
            type: string
          description: >-
            Status of the card.<br />

            Mandatory.<br />

            Multiple statuses are allowed to be included in the search criteria.<br />

            CardStatus filter accepts either of the two values for each status as described below. However, the output field “StatusDescription” is aligned with second value highlighted in italics.<br />

            Below are the possible allowed statuses: <br />

            • ACTIVE or Active – Cards at status Active if the IncludeIntermediateStatus flag is true: Active (Block in progress), Active (Cancel in progress), Active (Marked as damaged)), New (Cancel in progress).<br />

            • ON_ORDER or New – Cards at status New<br />

            • EXPIRED or Expired – Cards at status Expired<br />

            • BLOCKED or Blocked Card – Cards at status Block (The result will include all cards having the following intermediate status, if the IncludeIntermediateStatus flag is true: Blocked card (Unblock in progress))<br />

            • TEMP_BLOCKED_CUSTOMER or Temporary Block(Customer) – Cards at status Temporary Blocked By Customer<br />

            • TEMP_BLOCKED_SHELL or Temporary Block (Shell) – Cards at Status Temporary Blocked by Shell<br />

            • CANCELLED or Cancelled – Cards at status Cancelled<br />

            • PENDING_RENEWAL or Pending Renewal - Cards that are in renewal process<br />

            • REPLACED or Replaced – Cards at Status Replaced<br />

            • FRAUD or Fraud – Cards at Status FRAUD<br />

            • ALL
        CardTypeCode:
          type: string
          description: >-
            ISO code of the card i.e. first 7 digits of the PAN<br />

            Optional.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional If ColCo Id or ColCoCountryCode is passed else Mandatory<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: >-
            The 2 character ISO Code for the customer and card owning country.<br />

            Optional If ColCoId or ColCoCode is passed else Mandatory.<br />
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id  of the selected payer. <br />

            Optional If ColCoCode or ColCoCountryCode is passed else Mandatory <br />
          format: int32
          nullable: true
        Coverage:
          type: string
          description: >-
            Cards allowed to used nationally/internationally.<br />

            Optional.<br />

            Allowed values<br />

            -National<br />

            -International
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation Date<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        DriverName:
          type: array
          items:
            type: string
          description: >-
            Driver Name embossed on the card<br />

            Optional<br />

            Up to 10 driver names could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each driver name else not considered.<br />

            Those cards will be returned when part of the driver name matches with any of the string passed in the list.<br />

            Max Length for each Driver name: 50
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card<br />

            Optional<br />

            Format: yyyyMMdd<br />
          nullable: true
        ExcludeBundleId:
          type: string
          description: >-
            Bundle Id for the Card, which needs to be excluded in the response.<br />

            Optional
          nullable: true
        ExcludeCancelledCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Cancelled Status in Cards Platform<br />
        ExcludeCardGroupId:
          type: integer
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified<br />
          format: int32
          nullable: true
        ExcludeCardGroupName:
          type: string
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified<br />
          nullable: true
        ExcludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be excluded in the response. <br />

            Details of the SerachCard entity are given below.<br />
        ExcludeFraudCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Fraud Status in Cards Platform<br />
        ExcludePendingRenewalCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Pending Renewal Status in Cards Platform
        ExcludeReplacedCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Replaced Status in Cards Platform<br />
        ExpiringInDays:
          type: integer
          description: >-
            Cards active and expiring in given number of days.<br />

            Optional<br />

            Note: When a value is passed in this parameter, only active cards will be considered while searching.<br />
          format: int32
          nullable: true
        ExpiryMonth:
          type: string
          description: >-
            Month in which the card is expiring.<br />

            Optional.<br />

            Format: MMYYYY<br />
          nullable: true
        IncludeBundleDetails:
          type: boolean
          description: >-
            Default value is False,<br />

            When the value is True, API will return bundle Id associated with card in response.<br />
        IncludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be included in the response.<br />

            Details of the SerachCard entity are given below.<br />
        IncludeIntermediateStatus:
          type: boolean
          description: >-
            A flag which indicates if the response can contain intermediate statuses.<br />

            Optional<br />

            Default: false
        IssuedAfter:
          type: string
          description: >-
            If provided, only list cards issued after the given date<br />

            Optional<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        Network:
          type: string
          description: >-
            Cards allowed to be used in site.<br />

            Optional.<br />

            Allowed values<br />

            -ShellSitesOnly<br />

            -PartnersSitesIncluded
          nullable: true
        PANEndsWith:
          type: string
          description: >-
            Last digits of the PAN number<br />

            Minimum 4 last digits of the card should be sent for this field to be considered as part of the search criteria.<br />

            Optional<br />

            Max Length: 50
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory<br />

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional if PayerId is passed else Mandatory<br />
          nullable: true
        PurchaseCategoryCode:
          type: string
          description: >-
            Purchase category code of the card.<br />

            Optional.
          nullable: true
        SortOrder:
          type: string
          description: >-
            Possible options are:<br />

            1.ExpiringDateAscending<br />

            2.ExpiringDateDescending<br />

            3.DriverNameAscending(If Driver Name is null then VRN value will be considered)<br />

            4.DriverNameDescending(If Driver Name is null then VRN value will be considered)<br />

            5.VRNAscending(If VRN is null then Driver Name value will be considered)<br />

            6.VRNDescending(If VRN  is null then Driver Name value will be considered)<br />

            7.LastUsedDateAscending<br />

            8.LastUsedDateDescending<br />

            9.IssueDateAscending<br />

            10.IssueDateDescending<br />

            11.PurchaseCategoryCodeAscending<br />

            12.PurchaseCategoryCodeDescending<br />

            13.CardSegmentAscending (CRT will appear first)<br />

            14.CardSegmentDescending (Fleet will appear first)<br />

            Optional
          nullable: true
        IncludeScheduledCardBlocks:
          type: boolean
          description: >-
            A flag which indicates if the response can contain scheduled card blocks details<br />

            Optional<br />

            Default: false
        TokenTypeID:
          type: integer
          description: >-
            Token Type ID for the Card<br />

            Optional
          format: int32
          nullable: true
        TokenTypeName:
          type: string
          description: >-
            Token Type name for the Card<br />

            Optional
          nullable: true
        VehicleRegistrationNumber:
          type: array
          items:
            type: string
          description: >-
            Vehicle Registration embossed on the card<br />

            Optional<br />

            Up to 10 vehicle registration numbers could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each VRN else not considered<br />

            Those cards will be returned when part of the VRN matches with any of the string passed in the list.<br />

            Max Length for each VRN: 50
        ExcludeOldCards:
          type: boolean
          description: >-
            Default Value: False<br />

            When this field is set to True, cards with below status 2 years (configurable) ago and earlier are excluded from the result<br />

            -Blocked Card<br />

            -Expired<br />

            -Cancelled<br />

            -Suspended<br />

            -Blocked<br />

            -Expired and Cancelled<br />

            -Replaced<br />

            -Replaced By<br />

            -Closed<br />

            -Fraud<br />
        ExcludeExpiringCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are expiring <br />

            within 120 (i.e. Configured) days, if the status of the card is 1 or 41 or 42 in Cards platform.
        ClientReferenceId:
          type: string
          description: Customer reference number of the card.
          nullable: true
        ReissueSetting:
          type: string
          description: >-
            Default Value: All<br />

            Optional<br />

            This option is used to filter the list of cards with ‘ReissueSetting’.<br />

            If ‘True’, the API will return cards with ReIssueSetting value is true.<br />

            If ‘False’, the API will return cards with ReIsssueSetting value is false.<br />

            If ‘ALL’, API will return cards with ReIssueSetting value True &amp; False both.<br />

            Allowed Values:<br />

            1.    All<br />

            2.    True<br />

            3.    False
          nullable: true
        RequestId:
          type: string
      description: Encapsulate the Search details request.
    SearchCard:
      title: SearchCard
      type: object
      properties:
        CardId:
          type: integer
          description: >-
            Unique Card Id

            Optional if PAN is given, else mandatory.
          format: int32
          nullable: true
        PAN:
          type: string
          description: >-
            Card PAN.

            Optional if CardId is given, else mandatory.

            Note: PAN is ignored if CardId is given.
          nullable: true
        PANID:
          type: number
          description: "Card PANID \r\n optional id cardid given, else mandatory \r\nNote: PANID is ignored if CardId is given."
      description: SearchCard
    CardSearchResponse:
      title: CardSearchResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
          nullable: true
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCES, FAILED, PARTIAL_SUCCES'
          nullable: true
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Card'
          description: ''
        Page:
          type: integer
          description: Specifies the returned page of the results
          format: int32
        PageSize:
          type: integer
          description: Specifies the number of records to be returned which could be less than the PageSize in the request
          format: int32
        TotalPages:
          type: integer
          description: Specifies the total pages available in the result
          format: int32
        TotalRecords:
          type: integer
          description: Specifies the total pages available in the result
          format: int32
    Card:
      title: Card
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID
          format: int32
          nullable: true
        AccountName:
          type: string
          description: Account Name
          nullable: true
        AccountNumber:
          type: string
          description: Account Number
          nullable: true
        AccountShortName:
          type: string
          description: Account Short Name
          nullable: true
        BundleId:
          type: string
          description: >-
            Bundle Id associated with card in the Gateway.<br />

             This field will have null value if the card is not associated with any bundle in Gateway or the value of IncludeBundleDetails in request is false.
          nullable: true
        CardBlockSchedules:
          type: array
          items:
            $ref: '#/components/schemas/CardBlockSchedule'
          description: >-
            List of Scheduled Card Blocks details<br />

            Entity: CardBlockSchedule
        CardGroupId:
          type: integer
          description: Card group ID
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: Card group name
          nullable: true
        CardId:
          type: integer
          description: Unique Card Id
          format: int32
          nullable: true
        CardTypeCode:
          type: string
          description: ISO code of the card i.e. first 7 digits of the PAN
          nullable: true
        CardTypeId:
          type: integer
          description: >-
            Card Type ID Example Id and Description: 1 -Philippines CRT 7077861 2-Philippines<br />

            Fleet 7002861 5-SHELL FLEET-HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL CRT- HONG KONG 7077821
          format: int32
          nullable: true
        CardTypeName:
          type: string
          description: >-
            Card Type Name Example Id and Description: 1-Philippines CRT 7077861 2-Philippines <br />

            Fleet 7002861 5-SHELL FLEET- HONG KONG 7002821 6-SHELL NHF- HONG KONG 7002821 7-SHELL  CRT- HONG KONG 7077821
          nullable: true
        ColCoCountryCode:
          type: string
          description: >-
            The 2 character ISO Code for the customer and card owning country. <br />

            If default card type is not set then the first two alphabets of the account ID is returned.
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation datetime.<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        DriverName:
          type: string
          description: Driver name
          nullable: true
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        ExpiryDate:
          type: string
          description: >-
            Expiry date of the card.<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        FleetIdInput:
          type: boolean
          description: True/False True if fleet id input is enabled, else false
        IsCRT:
          type: boolean
          description: True/False True if it is a CRT type card, else false
        IsFleet:
          type: boolean
          description: True/False True if it is a Fleet type card, else false
        IsInternational:
          type: boolean
          description: True/False True if it is an international card, else false
        IsNational:
          type: boolean
          description: True/False True if it is a national card, else false
        IsPartnerSitesIncluded:
          type: boolean
          description: True/False True if it is allowed at all partner sites, else false
        IsShellSitesOnly:
          type: boolean
          description: True/False True if it is only allowed at Shell sites, else false
        IssueDate:
          type: string
          description: >-
            Issue date<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        IsSuperseded:
          type: boolean
          description: True/False True if a new card is issued with the same PAN, else false.
        IsVirtualCard:
          type: boolean
          description: True/False True if it is a virtual card, else false
        LastModifiedDate:
          type: string
          description: >-
            Card last modified date and time<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        LastUsedDate:
          type: string
          description: >-
            Card last used date .<br />

            Note: last used date of a card will be calculated based on billed/unbilled sales items

                  of a given card.The query that extracts the last used dates will be applied on the

                  subset of the cards being returned to the client.Unbilled sales items is checked

                  first and for those not found in the unbilled table, sales items will be checked

                  (only when the last used date is not found in unbilled table for at least a single

                  card from the result). The transactions in last 48 hours are not expected to be

            Therefore this field gives the correct information up to 48 hours early.<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: Clients to convert this to appropriate DateTime type
          nullable: true
        LocalCurrencyCode:
          type: string
          description: ISO code of the local currency. <br />
          nullable: true
        LocalCurrencySymbol:
          type: string
          description: Local currency symbol. <br />
          nullable: true
        OdometerInput:
          type: boolean
          description: True/False True if odometer input is enabled on the card, else false
        PAN:
          type: string
          description: Card PAN
          nullable: true
        MaskedPAN:
          type: string
          description: Card PAN Mask PAN (Mask all digits except the Last 6 digits of the PAN)
        PANID:
          type: number
          description: Card PAN ID.
        PurchaseCategoryCode:
          type: string
          description: Purchase category code
          nullable: true
        PurchaseCategoryId:
          type: integer
          description: >-
            Purchase category Id <br />

            Note: Not Purchase code.
          format: int32
          nullable: true
        PurchaseCategoryName:
          type: string
          description: Purchase category name
          nullable: true
        Reason:
          type: string
          description: 'Card Status reason Example: Lost Stolen Card no longer required'
          nullable: true
        ReissueSetting:
          type: string
          description: >-
            Reissue setting of the card. If the card is superseded (i.e. a replacement/new card is issued) then reissue setting of the latest card issued. <br />

            Values<br />

            •True –Card will be Reissued when nearing its expiry date <br />

            •False –Card will not be Reissued
          nullable: true
        StatusDescription:
          type: string
          description: >-
            Status Description (Active, Temporarily Blocked, etc.,)<br />

            Possible Ids and description: 1 Active 7 Blocked Card 8 Expired 9 Cancelled 10 New 23 Pending Renewal 31 Replaced 41<br />

            Temporary Block(Customer) 42 Temporary Block(Shell) 43 Fraud 101 Active(Block in progress)<br />

            * 102 Blocked Card(Unblock in progress) <br />

            * 103 Active(Cancel in progress) <br />

            * 104 Active(Marked as damaged)<br />

            * 105 New(Cancel in progress) <br />

            * 106 { Status}(Scheduled for block)<br />

            * 107 { Status}(Scheduled for unblock) <br />

            *# Note: Items marked with* are intermediate statuses  to indicate that there are pending requests in progress.<br />

            The response can contain these intermediate statuses only if the<br />

            IncludeIntermediateStatus flag is true. The placeholder { Status} in the items<br />

            marked with # will be replaced with the  status description. E.g., Active (Scheduled for block)
          nullable: true
        StatusId:
          type: integer
          description: >-
            Card Status id Possible Ids and description: 1 Active 7 Blocked Card 8 Expired 9 Cancelled 10 New 23 Pending Renewal 31 Replaced 41 Temporary Block(Customer) 42 <br />

            Temporary Block(Shell) 43 Fraud 101 Active(Block in progress) <br />

            * 102 Blocked Card(Unblock in progress)<br />

            * 103 Active(Cancel in progress) <br />

            * 104 Active(Marked as damaged) <br />

            * 105 New(Cancel in progress)<br />

            * 106 { Status}(Scheduled for block) <br />

            # 107 {Status}(Scheduled for unblock)<br />

            *# Note: Items marked with* are intermediate statuses to indicate that there are pending requests in progress.<br />

            The response can contain these intermediate statuses only if the IncludeIntermediateStatus flag is true.<br />

            The placeholder { Status} in the items marked with # will be replaced with<br />

            the status description. E.g., Active (Scheduled for block)
          format: int32
          nullable: true
        TokenTypeID:
          type: integer
          description: Token Type ID configured for the Card E.g. 107
          format: int32
          nullable: true
        TokenTypeName:
          type: string
          description: Token Type Name configured for the Card
        VRN:
          type: string
          description: Vehicle registration number
          nullable: true
        ClientReferenceId:
          type: string
          description: Customer reference number of the card.
          nullable: true
        IsEMVContact:
          type: boolean
          description: Is Europay, MasterCard, and Visa Contact enabled or not.
        IsEMVContactless:
          type: boolean
          description: Is Europay, MasterCard, and Visa Contactless enabled or not.
        IsRFID:
          type: boolean
          description: Whether the card type is enabled for RFID (Radio Frequency Identification)
        RFIDUID:
          type: string
          description: RFIDUID
          nullable: true
        EMAID:
          type: string
          description: EMAID
          nullable: true
        EVPrintedNumber:
          type: string
          description: EV Printed Number
          nullable: true
        CardMediaCode:
          type: string
          description: Card Media Code.
          nullable: true
    CardBlockSchedule:
      title: CardBlockSchedule
      type: object
      properties:
        FromDate:
          type: string
          description: >-
            Effective start date of Block / Unblock<br />

            Format: yyyyMMdd
          nullable: true
        ToDate:
          type: string
          description: >-
            Effective end date of Block / Unblock<br />

            Format: yyyyMMdd
          nullable: true
      description: Response entity object for CardBlockSchedule  list
    ErrorObject:
      title: ErrorObject
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCES, FAILED, PARTIAL_SUCCESS'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          description: ''
    ErrorDetails:
      title: ErrorDetails
      type: object
      properties:
        Code:
          type: string
          description: Error code representing the error encountered
        Title:
          type: string
          description: Error type description
        Detail:
          type: string
          description: Detailed inforamtion about the error
        AdditionalInfo:
          type: object
          description: Applicable when more details related to error to be returned
    CardSummaryRequest:
      title: CardSummaryRequest
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/Filters1'
    SummaryRequest:
      title: SummaryRequest
      required:
      - CardStatus
      - RequestId
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional If ColCo Id or ColCoCountryCode is passed else Mandatory.<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: >-
            The 2 character ISO Code for the customer and card owning country.<br />

            Optional If ColCoId or ColCoCode is passed else Mandatory.<br />
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id (in ) of the selected payer.<br />

            Optional If ColCo Codeor ColCoCountryCode is passed else Mandatory <br />
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer ) of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional if PayerId is passed else Mandatory
          nullable: true
        CardGroupId:
          type: integer
          description: >-
            Card group id.<br />

            Optional. <br />

            This input is a search criterion, if given.<br />

            When -1 is passed, those cards that does not belong to any card group will be returned.
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: >-
            Card group name.<br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            If CardGroupId is provided then this search criterion will be ignored, else, those cards that have the card group name completely matching with the entered value will be returned
          nullable: true
        CardStatus:
          type: array
          items:
            type: string
          description: >-
            Status of the card.<br />

            Mandatory.<br />

            Multiple statuses are allowed to be included in the search criteria.<br />

            CardStatus filter accepts either of the two values for each status as described below. However, the output field “StatusDescription” is aligned with second value highlighted in italics.<br />

            Below are the possible allowed statuses: <br />

            • ACTIVE or Active – Cards at status Active (The result will include all the cards having the following intermediate statuses as defined s, if the IncludeIntermediateStatus flag is true: Active (Block in progress), Active (Cancel in progress), Active (Marked as damaged)), New (Cancel in progress).<br />

            • ON_ORDER or New – Cards at status New <br />

            • EXPIRED or Expired – Cards at status Expired<br />

            • BLOCKED or Blocked Card – Cards at status Block (The result will include all cards having the following intermediate status as defined, if the IncludeIntermediateStatus flag is true: Blocked card (Unblock in progress))<br />

            • TEMP_BLOCKED_CUSTOMER or Temporary Block(Customer) – Cards at status Temporary Blocked By Customer<br />

            • TEMP_BLOCKED_SHELL or Temporary Block (Shell) – Cards at Status Temporary Blocked by Shell<br />

            • CANCELLED or Cancelled – Cards at status Cancelled<br />

            • PENDING_RENEWAL or Pending Renewal - Cards that are in renewal process<br />

            • REPLACED or Replaced – Cards at Status Replaced<br />

            • FRAUD or Fraud – Cards at Status FRAUD<br />

            • ALL
          nullable: true
        ExpiringInDays:
          type: integer
          description: >-
            Cards active and expiring in given number of days.<br />

            Optional<br />

            Note: When a value is passed in this parameter, only active cards will be considered while searching.
          format: int32
          nullable: true
        IssuedAfter:
          type: string
          description: >-
            If provided, only list cards issued after the given date<br />

            Optional<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        PANEndsWith:
          type: string
          description: >-
            Last digits of the PAN number<br />

            Minimum 4 last digits of the card should be sent for this field to be considered as part of the search criteria.<br />

            Optional<br />

            Max Length: 50
          nullable: true
        DriverName:
          type: array
          items:
            type: string
          description: >-
            Driver Name embossed on the card<br />

            Optional<br />

            Up to 10 driver names could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each driver name else not considered.<br />

            Those cards will be returned when part of the driver name matches with any of the string passed in the list.<br />

            Max Length for each Driver name: 50
        VehicleRegistrationNumber:
          type: array
          items:
            type: string
          description: >-
            Vehicle Registration embossed on the card<br />

            Optional<br />

            Up to 10 vehicle registration numbers could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each VRN else not considered<br />

            Those cards will be returned when part of the VRN matches with any of the string passed in the list.<br />

            Max Length for each VRN: 50
        IncludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be included in the response.<br />

            Details of the SerachCard entity are given below.
        ExcludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be excluded in the response. <br />

            Details of the SerachCard entity are given below.
        ExcludeBundleId:
          type: string
          description: >-
            Bundle Id for the Card, which needs to be excluded in the response.<br />

            Optional
          nullable: true
        CardSegment:
          type: string
          description: >-
            Market segment to which card belongs to.<br />

            Optional.<br />

            Allowed values<br />

            • CRT<br />

            • Fleet
          nullable: true
        PurchaseCategoryCode:
          type: string
          description: >-
            Purchase category code of the card.<br />

            Optional.
          nullable: true
        CardTypeCode:
          type: string
          description: >-
            ISO code of the card i.e. first 7 digits of the PAN<br />

            Optional.
          nullable: true
        ExcludePendingRenewalCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Pending Renewal Status in Cards Platform
        ExcludeCancelledCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Cancelled Status in Cards Platform
        ExcludeReplacedCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Replaced Status in Cards Platform
        ExcludeFraudCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Fraud Status in Cards Platform
        ExcludeCardGroupId:
          type: integer
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified
          format: int32
          nullable: true
        ExcludeCardGroupName:
          type: string
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation Date<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        Network:
          type: string
          description: >-
            Cards allowed to be used in site.<br />

            Optional.<br />

            Allowed values<br />

            • ShellSitesOnly<br />

            • PartnersSitesIncluded<br />
          nullable: true
        Coverage:
          type: string
          description: >-
            Cards allowed to used nationally/internationally.<br />

            Optional.<br />

            Allowed values<br />

             -National<br />

             -International
          nullable: true
        ExpiryMonth:
          type: string
          description: >-
            Month in which the card is expiring.<br />

            Optional.<br />

            Format: MMYYYY
          nullable: true
        ExcludeOldCards:
          type: boolean
          description: >-
            Default Value: False<br />

            When this field is set to True, cards with below status 2 years (configurable) ago and earlier are excluded from the result<br />

             -Blocked Card<br />

             -Expired<br />

             -Cancelled<br />

             -Suspended<br />

             -Blocked<br />

             -Expired and Cancelled<br />

             -Replaced<br />

             -Replaced By<br />

             -Closed<br />

             -Fraud<br />
        ReissueSetting:
          type: string
          description: >-
            Default Value: All<br />

            Optional<br />

            This option is used to filter the list of cards with ‘ReissueSetting’.<br />

            If ‘True’, the API will return cards with ReIssueSetting value is true.<br />

            If ‘False’, the API will return cards with ReIsssueSetting value is false.<br />

            If ‘ALL’, API will return cards with ReIssueSetting value True &amp; False both.<br />

            Allowed Values:<br />

            1.    All<br />

            2.    True<br />

            3.    False
          nullable: true
        RequestId:
          type: string
          nullable: true
      description: >-
        Encapsulates the details of a Summary Request.

        Summary Request fields are same as the Search Request base class and no new fields are required.
    CardSummaryResponse:
      title: CardSummaryResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        Status:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        Data:
          type: array
          items:
            $ref: '#/components/schemas/SummaryResponse'
          description: ''
    SummaryResponse:
      title: SummaryResponse
      type: object
      properties:
        ActiveCards:
          type: integer
          description: Total number of active cards for the given search criteria
          format: int32
          nullable: true
        BlockedCards:
          type: integer
          description: Total number of cards for the given search criteria that are permanently blocked (Blocked)
          format: int32
          nullable: true
        CancelledCards:
          type: integer
          description: Total number of cards for the given search criteria that are cancelled (at cancelled status) blocked by customer
          format: int32
          nullable: true
        ExpiredCards:
          type: integer
          description: Total number of expired cards for the given search criteria
          format: int32
          nullable: true
        ExpiringCards:
          type: integer
          description: Cards that are active and expiring in X days, X should be configurable
          format: int32
          nullable: true
        FraudCards:
          type: integer
          description: Totalnumber of Cards in Fraud status for the given search criteria.
          format: int32
          nullable: true
        NewCards:
          type: integer
          description: Total number of cards in New status for the given search criteria.
          format: int32
          nullable: true
        RenewalPendingCards:
          type: integer
          description: Total number of Renewal Pending cards for the given search criteria
          format: int32
          nullable: true
        ReplacedCards:
          type: integer
          description: Cards with status Replaced
          format: int32
          nullable: true
        TemporaryBlockByCustomer:
          type: integer
          description: Total number of cards for the given search criteria that are temporarily blocked by customer
          format: int32
          nullable: true
        TemporaryBlockByShell:
          type: integer
          description: Total number of cards for the given search criteria that are temporarily blocked by Shell
          format: int32
          nullable: true
        TotalCards:
          type: integer
          description: Total number of cards for the given search criteria
          format: int32
          nullable: true
      description: Encapsulates the details of a Summary response.
    OrderCardRequest:
      title: OrderCardRequest
      type: object
      properties:
        CardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetail'
          description: List of CardOrder entity. The fields in this entity are described below.
      description: This entity models the data that is sent in the http request body for this operation.
    CardDetail:
      title: CardDetail
      required:
      - CardDeliveryType
      - PINAdviceType
      type: object
      properties:
        PayerId:
          type: integer
          description: >-
            Payer Id  of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional if PayerId is passed else Mandatory
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.<br />

            Optional if AccountNumber is passed, else mandatory.<br />

            This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.<br />

            Optional if AccountId is passed, else mandatory.<br />

            This input is a search criterion, if given.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer.<br />

            Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id of the selected payer.<br />

            Optional If ColCo Code is passed else Mandatory
          format: int32
          nullable: true
        CardTypeId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: >-
            Card Type ID<br />

            Mandatory
          format: int32
          nullable: true
        TokenTypeId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: >-
            Token Type Id – Linked to the selected card type<br />

            Optional<br />

            Default – Assign the default token type associated with the card type of the card being created.<br />

            The default value will be set by the background process and an error (code 12009) will be thrown by the background process when default value is not identified or invalid token type id is passed in the request.
          format: int32
          nullable: true
        EmbossText:
          maxLength: 25
          type: string
          description: >-
            Text to be printed on the card as Account Name.<br />

            Optional – When not provided default emboss text associated with the card type will be embossed.<br />

            Max length: 27<br />

            The value should be validated against a configured list of allowed characters.<br />

            [-0-9A-Z,/''.&amp; ÄÖÜÅÆÉØ]
          nullable: true
        VRN:
          maxLength: 24
          type: string
          description: "Vehicle registration number.<br/>\r\nOptional when DriverName is passed else mandatory.<br/>\r\nMandatory when ColCo setting is marked as ‘VRN mandatory’.<br />\r\nMax length: 24<br />\r\nThe value will be validated against a configured list of allowed characters.<br />\r\nDefault value for the configuration is: [-0-9A-Z,/''.&amp; ÄÖÜÅÆÉØ] . \r\n</br>Note: If Driver Name is null or empty, max allowed characters for VRN is 16.  When Driver Name is provided, max allowed characters for VRN is 24."
          nullable: true
        DriverName:
          maxLength: 27
          type: string
          description: >-
            Driver Name.<br />

            Optional when VRN is passed else mandatory.<br />

            Max length: 27<br />

            The value will be validated against a configured list of allowed characters.<br />

            Default value for the configuration is: [-0-9A-Z,/''.&amp; ÄÖÜÅÆÉØ]<br />
          nullable: true
        OdometerInputRequired:
          type: boolean
          description: >-
            Odometer Input to be enabled on the card<br />

            Optional.<br />

            Default is False
        FleetIdInputRequired:
          type: boolean
          description: >-
            FleetId Input to be enabled on the card<br />

            Optional.<br />

            Default is False<br />

            Note: If AllowFleetIdInput settings of the account is disabled and this flag is marked

                  true in the request, then request will be processed with VRN input required

                  enabled instead of Fleet Id input required
        PurchaseCategoryId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: >-
            Purchase category Id<br />

            Mandatory
          format: int32
          nullable: true
        SelfSelectedEncryptedPIN:
          maxLength: 256
          type: string
          description: >-
            The encrypted value of self-selected PIN.<br />

            Optional – When not provided, the PIN will be auto generated(if the card token type supports PIN) and delivered based on the given PIN delivery option.<br />

            Max Length: 256
        SelfSelectedPINKeyID:
          maxLength: 30
          type: string
          description: >-
            KeyId of the PIN encrypted value.<br />

            Mandatory, if opted for self-selected PIN else optional.<br />

            Max Length: 30
          nullable: true
        SelfSelectedPINSessionKey:
          maxLength: 1024
          type: string
          description: >-
            Encoded message of the TCS form which is used for encrypting the PIN of this card.<br />

            The encode message forms are provided to clients by another API (“TCS”).<br />

            Instructions to encrypt the PIN is covered in the related API specifications document.<br />

            Mandatory –If opted for self-selected PIN else optional.

            Max Length: 1024
          nullable: true
        CardGroupId:
          type: integer
          description: >-
            Card group ID<br />

            Optional
          format: int32
          nullable: true
        CardGroupName:
          maxLength: 40
          type: string
          description: >-
            Card group name<br />

            This field is mandatory when IsNewCardGroup parameter is set to true.<br />

            Maximum field length: 40<br />

            The value will be validated against a configured list of allowed characters.<br />

            Default value for the configuration is: [0-9A-Z.]
          nullable: true
        IsNewCardGroup:
          type: boolean
          description: >-
            This need to be set to true if the card group needs to be created prior to processing the card order and the card needs to be assigned to the newly created card group.<br />

            Optional<br />

            Default - False
        EmbossCardGroup:
          type: boolean
          description: "This should be set to true if the card group name needs to be printed on the newly created card under a new card group.<br />\r\nOptional<br />\r\nDefault – False<br />\r\nNote: This value will be considered only if a new CardGroup is created for the Card.(i.e.when IsNewCardGroup is true) \r\n      If the Card is added to an existing CardGroup, \r\n      the property ‘PrintOnCard’ set for the CardGroup will determine whether the CardGroupName should be embossed on the Card."
        CardDeliveryType:
          maximum: 2
          minimum: 1
          type: integer
          description: >-
            Card delivery type.<br />

            Mandatory <br />

            Allowed Value: <br />

            1.    Customer Address(Default) <br />

            2.    New Delivery Address
          format: int32
          nullable: true
        CardContact:
          $ref: '#/components/schemas/CardContact'
        PINDeliveryAddressType:
          maximum: 3
          minimum: 1
          type: integer
          description: >-
            PIN delivery address type selection.<br />

            Optional<br />

            Allowed Values:<br />

            1.    Customer Address(Default)<br />

            2.    Card Address<br />

            3.    New Delivery Address
          format: int32
          nullable: true
        PINAdviceType:
          maximum: 4
          minimum: 1
          type: integer
          description: >-
            PIN delivery method.<br />

            Mandatory<br />

            Allowed Values:<br />

            1.    Paper<br />

            2.    Email<br />

            3.    SMS<br />

            4.    None <br /> **Note:** Paper delivery not applicable for selfselctedPIN type
          format: int32
          nullable: true
        PINContact:
          $ref: '#/components/schemas/PINContact'
        NotifyCaller:
          type: boolean
          description: >-
            True/False.<br />

            Optional.<br />

            Default: False<br />

            If true, the caller would be notified back with the status as success or failure after the card order is processed.

            This webhook feature has to be subscribed by the customer prior to use , please refer the API documentation for the more details.
        Caller:
          maxLength: 20
          type: string
          description: >-
            The caller to be notified with the status of the card order.<br />

            Mandatory, if NotifyCaller is true.<br />

            Maximum field length: 20<br />

            Allowed values:<br />

            •    “NextGenUI”: This value to be used by next gen UI application.<br />

            •    “FleetHubUILifeTime”: This value to be used by Fleet Hub UI application for life time restriction cards.<br />

            Note: The values passed in this field are case insensitive
          nullable: true
        NotifyCallerOnSync:
          type: boolean
          description: >-
            True/False.<br />

            Optional.<br />

            Default: False<br />

            If true, the caller would be notified back with the status as success or failed after the processed card is synced with Gateway.
        ValidateFleetId:
          type: boolean
          description: >-
            True/False.<br />

            Optional.<br />

            Default: False<br />

            For cards ordered with Validate Fleet Id parameter set to true, CFGW will be notified to enable this validation for the card.<br />

            Note: When “FleetIdInputRequired” is not set on the card, validate fleet id will be considered false regardless of the value passed on this parameter.
        FleetOption:
          type: string
          description: >-
            Type of action will be performed for the card when the fleet Id is validated.<br />

            Optional.<br />

            Default: NO_VALIDATION<br />

            Allowed values:<br />

            •    ALERT<br />

            •    DECLINE<br />

            •    DECLINE_ALERT<br />

            •    NO_VALIDATION<br />

            Note: When FleetIdOption is not provided and validatefleetid is true then by default allowed value is NO_VALIDATION.
          nullable: true
        BundleId:
          type: string
          description: >-
            Gateway Bundle Id to which the ordered card will be added.<br />

            Optional.<br />

            When a valid bundle Id is passed, upon successful processing of Card Order, the card will be added to the provided bundle in Gateway.

            If card bundle has crossed the limit of 500 cards or if the card bundle is not available in the gateway then the background services will fail to added the card to the bundle.
          nullable: true
        UsageRestrictionAction:
          type: string
          description: >-
            The value indicates what actions is to be performed with respect to usage restrictions on the card being ordered.<br />

            UsageRestrictionAction is mandatory when bundle Id is passed. Else ignored.<br />

            Allowed values: –<br />

            • Update<br />

            • Default<br />

            • None
          nullable: true
        ProductRestrictionAction:
          type: string
          description: >-
            The value indicates what actions is to be performed with respect to product restrictions on the card being ordered.<br />

            ProductRestrictionAction is mandatory when bundle Id is passed. Else ignored.<br />

            Allowed values: -<br />

            • Update<br />

            • Default<br />

            • None<br />

            Note: This field is applicable when product restrictions
          nullable: true
        Products:
          type: array
          items:
            type: string
          description: >-
            An array of 3-digit global product codes.<br />

            Optional.<br />

            Default restrictions will be applied both products and product groups are null or empty.<br />

            Note: This field is applicable when product restrictions are migrated to CFGW else, it will be ignored.
        ProductGroups:
          type: array
          items:
            type: string
          description: >-
            An array of product group ids.<br />

            Optional.<br />

            Default restrictions will be applied both products and product groups are null or empty.<br />

            Note: This field is applicable when product restrictions are migrated to CFGW else, it will be ignored
        ExpiryDate:
          type: string
          description: "Expiry Date for newly created card to be update in cards plot form.<br />\r\nOptional.<br />\r\nFormat: MMyy<br />\r\nIf not apply default Expiry Date.<br />\r\nNote: There is a limit to the ExpiryDate which the user can choose for the Card. \r\n      The expiry date which can be set for a card depends on the Card Type and the associated business rules for the OU. \r\n      If the user chooses a later ExpiryDate than the allowed value for the CardType for the OU, \r\n Default Assigned Expiry Date will be applied on the card."
          nullable: true
        ClientReferenceId:
          maxLength: 50
          type: string
          description: >-
            This is the Client Reference Id of card in the order which needs to be passed by the client.This will be playback in the ordercard enquiry<br />

            Optional
          nullable: true
        AutoRenew:
          $ref: '#/components/schemas/CardDetailAutoRenew'
      description: Request entity object for CardDetail
    CardDeliveryContact:
      title: CardDeliveryContact
      required:
      - DeliveryContactName
      - DeliveryCompanyName
      - DeliveryAddressLine1
      - DeliveryZipCode
      - DeliveryCity
      - DeliveryCountry
      type: object
      properties:
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person <br />

            Optional

            Max field length: 10
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory  <br />

            Max field length: 50
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory  <br />

            Max field length: 50
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory<br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory  <br />

            Max field length: 10  <br />

            Optional
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory  <br />

            Max field length: 40
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />

            When region is passed
          nullable: true
        DeliveryCountry:
          type: string
          description: The ISO code of the country.<br />
          nullable: true
        PhoneNumber:
          maxLength: 20
          type: string
          description: >-
            Phone number for courier delivery.<br />

            Optional.<br />

            Max field length: 20
          nullable: true
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for courier delivery.<br />

            Optional.<br />

            Max field length: 90 <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SaveForCardReissue:
          type: boolean
          description: >-
            If this is specified, the contact address will be saved in cards platform for card reissue processing.<br />

            Optional
      description: >-
        Request entity object for CardDeliveryContact

        Mandatory when CardDeliveryType is 2 else ignored.
    PINDeliveryContact:
      title: PINDeliveryContact
      type: object
      properties:
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person <br />

            Optional
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 50  <br />

            Optional
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 50  <br />

            Optional
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory - if PINAdviceType is paper else optional.<br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory - if PINAdviceType is paper else optional. <br />

            Max field length: 10  <br />

            Optional
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />
          nullable: true
        DeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mandatory if PINAdviceType is paper else optional.
          nullable: true
        PhoneNumber:
          maxLength: 20
          type: string
          description: >-
            Phone number for to send SMS of the PIN in case PINAdviceType is SMS.<br />

            Mandatory if PINAdviceType is SMS else optional.<br />

            Max field length: 20
          nullable: true
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email of the PIN in case PINAdviceType is Email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90. <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SaveForPINReminder:
          type: boolean
          description: >-
            The given address will be used for sending PIN reminders in future when requested.<br />

            Only allowed for paper delivery<br />

            Optional
      description: >-
        Request entity object for PINDeliveryContact

        Mandatory when PINDeliveryAddressType is ‘3’ (New delivery address). Else, ignored.
    CardDetailAutoRenew:
      title: CardDetailAutoRenew
      enum:
      - 1
      - 2
      - 3
      type: integer
      description: "Whether to reissue card automatically when nearing the expiry. \n\nAllowed values: -\n1.    As per card type setting (Default).\n2.    Card will be Reissued when nearing its expiry date.\n3.    Card will not be Reissued."
    OrderCardResponse:
      title: OrderCardResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCESS, FAILED'
        Data:
          type: array
          items:
            $ref: '#/components/schemas/CreateCardResponse'
          description: ''
        MainReference:
          type: integer
          description: Main order reference number for tracking.
          format: int32
    CreateCardResponse:
      title: CreateCardResponse
      type: object
      properties:
        DriverAndVRN:
          type: string
          description: Driver and VRN of the card. ;( semicolon) is used as delimiter
          nullable: true
          example: Robert:MV65YLH
        OrderCardReference:
          type: integer
          description: Reference number for each individual card in the order
          format: int32
          nullable: true
          example: 488351
      description: This entity models the data that is sent in the http response body for this operation.
    OrderCardEnquiryRequest:
      title: OrderCardEnquiryRequest
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/Filters2'
    OrderCardEnquiryReq:
      title: OrderCardEnquiryReq
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional if AccountNumber is passed, else mandatory. <br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional if AccountId is passed, else mandatory.<br/> This input is a search criterion, if given.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional – when ‘ReferenceNumber’ is provided.<br />
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id (in ) of the selected payer. <br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘ColCoId’ or ‘ColCoCode’ is mandatory.<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: ISO 3166 Alpha-2 Country Code for the customer and card owning country.
          nullable: true
          example: PH
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.<br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘PayerId’ or ‘PayerNumber’ is mandatory.
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘PayerId’ or ‘PayerNumber’ is mandatory.
          nullable: true
        ReferenceNumber:
          type: integer
          description: >-
            Reference number of the Card Order/ Bulk Card Order/ Order Card Request.<br />

            Mandatory when ColCo and Payer fields are not provided. Else, optional.
          format: int32
        ReferenceType:
          $ref: '#/components/schemas/OrderCardEnquiryReqReferenceType'
        FromDate:
          type: string
          description: >-
            Card Orders from Date/Time.<br />

            Optional.<br />

            Value should be with in last 7 days<br />

            This field is ignored if ReferenceNumber is provided <br />

            This field is optional when not provided and ReferenceNumber is null or empty then the value should be set to D-7(Where D is current date)<br />

            Format: yyyyMMdd
          nullable: true
        ToDate:
          type: string
          description: >-
            Card Order to Date/Time<br />

            Optional<br />

            Value should be with in last 7 days<br />

            This field is ignored if ReferenceNumber is provided <br />

            This field is optional when not provided and ReferenceNumber is null or empty then the value should be set to current date<br />

            Format: yyyyMMdd
          nullable: true
        OrderRequestId:
          type: string
          description: Client provided Unique Id of the original Order Card request, the status of which is enquired by this API
          nullable: true
          example: ed557f02-c7d7-4c01-b3e5-11bf
      description: This class holds Order Card Enquiry list based on which the Order Card Enquiry need to be filtered.
    OrderCardEnquiryReqReferenceType:
      title: OrderCardEnquiryReqReferenceType
      enum:
      - 1
      - 2
      - 3
      type: integer
      description: >-
        Type of the reference number provided.<br />

        Mandatory if ReferenceNumber is provided. Else optional.<br />

        Allowed Values:<br />

        1=Main Reference(Main Order Reference Number returned in the output of Card/OrderCard service. <br />

        2=Order Card Reference (Reference number for each individual card in the order submitted via Card/OrderCard service. <br />

        3=Bulk Order Card Reference (Reference number returned in the response of bulkcardinterface /UploadOrderCardTemplate. )
    OrderCardEnquiryResponse:
      title: OrderCardEnquiryResponse
      type: object
      properties:
        RequestId:
          type: string
        Status:
          type: string
        Data:
          type: array
          items:
            $ref: '#/components/schemas/OrderCardEnquiry'
          description: ''
    OrderCardEnquiry:
      title: OrderCardEnquiry
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID on the card request
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: AccountNumber
          nullable: true
        BCOReference:
          type: integer
          description: >-
            Bulk card order request refrence numer.<br />

            This field will be null if the order is not through BCO.
          format: int32
          nullable: true
        BCORowNumber:
          type: integer
          description: >-
            Row number of the request in the BCO file.<br />

            This field will be null if the order is not through BCO.
          format: int32
          nullable: true
        CardGroupId:
          type: integer
          description: Card group ID
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: Card group name
          nullable: true
        CardId:
          type: integer
          description: >-
            Unique Card Id.<br />

            The field will be null if the card order request is not successly processed.
          format: int32
          nullable: true
        CardPAN:
          type: string
          description: >-
            Card PAN.<br />

            Mask PAN (Mask all digits except the Last 6 digits of the PAN).<br />

            The field will be null if the card order request is not successly processed.
          nullable: true
        MaskedPAN:
          type: string
          description: Card PAN
          nullable: true
        PANID:
          type: number
          description: Card PAN ID as a unique number for each PAN
          nullable: true
        CardTypeCode:
          type: string
          description: >-
            CardTypeCode<br />

            ISO code of the card i.e. first 7 digits of the PAN
          nullable: true
        CardTypeId:
          type: integer
          description: CardTypeId
          format: int32
          nullable: true
        CardTypeName:
          type: string
          description: CardTypeName
          nullable: true
        DriverName:
          type: string
          description: Driver name
          nullable: true
        ErrorCode:
          type: string
          description: >-
            Error code for the order card request.<br />

            The value will be 0000 if it is processed without errors.
          nullable: true
        ErrorDescription:
          type: string
          description: >-
            Error description for the order card request.<br />

            The value will be empty string if it is processed without errors.
          nullable: true
        GatewaySyncErrorCode:
          type: string
          description: >-
            Error code for the Gateway sync error.<br />

            The value will be 0000 if it is processed without errors.
          nullable: true
        GatewaySyncErrorDescription:
          type: string
          description: >-
            Error description for the Gateway sync error.<br />

            The value will be empty string if it is processed without errors.
          nullable: true
        GatewaySyncStatus:
          type: string
          description: >-
            GatewaySyncStatus<br />

            Status of the card sync with CFGW.<br />

            Possible values:<br />

            -Success<br />

            -Failed<br />

            -In Progress<br />

            -Not Submitted
          nullable: true
        MainReference:
          type: integer
          description: >-
            Main reference number for the order card request.<br />

            This field will be null if the order is through BCO.
          format: int32
        OrderCardReference:
          type: integer
          description: >-
            Indivitual card reference number for the order card request.<br />

            This field will be null if the order is through BCO.
          format: int32
        OrderStatus:
          type: string
          description: >-
            Order status.<br />

            Possible values:<br />

            P   Pending<br />

            I   Picked up for processing<br />

            PX    Failed at Queue but retry attempts pending<br />

            X    Failed  at Queue<br />

            R    Card is processed, awaiting for PAN update.<br />

            S    Processed<br />

            F    Failed
          nullable: true
        PayerId:
          type: integer
          description: Payer ID on the card request.
          format: int32
        PayerNumber:
          type: string
          description: Payer Number on the card request
          nullable: true
        ProcessedDate:
          type: string
          description: >-
            Date and time (in cutomers local time) when the card order request is processed<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: The client application to convert the string to appropriate date/time type.
          nullable: true
        PurchaseCategoryCode:
          type: string
          description: PurchaseCategoryCode
          nullable: true
        PurchaseCategoryId:
          type: integer
          description: >-
            PurchaseCategoryId <br />

            Note: Not Purchase code. This is a unique purchase category id assigned
          format: int32
          nullable: true
        PurchaseCategoryName:
          type: string
          description: PurchaseCategoryName
          nullable: true
        SubmittedDate:
          type: string
          description: >-
            Date and time (in cutomers local time) when the card order request is submitted.<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: The client application to convert the string to appropriate date/time type.
          nullable: true
        SyncProcessedDate:
          type: string
          description: >-
            SyncProcessedDate<br />

            Date and time (in cutomers local time) when the sync card request is processed.<br />

            Format: yyyyMMdd HH:mm:ss<br />

            Note: The client application to convert the string to appropriate date/time type.
          nullable: true
        SyncRequestedDate:
          type: string
          description: >-
            SyncRequestedDate<br />

            Date and time (in cutomers local time) when the sync card request is submitted.<br />

            Format: yyyyMMdd HH:mm:ss <br />

            Note: The client application to convert the string to appropriate date/time type.
          nullable: true
        VRN:
          type: string
          description: Vehicle registration number
          nullable: true
        OrderRequestId:
          type: string
          description: >-
            Unique Id of the Original Order card request, the status of which is enquired by this API. <br />

            This is returned for end to end traceability of a request based on the original Order Card request.
          nullable: true
        ExpiryDate:
          type: string
          description: "Expiry date of the card.\nFormat: yyyymmdd hh:mm:ss \n(Clients to convert this to appropriate DateTime type.)\nNote: This is the Expiry Date saved DB.\nIf the Order Card request is still not processed, i.e. PAN is not yet issued, this field will be null or empty. \nFor a Card Order with a custom Expiry Date passed in the request, this value will be returned after it is updated successfully in GFN by the background process."
          nullable: true
        ClientReferenceId:
          type: string
          description: This is the Client Reference Id of card in the order which needs to be passed by the client.
          nullable: true
        StatusDescription:
          type: string
          description: >-
            Order status.<br />

            Possible values<br />

             Success<br />

             Failed<br />

             InProgress<br />
          nullable: true
        ColCoId:
          type: integer
          description: Colcoid
          format: int32
          nullable: true
      description: This entity models the data that is sent in the https
    CancelCardRequest:
      title: CancelCardRequest
      required:
      - Cards
      type: object
      properties:
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCard'
          description: "List of CancelCardRequest entity. \r\nEach card in the list will be Cancelled. \r\nThe details of the entity are given below."
        ReasonId:
          type: integer
          description: >-
            Reason id for cancelling the card.<br />

            Optional if ReasonText is passed, else mandatory<br />

            When passed, the reason Id will be validated with the allowed reason id’s configured for the card type of the card.<br />

            If the reason Id is not allowed, then it will be included on the error cards response.



            Possible values:

            1 (Lost)

            2 (Stolen)

            3 (Card no longer required)
          format: int32
          nullable: true
        ReasonText:
          type: string
          description: "Reason text for cancelling the card.<br />\r\nOptional if ReasonId is passed, else mandatory<br />\r\nWhen Reason Id is not known to the client, the reason text can be passed.<br />\r\nWhen Reason Text is passed and the Target Status is either Block or Damaged, the text will be validated with the allowed list of values configured for the card type of the card.\r\nIf the text is not allowed, then it will be included on the error cards response.\r\nHowever, if the Target status is Temporary block or Unblock then the text will be submitted \r\n\r\nPossible Values:\r\n1) Lost\r\n2) Stolen\r\n3) Card no longer required"
          nullable: true
      description: This entity models the data that is sent in the http request body of this operation.
    UpdateCard:
      title: UpdateCard
      type: object
      properties:
        Caller:
          type: string
          description: >-
            The caller to be notified with the status of the update card status request. <br />

            The caller will also be notified with the status of the replacement card order request, if any.<br />

            Mandatory, if NotifyCaller is true. <br />

            Maximum field length: 20<br />

            Allowed values:<br />

            - NextGenUI: This value to be used by next gen UI application.<br />

            - Motix: This value to be used by MOTiX application.<br />

            - FleetHubUILifeTime: This value to be used by Fleet Hub UI application for life time restriction cards.<br />

            Note: The values passed in this field are case insensitive.
          nullable: true
        IsReplacementChargeable:
          type: boolean
          description: >-
            True/False<br />

            Optional<br />

            When not provided will considered as default value as True.<br />

            If passed True, the replacement card will be chargeable, else replacement card will not be charged.
        NotifyCaller:
          type: boolean
          description: >-
            True/False.<br />

            Optional.<br />

            Default: False<br />

            If true, the caller would be notified back with the status as success or failure after the update card status request is processed.

            Notification API subscription required to use this feature , please refer API documetation for more details
        NotifyCallerOnSync:
          type: boolean
          description: >-
            True/False.<br />

            Optional.<br />

            Default: False<br />

            If true, the caller would be notified back with the status as success or failed after the replacement card is synced with Gateway, if a replacement card was requested.
        OrderCardReplacement:
          type: boolean
          description: >-
            True/False.<br />

            Pass True if a replacement order card request is to be placed, else False.<br />

            Optional.Default value False.<br />

            Replacement of a card is only applicable when the target status requested is either permanently Block or Damaged for the existing card.<br />

            Request for Replacement card will be placed only when the Block card or Block damaged card request is successfully placed.<br />

            The Replacement card request will be processed only when the permanent Block card request is successfully processed. <br />

            In case of damaged card request, the replacement card request will be processed immediately.
        CardSettings:
          $ref: '#/components/schemas/CardSettings'
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.<br />

            Optional if AccountNumber is passed, else Mandatory.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.<br />

            Optional if AccountId is passed, else Mandatory.
          nullable: true
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.<br />

            Mandatory if PAN is passed, else optional.<br />

            Format: yyyyMMdd
          nullable: true
        CardId:
          type: integer
          description: >-
            Card Id of the card.<br />

            Optional if PAN is passed, else Mandatory.
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting company code of the customer. <br />

            Optional if ColCoId is passed, else Mandatory.<br />
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting company id of the customer. <br />

            Optional if ColCoCode is passed, else Mandatory.<br />
          format: int32
          nullable: true
        PAN:
          type: string
          description: >-
            PAN of the card.<br />

            Optional if CardId is passed, else Mandatory.<br />
          nullable: true
        PANID:
          type: number
          description: PANID of the card
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.<br />

            Optional if PayerNumber is passed, else Mandatory.
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.<br />

            Optional if PayerId is passed, else Mandatory.
          nullable: true
      description: Request entity object for UpdateCardRequest  list
    ReplaceCardSettings:
      title: ReplaceCardSettings
      required:
      - CardDeliveryType
      type: object
      properties:
        SelfSelectedEncryptedPIN:
          maxLength: 256
          type: string
          description: >-
            The encrypted value of self-selected PIN.<br />

            Optional – When not provided, the PIN will be auto generated(if the card token type supports PIN) and delivered based on the given PIN delivery option.<br />

            Max Length: 256
          nullable: true
        SelfSelectedPINKeyID:
          maxLength: 30
          type: string
          description: >-
            KeyId of the PIN encrypted value.<br />

            Mandatory, if opted for self-selected PIN else optional.<br />

            Max Length: 30
          nullable: true
        SelfSelectedPINSessionKey:
          maxLength: 1024
          type: string
          description: >-
            Encoded message of the TCS form which is used for encrypting the PIN of this card.<br />

            The encode message forms are provided to clients by another API (“TCS”).<br />

            Instructions to encrypt the PIN is covered in the related API specifications document.<br />

            Mandatory –If opted for self-selected PIN else optional.

            Max Length: 1024
          nullable: true
        ValidateFleetId:
          type: boolean
          description: >-
            True/False.<br />

            Optional <br />

            Default: False<br />

            For cards ordered with Validate Fleet Id parameter set to true, CFGW will be notified to enable this validation for the card.<br />

            Note: When “FleetIdInputRequired” is not set on the card, validate fleet id will be considered false regardless of the value passed on this parameter.
        CardGroupId:
          type: integer
          description: >-
            Existing Card Group ID, under which the replacement card is to be created.<br />

            Pass “-1” if the replacement card should not be assigned to any card group.<br />

            Optional <br />

            If not provided, the replacement card will be created under the same card group as the current card.
          format: int32
          nullable: true
        CardDeliveryType:
          type: integer
          description: >-
            Card delivery type.<br />

            Mandatory <br />

            Allowed Value: <br />

            1.    Customer Address(Default) <br />

            2.    New Delivery Address <br />

            3.    Old Card Address
          format: int32
          nullable: true
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person. <br />

            Optional<br />

            Max field length: 10
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 50
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.

            Max field length: 50
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional<br />

            Max field length: 40
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 10
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 40
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />

            When region is passed
          nullable: true
        DeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true
          nullable: true
        DeliveryCountryId:
          type: integer
          description: The countryId of gicen country.<br />
          format: int32
          nullable: true
        PhoneNumber:
          maxLength: 16
          type: string
          description: >-
            Phone number for to send SMS. <br />

            Optional<br />

            Max field length: 20
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90
          nullable: true
        PINDeliveryAddressType:
          type: integer
          description: >-
            PIN delivery address type selection.<br />

            Optional<br />

            Allowed Values:<br />

            1.    Customer Address(Default)<br />

            2.    Card Address<br />

            3.    New Delivery Address
          format: int32
          nullable: true
        PINAdviceType:
          type: integer
          description: >-
            PIN delivery method.<br />

            Mandatory when OrderReplacement Is true.<br />

            Allowed Values:<br />

            1.    Paper<br />

            2.    Email<br />

            3.    SMS<br />

            4.    None
          format: int32
          nullable: true
        PINDeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person.<br />

            Optional <br />

            Max field length: 10
          nullable: true
        PINDeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 50
          nullable: true
        PINDeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 50
          nullable: true
        PINDeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 40
          nullable: true
        PINDeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2.<br />

            Optional <br />

            Max field length: 40
          nullable: true
        PINDeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3.<br />

            Optional <br />

            Max field length: 40
          nullable: true
        PINDeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code.<br />

            Mandatory - if PINAdviceType is paper else optional. <br />

            Max field length: 10
          nullable: true
        PINDeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City.<br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 40
          nullable: true
        PINDeliveryRegionId:
          type: integer
          description: >-
            Region Id.<br />

            Optional
          format: int32
          nullable: true
        PINDeliveryRegion:
          type: string
          description: >-
            Region.<br />

            When region is passed
          nullable: true
        PINDeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mappings for ISO code <br />

            Mandatory if PINAdviceType is paper else optional.
          nullable: true
        PINDeliveryCountryId:
          type: integer
          description: >-
            The countryId of the country.<br />

            Mappings for ISO code<br />

            This is not an input parameter.
          format: int32
          nullable: true
        PINPhoneNumber:
          maxLength: 16
          type: string
          description: >-
            Phone number for to send SMS of the PIN in case PINAdviceType is SMS.<br />

            Mandatory if PINAdviceType is SMS else optional.<br />

            Max field length: 20
          nullable: true
        PINEmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email of the PIN in case PINAdviceType is Email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90
          nullable: true
        SaveForPINReminder:
          type: boolean
          description: "The given address will be used for sending PIN reminders in future when requested.<br />\r\nPIN Advice type should be Paper \r\nOptional"
        SaveForCardReissue:
          type: boolean
          description: >-
            If this is specified, the contact address will be saved in cards platform for card reissue processing.<br />

            Optional
        ExpiryDate:
          maxLength: 4
          type: string
          description: "Expiry Date for newly created card to be update in cards plot form.<br />\r\nOptional <br />\r\nFormat: MMyy <br />\r\nEg:1221 <br />\r\nIf not apply the default Expiry Date.<br />\r\nNote:<br />\r\nThere is a limit to the ExpiryDate which the user can choose for the Card. \r\nIf the user chooses a later ExpiryDate than the allowed value for the CardType of the OU, \r\nthe background service logs the respective error code and description"
          nullable: true
      description: Request entity object for ReplaceCardSettings
    CancelCardResponse:
      title: CancelCardResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        MainReference:
          type: integer
          description: Cancel card reference number for tracking the execution of the request.
          format: int32
        OrderReplacementReference:
          type: integer
          description: Order replacement reference number for tracking the execution of the order replacement cards request.
          format: int32
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCESS, FAILED, PARTIAL_SUCCESS'
        Data:
          type: array
          items:
            $ref: '#/components/schemas/SubmittedCard'
          description: ''
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          description: ''
    SubmittedCard:
      title: SubmittedCard
      type: object
      properties:
        ReplacementCardReference:
          type: integer
          description: >-
            Reference number for tracking of replacement card order request of the specific card,<br />

            This is applicable for requests with target status as Block and OrderReplacement passed as True.
          format: int32
          nullable: true
        UpdateCardReference:
          type: integer
          description: Reference number for tracking of update status request of the specific card,
          format: int32
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.<br />

            Optional if AccountNumber is passed, else Mandatory.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.<br />

            Optional if AccountId is passed, else Mandatory.
          nullable: true
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.<br />

            Mandatory if PAN is passed, else optional.<br />

            Format: yyyyMMdd
          nullable: true
        CardId:
          type: integer
          description: >-
            Card Id of the card.<br />

            Optional if PAN is passed, else Mandatory.
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting company code of the customer. <br />

            Optional if ColCoId is passed, else Mandatory.<br />
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting company id of the customer. <br />

            Optional if ColCoCode is passed, else Mandatory.<br />
          format: int32
          nullable: true
        PAN:
          type: string
          description: >-
            PAN of the card.<br />

            Optional if CardId is passed, else Mandatory.<br />
          nullable: true
        PANID:
          type: number
          description: PANID of the card
          nullable: true
        MaskedPAN:
          type: string
          description: Card PAN
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.<br />

            Optional if PayerNumber is passed, else Mandatory.
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.<br />

            Optional if PayerId is passed, else Mandatory.
          nullable: true
      description: 'Response entity object for SubmittedCard list <br/>Note: This list will be empty for status 9006 and 9012 i.e., request for all the cards failed.'
    UpdateCardStatusRequest:
      title: UpdateCardStatusRequest
      required:
      - Cards
      - TargetStatus
      type: object
      properties:
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCard'
          description: List of UpdateCardRequest entity. Each card in the list will be updated to the given target status. The details of the entity are given below.
        ReasonId:
          type: integer
          description: >-
            Reason id for updating the card status.<br />

            Optional<br />

            Either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’. Else ignored.<br />

            Possible values:<br />

            -Lost <br />

            -Stolen <br />

            -Card no longer required<br />

            When passed, the reason Id will be validated with the allowed reason ids configured for the card type of the card.<br />

            . If the given reason Id is not allowed for certain card types, then the request will be rejected as invalid ResonId.
          format: int32
          nullable: true
        ReasonText:
          type: string
          description: >-
            Reason text for updating the card status.<br />

            Optional Either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’. Else ignored.<br />

            Possible values:<br />

            -Lost <br />

            -Stolen <br />

            -Card no longer required <br />

             Optional – However, either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’.<br />

             When Reason Text is passed and the Target Status is either Block or Damaged, the text will be validated with the allowed list of values configured for the card type of the card.<br />

             If the text is not allowed, request will be rejected as invaid ResonText.<br />

             Note:<br />

             Customer blocked’ will be used as the reason for ‘Temporary Block’.
          nullable: true
        TargetStatus:
          type: string
          description: >-
            The list of cards passed in Cards parameter will be updated to this status.<br />

            Mandatory<br />

            Allowed values:<br />

            -TemporaryBlock<br />

            -Unblock<br />

            -Block<br />

            -Damaged<br />
      description: UpdateStatus Request
    UpdateCardStatusResponse:
      title: UpdateCardStatusResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCESS, FAILED, PARTIAL_SUCCESS'
        Data:
          type: array
          items:
            $ref: '#/components/schemas/SubmittedCard'
          description: ''
        MainReference:
          type: integer
          description: 'Update status reference number for tracking the execution of the request. <br>Note: Reference will be empty for status 9006 and 9012 i.e., request for all the cards failed.'
          format: int32
        OrderReplacementReference:
          type: integer
          description: 'Order replacement reference number for tracking the execution of the order replacement cards request. <br/>Note: Reference will be empty for status 9006 and 9012 i.e., request for all the cards failed or if there were no order replacement requested in the input.'
          format: int32
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          description: ''
    PurchaseCategoryRequest:
      title: PurchaseCategoryRequest
      type: object
      properties:
        RequestId:
          type: string
          description: Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played back in the response from the request.
        ColCoCode:
          type: integer
          description: Collecting Company Code (Shell Code).
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: Collecting Company Id (in Shell Cards Platform).
          format: int32
          nullable: true
        CardTypeId:
          type: integer
          description: Card type Id
          format: int32
          nullable: true
        PurchaseCategoryId:
          type: integer
          description: >-
            Purchase category Id

            Optional.

            Example: 123, 124, etc.,
          format: int32
          example: 123
        LanguageCode:
          type: string
          description: "Language code for the Title and Description.\r\nLanguage codes should be same as SFH supported language \r\nOptional.\r\nDefault: en-GB\r\nExample:\r\nen-GB – English (UK)\r\nnl-NL – Dutch (Netherlands)"
          example: en-GB
    PurchaseCategoryResponse:
      title: PurchaseCategoryResponse
      type: object
      properties:
        PurchaseCategories:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseCategory1AllOf0'
          description: ''
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    PurchaseCategory1AllOf0:
      title: PurchaseCategory1AllOf0
      required:
      - Id
      - Code
      - Name
      - IsVisible
      - ProductGroups
      type: object
      properties:
        Id:
          type: integer
          description: Purchase category ID
          format: int32
          nullable: true
          example: 0
        Code:
          type: string
          description: Purchase category code
          nullable: true
          example: '93'
        Name:
          maxLength: 30
          type: string
          description: Name of Purchase category .
          nullable: true
          example: 0 - Diesel Products and TMF
        IsVisible:
          type: boolean
          description: PurchaseCategory can be used while submitting new order cards requests if true else will not be used for ordering cards.
          example: true
        ProductGroups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
          description: List of product sets
        Title:
          type: string
          description: "Purchase category Title by given language code.\r\n1.    Basic \r\n2.    Essentials\r\n3.    Extra \r\n4.    Premium\r\n5.    Basic and LNG\r\n6.    Essentials and LNG\r\n7.    Extra and LNG\r\n8.    Premium and LNG\r\nNote: Purchase Category name (GFN) is returned when Title does not exist for the given language Code and default language code (en-GB)."
          example: 1.    Basic
        Description:
          type: string
          description: "Purchase category description by given language code.\r\nExample: \r\n0 - Diesel Products and TMF\r\n1 - All Fuel Products and TMF\r\n2 - All Fuels Products, Car related items and TMF\r\n3 - No Restriction\r\n0 - Diesel Products + LNG and TMF\r\n1 - All Fuel Products + LNG and TMF\r\n2 - All Fuels Products + LNG, Car related items and TMF\r\n3 - No Restriction + LNG \r\nNote: Purchase Category name (GFN) is returned when Title does not exist for the given language Code and default language code (en-GB)."
          example: 0 - Diesel Products and TMF
    ProductGroup:
      title: ProductGroup
      type: object
      properties:
        ReferenceId:
          type: integer
          description: >-
            Referenced Purchase Category Id

            Example: 123, 124
          format: int32
          example: 123
        ProductGroupId:
          type: string
          description: Product group ID
          example: '7'
        Name:
          type: string
          description: Product group name
          example: Automotive Gas Oil
        IsDefault:
          type: boolean
          description: >-
            Indicates whether this is a default Product Group at ColCo level or not.

            Note: The Customer level default settings are not considered here.
        IsFuelType:
          type: boolean
          description: "Identifies the type of Product group.\r\ntrue - if it is a Fuel type Product group \r\nfalse - if it is Non-Fuel type"
        Products:
          type: array
          items:
            $ref: '#/components/schemas/ProductAllOf0'
          description: ''
    ProductAllOf0:
      title: ProductAllOf0
      required:
      - GlobalProductCode
      - Description
      type: object
      properties:
        GlobalProductCode:
          type: string
          description: >-
            The productCode returned by the Gateway API.

            Example: 021
          nullable: true
          example: '021'
        Description:
          type: string
          description: The description returned by the Gateway API.
          nullable: true
          example: High Performance Diesel
    CardDetailsRequest:
      title: CardDetailsRequest
      type: object
      properties:
        ColCoCode:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        ColCoId:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: ISO Country code of collecting company
          nullable: true
        ClientReferenceId:
          type: string
          description: >-
            Customer reference number of the card.

            Optional
          nullable: true
        PayerNumber:
          type: string
          description: Payer Number of the selected payer.
          nullable: true
        PayerId:
          type: integer
          description: Payer Id (i.e. Customer Id of the Payment of the selected payer.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed, else mandatory.
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Optional if AccountNumber is passed, else mandatory.
          format: int32
          nullable: true
        PAN:
          type: string
          description: >-
            PAN of the card.

            Optional if CardId is passed, else Mandatory.
          nullable: true
        CardId:
          type: integer
          description: >-
            Card Id of the card.

            Optional if PAN is passed, else Mandatory.
          format: int32
          nullable: true
        TokenTypeID:
          type: integer
          description: >-
            Token Type ID for the Card

            Optional
          format: int32
          nullable: true
        TokenTypeName:
          type: string
          description: >-
            Token Type name for the Card

            Optional
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation Date time

            Optional

            Format: yyyyMMdd
          nullable: true
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card

            Optional

            Format: yyyyMMdd
          nullable: true
        IncludeBundleDetails:
          type: boolean
          description: >-
            When the value is True, API will return bundle Id associated with card in the response, if available.

            Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is expected when set to ‘True’.
        IncludeIntermediateStatus:
          type: boolean
          description: A flag which indicates if the response can contain intermediate statuses
        IncludeScheduledCardBlocks:
          type: boolean
          description: A flag which indicates if the response can contain scheduled card blocks details
    CardDetailsResponse:
      title: CardDetailsResponse
      type: object
      properties:
        PayerId:
          type: integer
          description: Payer Id (i.e. Customer Id of the Payment Customer in the Shell Card Platform) of the selected payer.
          format: int32
          nullable: true
          example: 853
        PayerNumber:
          type: string
          description: Payer Number of the selected payer.
          nullable: true
          example: PH50000843
        AccountId:
          type: integer
          description: Account Id (i.e. Customer Id of the Customer in the Shell Card Platform) of the customer.
          format: int32
          nullable: true
          example: 854
        AccountNumber:
          type: string
          description: Account Number of the customer.
          nullable: true
          example: PH50000844
        AccountShortName:
          type: string
          description: Account short name.
          nullable: true
          example: PARKLEY
        ColCoCountryCode:
          type: string
          description: ISO 3166 Alpha-2 Country Code for the customer and card owning country.
          nullable: true
          example: PH
        LocalCurrencyCode:
          type: string
          description: ISO 4217 Curreny Code of the local currency.
          nullable: true
          example: EUR
        LocalCurrencySymbol:
          type: string
          description: Currency symbol of local currency.
          nullable: true
          example: €
        CardId:
          type: integer
          description: Unique Card Id in Cards platform.
          format: int32
          example: 125
        PAN:
          type: string
          description: Card PAN. In the response body the PAN will be masked if the option is enabled in the Shell Card Platform.
          nullable: true
          example: '7002861007636000020'
        StatusId:
          $ref: '#/components/schemas/CardDetailsResponseStatusId'
        Status:
          type: string
          description: >-
            Possible Id’s and description:

            * 1  Active

            * 7  Blocked Card

            * 8  Expired

            * 9  Cancelled

            * 10  New

            * 23  Pending Renewal

            * 31  Replaced

            * 41  Temporary Block (Customer)

            * 42  Temporary Block (Shell)

            * 43  Fraud

            * 101 Active (Block in progress) *

            * 102 Blocked Card (Unblock in progress) *

            * 103 Active (Cancel in progress) *

            * 104 Active (Marked as damaged) *

            * 105 New (Cancel as damaged) *

            * 106 Active(Scheduled for block) ”#

            * 107 Blocked Card(Scheduled for unblock) *#

            * 108 Blocked Card (Cancel in progress) *

            > Note:

            •  Items marked with * are intermediate statuses  to indicate that there are pending requests in progress. , The response can contain these intermediate statuses only if the IncludeIntermediateStatus flag is true.

            •  The placeholder “<Shell Card Platform Status>” in the items marked with # will be replaced with the Shell Card Platform status description. E.g., “Active (Scheduled for block)”
        OdometerPrompt:
          type: boolean
          description: True if odometer input is enabled on the card, else false
          example: true
        FleetIdPrompt:
          type: boolean
          description: True if fleet id input is enabled, else false
          example: true
        PINType:
          $ref: '#/components/schemas/CardDetailsResponsePINType'
        HasPIN:
          type: boolean
          description: True if card has PIN, else false
          example: true
        IsSelfSelectedPIN:
          type: boolean
          description: True if card has Self Selected PIN, else false
          example: true
        TemporaryBlockAllowed:
          type: boolean
          description: True if card can be blocked temporarily, else false
          example: true
        UnblockAllowed:
          type: boolean
          description: True/False True if card can be Unblocked, else false
          example: true
        PermanentBlockAllowed:
          type: boolean
          description: True if card can be blocked permanently, else false
          example: true
        IssueNumber:
          type: integer
          description: Issue number of the card
          format: int32
          example: 1
        ReissueSetting: {}
        InternationalPOSLanguageID:
          $ref: '#/components/schemas/CardDetailsResponseInternationalPOSLanguageID'
        InternationalPOSLanguageCode:
          $ref: '#/components/schemas/CardDetailsResponseInternationalPOSLanguageCode'
        LocalPOSLanguageID:
          $ref: '#/components/schemas/CardDetailsResponseInternationalPOSLanguageID'
        LocalPOSLanguageCode:
          $ref: '#/components/schemas/CardDetailsResponseInternationalPOSLanguageCode'
        CardTypeCode:
          type: string
          description: ISO code of the card i.e. first 7 digits of the PAN.
          nullable: true
          example: '7077861'
        CardTypeId:
          type: integer
          description: Card Type ID
          format: int32
          nullable: true
          example: 1
        CardTypeName:
          type: string
          description: Card Type Name
          nullable: true
          example: Philippines CRT 7077861
        TokenTypeId:
          type: integer
          description: Token Type ID configured for the Card
          format: int32
          nullable: true
          example: 107
        TokenTypeName:
          type: string
          description: Token Type Name configured for the Card
          nullable: true
          example: PH FLE NAT SIN R1
        IsChipCard:
          type: boolean
          description: True if a chip card, else false
          example: false
        IsMagStripCard:
          type: boolean
          description: True if it is a magnetic stripe card, else false
          example: true
        IsVirtualCard:
          type: boolean
          description: True if it is a virtual card, else false
          example: true
        PurchaseCategoryCode:
          maxLength: 1
          type: string
          description: Purchase category code of the card.
          nullable: true
          example: '6'
        PurchaseCategoryId:
          type: integer
          description: Purchase category identifier in the Shell Card Platform.
          format: int32
          example: 54
        PurchaseCategoryName:
          type: string
          description: Purchase category name
          nullable: true
          example: 2 - FuelSave and Lubricants
        IsCRT:
          type: boolean
          description: True if it is a Commercial Road Transport (CRT) card, else false
          example: true
        IsFleet:
          type: boolean
          description: True if it is a Fleet card, else false
          example: true
        IsInternational:
          type: boolean
          description: True if it is an international card, else false
          example: true
        IsNational:
          type: boolean
          description: True if it is a national card, else false
          example: true
        IsPartnerSitesIncluded:
          type: boolean
          description: True if it is allowed at all partner sites, else false
          example: true
        IsShellSitesOnly:
          type: boolean
          description: True if it is only allowed at Shell sites, else false
          example: true
        FuelSets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CardDetailsResponseFuelSetsItems'
          description: List of active fuel type product restrictions applied on the card.
        NonFuelSets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CardDetailsResponseNonFuelSetsItems'
          description: List of active non-fuel type product restrictions applied on the card.
        IssuedDate:
          type: string
          description: Card issue date.
          nullable: true
          example: '20181001'
        ExpiryDate:
          type: string
          description: Expiry date of the card.
          example: '20181031'
        LastUsedDate:
          type: string
          description: Card last used date.
          nullable: true
          example: 20181001 13:23:55
        MisuseDate:
          type: string
          description: Last misused date of the card.
          nullable: true
          example: 20181001 13:23:55
        Temperature:
          type: string
          description: Hot-list status
          nullable: true
          example: 10-Warm
        DriverName:
          maxLength: 27
          type: string
          description: Driver name of the card. Note- While ordering card, optional when VRN is passed else mandatory.
          example: ROBERT
        VRN:
          maxLength: 16
          type: string
          description: Vehicle registration number of the card. Note- While ordering card, optional when DriverName is passed else mandatory.
          example: MV65YLH
        EmbossText:
          maxLength: 25
          type: string
          description: Text printed on the card as account name.
          example: PARKLEY
        CardGroupId:
          type: integer
          description: "Existing Card Group ID, under which the replacement card is to be created.\nPass “-1” if the replacement card should not be assigned to any card group.\nOptional. \nIf not provided, the replacement card will be created under the same card group as the current card.\nExample- 156"
          format: int32
          nullable: true
          example: 5
        CardGroupName:
          maxLength: 30
          type: string
          description: Card group name. Note- 1. While ordering card this field is mandatory when IsNewCardGroup is true.
          nullable: true
          example: GROUP1
        RenewalDate:
          type: string
          description: Renewal date of the card. Applicable if ReissueSetting is set to True.
          nullable: true
          example: '20181001'
        RenewedCardId:
          type: integer
          description: Renewed card id.
          format: int32
          nullable: true
          example: 1325
        RenewedCardStatusId:
          type: integer
          description: Renewed card status id.
          format: int32
          nullable: true
          example: 10
        RenewedCardStatus:
          type: string
          description: Renewed card status description.
          example: New
        RenewedCardExpiryDate:
          type: string
          description: Renewed card expiry date.
          example: '20181031'
        RenewedCardIssueNumber:
          type: integer
          description: Renewed card issue number.
          format: int32
          nullable: true
          example: 2
        RenewedCardReissueSetting:
          $ref: '#/components/schemas/CardDetailsResponseRenewedCardReissueSetting'
        CreationDate:
          type: string
          description: Card Creation Date time
          nullable: true
          example: '20181001'
        EffectiveDate:
          type: string
          description: Effective date for the Card
          nullable: true
          example: '20181001'
        LastModifiedDate:
          type: string
          description: Card last modified date
          nullable: true
          example: 20181001 13:23:55
        BundleId:
          type: string
          description: Bundle Id associated with card in the Gateway. This field will have a null value if the card is not associated with any bundle in Gateway or the value of IncludeBundleDetails in request is false.
          nullable: true
        CardDeliveryAddress:
          $ref: '#/components/schemas/CardDeliveryAddress'
        PINDeliveryAddress:
          $ref: '#/components/schemas/PINDeliveryAddress'
        CardBlockSchedules:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CardDetailsResponseCardBlockSchedulesItemsAllOf0'
          description: ''
          nullable: true
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request
          example: ed557f02-c7d7-4c01-b3e5-11bf3239c8ed
    CardDetailsResponseStatusId:
      title: CardDetailsResponseStatusId
      enum:
      - 1
      - 7
      - 8
      - 9
      - 10
      - 23
      - 31
      - 41
      - 42
      - 43
      - 101
      - 102
      - 103
      - 104
      - 105
      - 106
      - 107
      - 108
      type: integer
      description: >-
        Possible Id’s and description:

        * 1  Active

        * 7  Blocked Card

        * 8  Expired

        * 9  Cancelled

        * 10  New

        * 23  Pending Renewal

        * 31  Replaced

        * 41  Temporary Block (Customer)

        * 42  Temporary Block (Shell)

        * 43  Fraud

        * 101 Active (Block in progress) *

        * 102 Blocked Card (Unblock in progress) *

        * 103 Active (Cancel in progress) *

        * 104 Active (Marked as damaged) *

        * 105 New (Cancel as damaged) *

        * 106 Active(Scheduled for block) ”#

        * 107 Blocked Card(Scheduled for unblock)*#

        * 108 Blocked Card (Cancel in progress) *

        > Note:

        •  Items marked with * are intermediate statuses  to indicate that there are pending requests in progress. , The response can contain these intermediate statuses only if the IncludeIntermediateStatus flag is true.

        •  The placeholder “<Shell Card Platform Status>” in the items marked with # will be replaced with the Shell Card Platform status description. E.g., “Active (Scheduled for block)”
    CardDetailsResponsePINType:
      title: CardDetailsResponsePINType
      enum:
      - Card
      - Fleet
      type: string
      description: >-
        PIN type:
          * `Card` - Card PIN
          * `Fleet` - Fleet PIN
      example: Card
    CardDetailsResponseReissueSetting:
      title: CardDetailsResponseReissueSetting
      enum:
      - 'True'
      - 'False'
      type: string
      description: >-
        Reissue setting of the card. If the card is superseded (i.e. a replacement/new card is issued) then reissue setting of the latest card issued. Reissue setting:
          * `True` - Card will be Reissued when nearing its expiry date
          * `False` - Card will not be Reissued
    CardDetailsResponseInternationalPOSLanguageID:
      title: CardDetailsResponseInternationalPOSLanguageID
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      - 27
      - 28
      - 29
      - 30
      - 31
      type: integer
      description: >-
        POS language identifier. Language Id:
          * `1` - German
          * `2` - French
          * `3` - Bulgarian
          * `4` - Croatian
          * `5` - Czech
          * `6` - Danish
          * `7` - Finnish
          * `8` - English
          * `9` - Greek
          * `10` - Chinese
          * `11` - Hungarian
          * `12` - Italian
          * `13` - Luxembourgish
          * `14` - Malay
          * `15` - Dutch
          * `16` - Norwegian, Bokmal
          * `17` - Urdu
          * `18` - Polish
          * `19` - Portuguese
          * `20` - Romanian
          * `21` - Russian
          * `22` - Slovak
          * `23` - Slovenian
          * `24` - Spanish
          * `25` - Swedish
          * `26` - Turkish
          * `27` - Thai
          * `28` - Filipino
          * `29` - Estonian
          * `30` - Latvian
          * `31` - Lithuanian
      example: 8
    CardDetailsResponseInternationalPOSLanguageCode:
      title: CardDetailsResponseInternationalPOSLanguageCode
      enum:
      - deu
      - fra
      - bul
      - hrv
      - ces
      - dan
      - fin
      - eng
      - ell
      - zho
      - hun
      - ita
      - ltz
      - msa
      - nld
      - nob
      - urd
      - pol
      - por
      - ron
      - rus
      - slk
      - slv
      - spa
      - swe
      - tur
      - tha
      - fil
      - est
      - lav
      - lit
      type: string
      description: >-
        POS language code. Language code:
          * `deu` - German
          * `fra` - French
          * `bul` - Bulgarian
          * `hrv` - Croatian
          * `ces` - Czech
          * `dan` - Danish
          * `fin` - Finnish
          * `eng` - English
          * `ell` - Greek
          * `zho` - Chinese
          * `hun` - Hungarian
          * `ita` - Italian
          * `ltz` - Luxembourgish
          * `msa` - Malay
          * `nld` - Dutch
          * `nob` - Norwegian, Bokmal
          * `urd` - Urdu
          * `pol` - Polish
          * `por` - Portuguese
          * `ron` - Romanian
          * `rus` - Russian
          * `slk` - Slovak
          * `slv` - Slovenian
          * `spa` - Spanish
          * `swe` - Swedish
          * `tur` - Turkish
          * `tha` - Thai
          * `fil` - Filipino
          * `est` - Estonian
          * `lav` - Latvian
          * `lit` - Lithuanian
      example: eng
    CardDetailsResponseLocalPOSLanguageID:
      title: CardDetailsResponseLocalPOSLanguageID
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      - 27
      - 28
      - 29
      - 30
      - 31
      type: integer
      description: >-
        POS language identifier. Language Id:
          * `1` - German
          * `2` - French
          * `3` - Bulgarian
          * `4` - Croatian
          * `5` - Czech
          * `6` - Danish
          * `7` - Finnish
          * `8` - English
          * `9` - Greek
          * `10` - Chinese
          * `11` - Hungarian
          * `12` - Italian
          * `13` - Luxembourgish
          * `14` - Malay
          * `15` - Dutch
          * `16` - Norwegian, Bokmal
          * `17` - Urdu
          * `18` - Polish
          * `19` - Portuguese
          * `20` - Romanian
          * `21` - Russian
          * `22` - Slovak
          * `23` - Slovenian
          * `24` - Spanish
          * `25` - Swedish
          * `26` - Turkish
          * `27` - Thai
          * `28` - Filipino
          * `29` - Estonian
          * `30` - Latvian
          * `31` - Lithuanian
      example: 8
    CardDetailsResponseLocalPOSLanguageCode:
      title: CardDetailsResponseLocalPOSLanguageCode
      enum:
      - deu
      - fra
      - bul
      - hrv
      - ces
      - dan
      - fin
      - eng
      - ell
      - zho
      - hun
      - ita
      - ltz
      - msa
      - nld
      - nob
      - urd
      - pol
      - por
      - ron
      - rus
      - slk
      - slv
      - spa
      - swe
      - tur
      - tha
      - fil
      - est
      - lav
      - lit
      type: string
      description: >-
        POS language code. Language code:
          * `deu` - German
          * `fra` - French
          * `bul` - Bulgarian
          * `hrv` - Croatian
          * `ces` - Czech
          * `dan` - Danish
          * `fin` - Finnish
          * `eng` - English
          * `ell` - Greek
          * `zho` - Chinese
          * `hun` - Hungarian
          * `ita` - Italian
          * `ltz` - Luxembourgish
          * `msa` - Malay
          * `nld` - Dutch
          * `nob` - Norwegian, Bokmal
          * `urd` - Urdu
          * `pol` - Polish
          * `por` - Portuguese
          * `ron` - Romanian
          * `rus` - Russian
          * `slk` - Slovak
          * `slv` - Slovenian
          * `spa` - Spanish
          * `swe` - Swedish
          * `tur` - Turkish
          * `tha` - Thai
          * `fil` - Filipino
          * `est` - Estonian
          * `lav` - Latvian
          * `lit` - Lithuanian
      example: eng
    CardDetailsResponseFuelSetsItems:
      title: CardDetailsResponseFuelSetsItems
      required:
      - ProductRestrictionId
      - Description
      type: object
      properties:
        ProductRestrictionId:
          type: integer
          description: product restriction identifier
          format: int32
          example: 120
        Description:
          type: string
          description: product set description.
          example: 'FS02: Diesel'
      description: Product restriction
    CardDetailsResponseNonFuelSetsItems:
      title: CardDetailsResponseNonFuelSetsItems
      required:
      - ProductRestrictionId
      - Description
      type: object
      properties:
        ProductRestrictionId:
          type: integer
          description: product restriction identifier
          format: int32
          example: 120
        Description:
          type: string
          description: product set description.
          example: 'FS02: Diesel'
      description: Product restriction
    CardDetailsResponseRenewedCardReissueSetting:
      title: CardDetailsResponseRenewedCardReissueSetting
      enum:
      - 'True'
      - 'False'
      type: string
      description: >-
        Reissue setting of the renewed new card. Reissue Setting:
          * `True` - Card will be sent to production
          * `False` - Parent Card is Dormant or the Card is not to be produced
    CardDetailsResponseCardDeliveryAddress:
      title: CardDetailsResponseCardDeliveryAddress
      required:
      - CompanyName
      - AddressId
      - AddressLine1
      - ZipCode
      - CountryId
      - CountryISOCode
      - Country
      type: object
      properties:
        ContactForeName:
          type: string
          description: Fore name of the contact person
          example: ROBERT
        ContactMiddleName:
          type: string
          description: Middle name of the contact person
          example: M
        ContactLastName:
          type: string
          description: Last name of the contact person
          example: Langdon
        ContactTitle:
          maxLength: 10
          type: string
          description: Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: Mr.
        CompanyName:
          type: string
          description: Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: PARKLEY Philippines
        AddressId:
          type: integer
          description: Address Id in cards platform.
          format: int32
          example: 1768
        AddressLine1:
          minLength: 1
          type: string
          description: Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: No 345, 1st cross,
        AddressLine2:
          type: string
          description: Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: 10th avenue
        AddressLine3:
          type: string
          description: Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: makati city
        ZipCode:
          maxLength: 10
          type: string
          description: ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: '1630'
        City:
          maxLength: 40
          type: string
          description: City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: manila
        RegionId:
          type: integer
          description: Region Id
          format: int32
          nullable: true
        Region:
          type: string
          description: Region Optional When region is passed, Shell Card Platform will look up for the region id for the given region.  If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: EU
        CountryId:
          type: integer
          description: Country Id in cards platform.
          format: int32
          example: 1
        CountryISOCode:
          type: string
          description: The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: PH
        Country:
          type: string
          description: Country name.
          example: Philippines
      description: Delivery address.
    CardDetailsResponsePINDeliveryAddress:
      title: CardDetailsResponsePINDeliveryAddress
      required:
      - CompanyName
      - AddressId
      - AddressLine1
      - ZipCode
      - CountryId
      - CountryISOCode
      - Country
      type: object
      properties:
        ContactForeName:
          type: string
          description: Fore name of the contact person
          nullable: true
          example: ROBERT
        ContactMiddleName:
          type: string
          description: Middle name of the contact person
          nullable: true
          example: M
        ContactLastName:
          type: string
          description: Last name of the contact person
          nullable: true
          example: Langdon
        ContactTitle:
          maxLength: 10
          type: string
          description: Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          nullable: true
          example: Mr.
        CompanyName:
          type: string
          description: Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: PARKLEY Philippines
        AddressId:
          type: integer
          description: Address Id in cards platform.
          format: int32
          example: 1768
        AddressLine1:
          minLength: 1
          type: string
          description: Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: No 345, 1st cross,
        AddressLine2:
          type: string
          description: Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: 10th avenue
        AddressLine3:
          type: string
          description: Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: makati city
        ZipCode:
          maxLength: 10
          type: string
          description: ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: '1630'
        City:
          maxLength: 40
          type: string
          description: City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: manila
        RegionId:
          type: integer
          description: Region Id
          format: int32
          nullable: true
        Region:
          type: string
          description: Region Optional When region is passed, Shell Card Platform will look up for the region id for the given region.  If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: EU
        CountryId:
          type: integer
          description: Country Id in cards platform.
          format: int32
          example: 1
        CountryISOCode:
          type: string
          description: The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: PH
        Country:
          type: string
          description: Country name.
          example: Philippines
      description: Delivery address.
    CardDetailsResponseCardBlockSchedulesItemsAllOf0:
      title: CardDetailsResponseCardBlockSchedulesItemsAllOf0
      type: object
      properties:
        FromDate:
          type: string
          description: Effective start date of Block / Unblock
          example: '20210212'
        ToDate:
          type: string
          description: Effective end date of Block / Unblock
          example: '20210212'
    CardMoveRequest:
      title: CardMoveRequest
      type: object
      properties:
        ColCoCode:
          type: integer
          format: int32
          nullable: true
        ColCoId:
          type: integer
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          nullable: true
        PayerNumber:
          type: string
          nullable: true
        PayerId:
          type: integer
          format: int32
          nullable: true
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/CardMoveRequestCardsItems'
          description: ''
        TargetAccountId:
          type: integer
          format: int32
        TargetAccountNumber:
          type: string
        TargetCardGroupId:
          type: integer
          format: int32
        TargetNewCardGroupName:
          type: string
    CardMoveRequestCardsItems:
      title: CardMoveRequestCardsItems
      type: object
      properties:
        AccountNumber:
          type: string
        AccountId:
          type: integer
          format: int32
        PAN:
          type: string
        CardId:
          type: integer
          format: int32
    CardMoveResponse:
      title: CardMoveResponse
      type: object
      properties:
        MoveCardRequestReference:
          type: integer
          format: int32
        SuccessfulRequests:
          type: array
          items:
            $ref: '#/components/schemas/CardMoveResponseSuccessfulRequestsItems'
          description: ''
        ErrorCards:
          type: array
          items:
            $ref: '#/components/schemas/CardMoveResponseErrorCardsItems'
          description: ''
        RequestId:
          type: string
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    CardMoveResponseSuccessfulRequestsItems:
      title: CardMoveResponseSuccessfulRequestsItems
      type: object
      properties:
        AccountNumber:
          type: string
          nullable: true
        AccountId:
          type: integer
          format: int32
          nullable: true
        PAN:
          type: string
          nullable: true
        CardId:
          type: integer
          format: int32
          nullable: true
        MoveCardReference:
          type: integer
          format: int32
          nullable: true
    CardMoveResponseErrorCardsItems:
      title: CardMoveResponseErrorCardsItems
      type: object
      properties:
        AccountNumber:
          type: string
          nullable: true
        AccountId:
          type: integer
          format: int32
          nullable: true
        PAN:
          type: string
          nullable: true
        CardId:
          type: integer
          format: int32
          nullable: true
        ValidationErrorCode:
          type: string
          nullable: true
        ValidationErrorDescription:
          type: string
          nullable: true
    PINReminderRequest:
      title: PINReminderRequest
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.<br />

            Optional if AccountNumber is passed, else Mandatory.<br />

            This input is a search criterion, if given.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.<br />

            Optional if AccountId is passed, else Mandatory.<br />

            This input is a search criterion, if given.
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. <br />

            It is optional for other countries if ColCoID is provided.
          format: int32
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id of the selected payer<br />

            Optional if ColCoCode is passed else Mandatory.
          format: int32
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number (Ex: GB000000123) of the selected payer.<br />

            Optional if PayerId is passed else Mandatory
        PINReminderCardDetails:
          type: array
          items:
            $ref: '#/components/schemas/PINReminderCardDetails'
          description: List of PINReminderCardDetails entity. The fields of this entity are described below.
      description: This entity models the data that is received in the https request body of the PINReminder operation.
    PINReminderCardDetails:
      title: PINReminderCardDetails
      required:
      - PINAdviceType
      type: object
      properties:
        CardId:
          type: integer
          description: "Card Id \r\nOptional if Either PANID AND CardExpiryDate or PAN AND CardExpiryDate is passed, else Mandatory. Example: 275549 .<br/>Note:PANID, PAN & ExpiryDate parameters will be ignored if CardId is provided."
          format: int32
        PANID:
          type: integer
          description: "PAN ID - Unique PAN ID \r\nOptional if Either CardId or PAN AND  ExpiryDate is passed, else Mandatory. Example: 123456. <br/>Note:PANID parameter will be considered only if CardId is not provided"
          format: int32
        PAN:
          type: string
          description: >-
            PAN of the card.

            Optional if Either CardId or PANID is passed, else Mandatory. <br/>Note:PAN & ExpiryDate parameters will be considered only if CardId & PANID are not provided
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.

            Mandatory if Either PAN or PANID is passed, else optional.

            Format: yyyyMMdd
          nullable: true
        PINAdviceType:
          maximum: 3
          minimum: 1
          type: integer
          description: >-
            PIN delivery method.

            Mandatory

            Allowed Values:

               1.    Paper

               2.    Email

               3.    SMS
          format: int32
        PINContactType:
          maximum: 4
          minimum: 1
          type: integer
          description: >-
            PIN Contact Type.

            Mandatory

            Allowed Values:

            1.    Use PIN Delivery contact details stored previously for this card

            2.    Use Card Delivery contact details stored previously for this card

            3.    Use default PIN Delivery contact details stored for this customer

            4.    Use new specific contact for PIN Reminder only



            Note: - PINContactType “3” is only allowed for Paper delivery
          format: int32
        PINDeliverTo:
          $ref: '#/components/schemas/PINDeliverTo'
      description: Request entity object for PINReminderCardDetails
    PINDeliveryDetails:
      title: PINDeliveryDetails
      required:
      - CompanyName
      - AddressLine
      - ZipCode
      - City
      type: object
      properties:
        ContactName:
          type: string
          description: >-
            Contact Name

            Max Length: 50
          nullable: true
        ContactTitle:
          type: string
          description: >-
            Contact Title

            Max Length: 50
          nullable: true
        CompanyName:
          type: string
          description: >-
            Company Name for PIN delivery.

            Max Length: 50
        AddressLine:
          type: string
          description: >-
            Address Lines

            Max Length: 1024
        ZipCode:
          type: string
          description: >-
            Zip Code

            Max Length: 10
          nullable: true
        City:
          type: string
          description: >-
            City

            Max Length: 40
        RegionID:
          type: integer
          description: Region
          format: int32
          nullable: true
        CountryID:
          type: integer
          description: Country
          format: int32
          nullable: true
        PhoneNumber:
          type: string
          description: Cardholder phone number for PIN delivery.
          nullable: true
        EmailAddress:
          type: string
          description: >-
            Cardholder email address for PIN delivery

            Max Length : 90

            Example: xxxxxx@example.com <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SavePINReminder:
          type: boolean
          description: >-
            Save PIN Reminder

            If SavePINReminder is true, the contact address will be saved database for PIN reminder.

             <br/>Only allowed for PIN Advice paper delivery.
      description: >-
        PINDeliverDetails entity. The fields of this entity are described below.

        This is mandatory if PINContactType is 4 else optional and ignored.
    PINReminderResponse:
      title: PINReminderResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Unique request identifier passed from end user. This identifier helps in tracing a transaction
        MainReference:
          type: integer
          description: Service reference number for tracking.
          format: int32
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCESS, FAILED'
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PINReminderReference'
          description: ''
    PINReminderReference:
      title: PINReminderReference
      type: object
      properties:
        CardId:
          type: integer
          description: Card Id
          format: int32
          nullable: true
        PANID:
          type: integer
          description: PAN ID
          format: int32
          nullable: true
        PAN:
          type: integer
          description: PAN
          format: int32
          nullable: true
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.

            Mandatory if Either PAN or PANID is passed, else optional.

            Format: yyyyMMdd
          nullable: true
        ReferenceId:
          type: integer
          description: Individual card pin reminder reference number for the Pin Reminder request.
          format: int32
      description: This class holds the PIN Reminder References
    ScheduleCardBlockRequest:
      title: ScheduleCardBlockRequest
      type: object
      properties:
        IsTimeSupported:
          type: boolean
          description: >-
            Default: False

            True – It supports both date & time.

            False – It supports only date. Time will be ignored if it is provided in the request.
        ScheduleCardBlockCards:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleCardBlockCardsItems'
          description: List of ScheduleCardBlockCard entity. Each card in the list will be scheduled for Block or Unblock. The details of the entity are given below.
    ScheduleCardBlockCardsItems:
      title: ScheduleCardBlockCardsItems
      required:
      - Action
      type: object
      properties:
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional if AccountNumber is passed, else Mandatory.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed, else Mandatory.
        PayerId:
          type: integer
          description: "Payer id of the customer.\r\nOptional if PayerNumber is passed, else Mandatory. \r\nExample: 123456"
          format: int32
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.

            Optional if PayerId is passed, else Mandatory.
        CardId:
          type: integer
          description: >-
            Unique Id of the card.

            Optional if PAN is passed, else Mandatory.
          format: int32
        PAN:
          type: string
          description: >-
            PAN of the card.

            Optional if CardId is passed, else Mandatory.
        PANID:
          type: string
          description: >-
            Card PAN ID.

            Optional if CardId is given, else mandatory.

            Note: PANID is ignored if CardId is given.
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.

            Optional if CardId is passed, else Mandatory.

            Format: yyyyMMdd

            Example: 20170930
        Action:
          type: string
          description: >-
            Action

            Mandatory

            Possible values are:

            •    AddOrUpdate – adds a new request or updates any existing requests, with overlapping dates, for the card

            •    AddAndOverwriteAll - all the existing requests of the given card will be removed and a new request with the specified FromDate and ToDate will be added.

            •    Delete – deletes any existing request with the same start date and end date for the card

            •    DeleteAll – deletes all saved future dated requests (all block and unblock requests) of the card.
        FromDate:
          type: string
          description: "Effective start date of Block / Unblock\r\nAllowed Formats: –\r\n•    yyyyMMdd\r\n•    yyyyMMdd HH:mm\r\nEg: 20230512 14:30, 20230512\r\nOptional\r\nDefault value: \r\n•     If the card status is “Active” then Current date & Time\r\n•    If the card status is “TemporaryBlock (Customer)” then null.\r\nNote:\r\n•    Time is considered only when “IsTimeSupported” is true else it will be treated as a date.\r\n•    Time will be passed in UTC time-zone.\r\n•    If the Card Status is “Temporary Block (Customer)” and FromDate is provided – The fromdate & time is considered as starting period of unblock request."
        ToDate:
          type: string
          description: >-
            Effective end date of Block / Unblock

            Allowed Formats: –

            •    yyyyMMdd

            •    yyyyMMdd HH:mm

            Eg: 20230512 14:30, 20230512

            Optional – When the Card status is Active else mandatory.

            When not provided, the card will remain blocked until manually unblocked.

            Note:

            •    Time is considered only when the “IsTimeSupported” flag is set as true, else it will be considered as only date.

            •    Date & Time passed in the request will be considered in UTC time-zone.

            •    If the card is currently in ‘Temporary Block (Customer)’ status, then this date is treated as the unblock date and is mandatory.

            •    If the Card Status is “Temporary Block (Customer)” and FromDate & ToDate is provided - The request will be considered as a scheduled specific period unblock request.
        Caller:
          type: string
          description: "The caller to be notified with the status of the scheduled card block / unblock request.\r\nMandatory, if NotifyCaller is true. \r\nMaximum field length: 20"
          nullable: true
        NotifyCaller:
          type: boolean
          description: >-
            True/False.

            Optional.

            Default: False

            If true, the caller would be notified back with the status as success or failure after the scheduled card block / unblock request is processed.
    ScheduleCardBlockResponse:
      title: ScheduleCardBlockResponse
      type: object
      properties:
        MainReference:
          type: integer
          description: >-
            Reference number for tracking the execution of the request.

            Note: Reference will be empty for status 9006 and 9012 i.e., request for all the cards failed.
          format: int32
        RequestId:
          type: string
          description: API Request ID
        Status:
          type: string
          description: Overall Status of the API call
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleCardBlockResponseDataItems'
          description: List of SubmittedScheduleCardBlockCard entity.
    ScheduleCardBlockResponseDataItems:
      title: ScheduleCardBlockResponseDataItems
      type: object
      properties:
        CardId:
          type: integer
          description: Unique Id of the card.
          format: int32
        FromDate:
          type: string
          description: >-
            Effective start date & time of Block / Unblock as updated in the intermediate queue table.



            Format: yyyyMMdd HH:mm

            Eg: 20230512 12:30
        ToDate:
          type: string
          description: >-
            Effective end date & time of Block / Unblock as updated in the intermediate queue table.



            Format: yyyyMMdd HH:mm

            Eg: 20230512 14:30
        ReferenceId:
          type: integer
          description: >-
            Effective end date & time of Block / Unblock as updated in the intermediate queue table.



            Format: yyyyMMdd HH:mm

            Eg: 20230512 14:30
          format: int32
    AutoRenewCardRequest:
      title: AutoRenewCardRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number (Ex: GB000000123) of the selected payer.

            Optional if PayerId is passed else Mandatory
        PayerId:
          type: integer
          description: >-
            Payer Id  of the selected payer.

            Optional if PayerNumber is passed else Mandatory
          format: int32
        AutoRenewCards:
          type: array
          items:
            $ref: '#/components/schemas/AutoRenewCardRequestAutoRenewCardsItems'
          description: ''
    AutoRenewCardRequestAutoRenewCardsItems:
      title: AutoRenewCardRequestAutoRenewCardsItems
      required:
      - ReissueSetting
      type: object
      properties:
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed, else Mandatory.
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional if AccountNumber is passed, else Mandatory.
          format: int32
        PAN:
          type: string
          description: >-
            PAN of the card.

            Optional if CardId is passed, else Mandatory.
        PANID:
          type: number
          description: >-
            Card PAN ID.

            Optional if CardId is given, else mandatory.

            Note: PANID is ignored if CardId is given.
        CardId:
          type: integer
          description: >-
            Card Id of the card.

            Optional if PAN is passed, else Mandatory.
          format: int32
        ReissueSetting:
          type: boolean
          description: "Reissue setting of the card. \r\nValues:\r\nTrue – Card will be Reissued when nearing its expiry date\r\nFalse – Card will not be Reissued\r\nMandatory"
    AutoRenewCardResponse:
      title: AutoRenewCardResponse
      type: object
      properties:
        MainReference:
          type: integer
          description: "Main reference number for tracking. \r\nExample: 123455"
          format: int32
        RequestId:
          type: string
          description: API
        Status:
          type: string
          description: 'Indicates overall status of the request. Allowed values: SUCCES, FAILED, PARTIAL_SUCCESS'
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AutoRenewCardResponseDataItems'
          description: List of Auto Renew reference entity. The fields of this entity are described below.
    AutoRenewCardResponseDataItems:
      title: AutoRenewCardResponseDataItems
      type: object
      properties:
        AutoRenewReferenceId:
          type: integer
          description: CardId and PAN of the card. ;( Semicolon is used as delimiter.
          format: int32
          nullable: true
        CardIdAndPAN:
          type: string
          description: Reference number for each individual auto renew card in the order.
          nullable: true
        PANID:
          type: number
          description: PANID of the card
          nullable: true
    UpdateMPayRegStatusRequest:
      title: UpdateMPayRegStatusRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1-Philippines\r\n5-UK"
          format: int32
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86-Philippines\r\n5-UK"
          format: int32
        PayerId:
          type: integer
          description: >-
            Payer Id  of the selected payer.

            Optional if PayerNumber is passed else Mandatory
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number (Ex: GB000000123) of the selected payer.

            Optional if PayerId is passed else Mandatory
        MPayRequests:
          type: array
          items:
            $ref: '#/components/schemas/UpdateMPayRegStatusRequestMPayRequestsItems'
          description: >-
            List of MPay Request to be updated for Fleet Manager approval status.

            Mandatory

            Maximum number of requests that can be submitted are 50
    UpdateMPayRegStatusRequestMPayRequestsItems:
      title: UpdateMPayRegStatusRequestMPayRequestsItems
      type: object
      properties:
        GlobalRequestID:
          type: string
          description: >-
            List of MPay Request to be updated for Fleet Manager approval status.

            Mandatory

            Maximum number of requests that can be submitted are 50
        Status:
          type: string
          description: >-
            Status of mobile payment registration request

            Mandatory.

            Allowed values –

            •    Approved

            •   Rejected
        ApproverUserID:
          type: string
          description: >-
            Approver’s User ID

            ApproverUserID is mandatory when Status is Approved else optional
        ApproverUserDisplayName:
          type: string
          description: >-
            Approver’s display name

            Mandatory when Status is Approved else optional.
        Reason:
          type: string
          description: >-
            Reason for Fleet Manager approval/rejection.

            Optional
    UpdateMPayRegStatusResponse:
      title: UpdateMPayRegStatusResponse
      type: object
      properties:
        RequestId:
          type: string
          description: API Request Id
        Status:
          type: string
          description: API Response Status
    GeneratePINKeyResponse:
      title: GeneratePINKeyResponse
      type: object
      properties:
        uid:
          type: string
          description: Random generated unique identifier.
          example: 123aaa33198dc8f3s4k77dsc78
        value:
          type: string
          example: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUFvZ0dSQ3k4N1FjQ3d6MFI0NE9LTwpucEhhZ0p1bW83Wll1V21JdXY2b1ZseUxqYkcwWlgyUFBSUy9LVUdhbXdiWGQwMGtYeHBXbFA5cXJ2N2hYMlNSCkJ2TFJVWFR0TCtvWS9QajN0c2Z6d0liT3VDei9qUnQ5Uk9WdzNBTkZTNjF6blVFTkVsSlNXN2dudnJuL29USWwKRWlid2VVTE5aTlJObFRwQTI1QVhKanhXMzM3ZUx0Y2F5cXJiQlNJNVFmRitCTGJJbE1Rd2tqSkNhUFEzV0pUKwpxcnlCREFCME5ocm02VlBmK2toN2FyR2JqL3ZLS0NRWVBkQWhRKzI3OGp0ZGJZdFBzYWtjN0RqVXpTenl2Wm9HCmhiSEt4V0ZTODFnL2ZlQUZNbFFDVlErZk15ZVN5dFZKOGlmZjFZR2RydEJCdG16U0NRN2V0K1IwaHpUbzJXblcKZzREZG1oWmlZT0MvUU55dk5uY1VSeDRZMU84VW1nSmorNE56c3VyQ2dQMmRSUjNpVXRIYlZaZjRzTEpZWk5CWApORGxjUDNzYWlwTXJ6Z0RpM0VCbWZzdEJOODdvWVdsRzRQNmlPVGt3dzdDVyt0TUdRNmJPcVBBNFF0cWMrYUZMCktZR3FWREhWRnBhZWdwYXl0U2g3T25nd0cwckJod0M4ODNpeVFaZDNKRW1lSWt2V05wYTVRSExqRmJKTEg4M2YKdk9TR2E0aGR6ZmZqYUhUM2VvR2VCRU5NaTZIbFo4RVZHWUh0VUpXZGMzZ2h5OHdPbmZkTlN2NzV3SUZYbHNragpIdHM3Z3NkM3hDN1B3ZnBqOEV5Lyt2aTVLNHM5M29IaE5TYlRhNlUzNUVsZkFXL20zK1YxWjZqVUpwRWpmZkZYCnI0YlFiR3pQNVhWYkNKL21ndmVNM3lNQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=
    DeliveryAddressUpdateRequest:
      title: DeliveryAddressUpdateRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory."
          format: int32
          example: 5
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided."
          format: int32
          example: 5
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.

            Optional if PayerNumber is passed else Mandatory
          format: int32
          example: 123456
        PayerNumber:
          type: string
          description: >-
            Payer Number (Ex: GB000000123) of the selected payer.

            Optional if PayerId is passed else Mandatory
          example: GB000000123
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Optional if AccountNumber is passed, else mandatory.
          format: int32
          example: 12356
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed, else mandatory.

            This input is a search criterion, if given.
          example: GB000000124
        DeliveryAddressUpdates:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAddressUpdate'
          description: ''
    DeliveryAddressUpdate:
      title: DeliveryAddressUpdate
      required:
      - UseCustomerDefaultAddress
      type: object
      properties:
        CardId:
          type: integer
          description: >-
            Card Id of the card.

            Optional if  PAN is passed, else Mandatory.
          format: int32
          example: 123
        PAN:
          type: string
          description: "PAN of the card.\r\nOptional if CardId is passed, else Mandatory. \r\n\r\nNote: -\r\nPAN & ExpiryDate parameters will be considered only if CardId & PANID are not provided."
          example: '7002051006629889654'
        CardExpiryDate:
          type: string
          description: >-
            Expiry date of the card.

            Mandatory if PAN is passed, else optional.

            Format: yyyyMMdd
          example: '20170930'
        UseCustomerDefaultAddress:
          type: boolean
          description: >-
            Whether to use the default delivery address configured at customer (or card group) level as the delivery address for this card.

            Mandatory

            Note: If value is false then ‘UpdateCardRenewalAddress’ is mandatory. If value set to ‘True’ then

            ‘UpdateCardRenewalAddress’ may be null/empty. It will be ignored if provided.
        UpdateCardRenewalAddress:
          $ref: '#/components/schemas/UpdateCardRenewalAddress2'
      description: List of cards for delivery address update. Maximum number of cards that can be provided in the list is 50
    UpdateCardRenewalAddress:
      title: UpdateCardRenewalAddress
      required:
      - ContactName
      - CompanyName
      - AddressLine
      - ZipCode
      - CountryID
      type: object
      properties:
        ContactName:
          type: string
          description: >-
            Contact name

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.



            Max Length: 50
          example: Jack
        ContactTitle:
          type: string
          description: >-
            Title

            Max Length: 50
          example: Mr
        CompanyName:
          type: string
          description: >-
            Company name.

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 50
          example: Travel Transport
        AddressLine:
          type: string
          description: >-
            Address line 1,2 and 3

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 128

            Note: -Each address line should be separated by “\r\n”.
          example: Elm Street 11
        ZipCode:
          type: string
          description: >-
            ZipCode

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 10
          example: 1023EA
        City:
          type: string
          description: >-
            City

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 40
          example: London
        RegionID:
          type: integer
          description: Region id of card.
          format: int32
          example: 2
        CountryID:
          type: integer
          description: >-
            Country ID

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.
          format: int32
          example: 8
        EmailAddress:
          type: string
          description: "Email Address\r\n\r\nMax Length: 90\r\nNote: -\r\nBased on the international standard that there can be \r\n•    Max Length 64 before the @ (the 'Local part’) =64(minimum of 1)\r\n•    Max Lenth after the (the domain) = 88 (Minimum of 2)"
          example: testmail@gmail.com
        PhoneNumber:
          type: string
          description: >-
            Phone number

            Optional

            Max Length: 16
          example: '+99999999999'
      description: >-
        Delivery address of card. This address will be used for card reissue and PIN reminders in future.

        Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.
    DeliveryAddressUpdateResponse:
      title: DeliveryAddressUpdateResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request ID to which was passed on the API request.
          example: eb621f45-a543-4d9a-a934-2f223b263c42
        ServiceReference:
          type: integer
          description: Service reference number for tracking.
          format: int32
          example: 123456
        DeliveryAddressUpdateReferences:
          $ref: '#/components/schemas/DeliveryAddressUpdateReferences2'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    DeliveryAddressUpdateReferences:
      title: DeliveryAddressUpdateReferences
      type: object
      properties:
        CardId:
          type: integer
          description: CardId
          format: int32
          example: 12345
        CardPAN:
          type: string
          description: PAN of the card.
          example: '7002051006629889654'
        AccountId:
          type: integer
          description: AccountId
          format: int32
          example: 12356
        AccountNumber:
          type: string
          description: Account number
          example: GB000000124
        ReferenceId:
          type: integer
          description: Individual delivery address update reference number for the delivery address update request.
          format: int32
          example: 573567
        ErrorInfo:
          type: string
          description: Individual error information for the delivery address update request.
          example: 'null'
      description: List of Delivery address update entity. The fields of this entity are described below.
    SearchCardRestrictionReq:
      title: SearchCardRestrictionReq
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
        Accounts:
          $ref: '#/components/schemas/Accounts'
        BundleId:
          type: string
          description: >-
            Identifier of the Card bundle

            Optional if cards list is given, else mandatory.

            This input is a search criterion, if given.
          nullable: true
        Cards:
          $ref: '#/components/schemas/SearchCardRestriction'
        IncludeLocationRestrictions:
          type: boolean
          description: >-
            True/False

            Whether to include location restriction of the cards in the response.

            Optional

            Default ‘false’
          nullable: true
        IncludeBundleDetails:
          type: boolean
          description: "Default value is False,\r\nWhen the value is True, API will return bundle Id associated with cards in the response, if available. \r\nNote: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is expected when set to ‘True’."
          nullable: true
        IncludeInheritedLimits:
          type: boolean
          description: >-
            Default value is True,

            When True: service will return the inherited values for the usage limits (from card-program or account as available) when it is not overridden on the card.
          nullable: true
    SearchCardRestriction:
      title: SearchCardRestriction
      type: object
      properties:
        CardId:
          type: integer
          description: "Unique Card Id \r\nOptional if PAN is given, else mandatory."
          format: int32
          nullable: true
        PAN:
          type: string
          description: "Card PAN.\r\nOptional if CardId is given, else mandatory. \r\nNote: PAN is ignored if CardId is given.\r\nExample: 7002051006629890645"
          nullable: true
    SearchCardRestrictionRes:
      title: SearchCardRestrictionRes
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        cards:
          type: array
          items:
            $ref: '#/components/schemas/RestrictionCardList'
          description: ''
        Restrictions:
          $ref: '#/components/schemas/Restriction'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    RestrictionCardList:
      title: RestrictionCardList
      type: object
      properties:
        CardId:
          type: integer
          description: Unique Card Id
          format: int32
        PAN:
          type: string
          description: Card PAN
        ExpiryDate:
          type: string
          description: "Expiry date of the card \r\nFormat: yyyyMMdd\r\nNote: Clients to convert this to appropriate DateTime type."
        StatusId:
          type: integer
          description: Card Status id
          format: int32
        StatusDescription:
          type: string
          description: Status Description (Active, Temporarily Blocked, etc.,)
        DriverName:
          type: string
          description: >-
            Driver name

            Example:  ANDREW GILBERRY
        VRN:
          type: string
          description: >-
            Vehicle registration number

            Example: MV65YLH
        IssueDate:
          type: string
          description: >-
            Issue date

            Format: yyyyMMdd

            Note: Clients to convert this to appropriate DateTime type.
        IssueNumber:
          type: integer
          description: Issue Number
          format: int32
        AccountId:
          type: integer
          description: >-
            Account ID

            Example: 29484
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number

            Example: GB99215176
        AccountName:
          type: string
          description: >-
            Account Name

            Example: MATTHEW ALGIE & COMPANY LIMITED
        AccountShortName:
          type: string
          description: Account Short Name
        CurrencyCode:
          type: string
          description: >-
            ISO currency code of the Customer Currency

            Example: GBP
        ColCoCurrencyCode:
          type: string
          description: >-
            ISO currency code of the country.

            Example: GBP
        ColCoCurrencySymbol:
          type: string
          description: >-
            Currency symbol of the country.

            Example: £, $
        RestrictionCurrencyCode:
          type: string
          description: >-
            ISO currency code of the country.

            Example: GBP
        RestrictionCurrencySymbol:
          type: string
          description: >-
            Currency symbol of the country.

            Example: £, $
        PurchaseCategoryId:
          type: string
          description: >-
            Purchase category Id

            Example: 123, 124, etc.,
        PurchaseCategoryCode:
          type: string
          description: "Purchase category code \r\nExample: \r\n0 - All Fuels (without VP) and Lubricants\r\n1 - FuelSave only\r\n2 - FuelSave and Lubricants\r\n3 - No Restrictions\r\n4 - VP and FuelSave\r\n5 - Diesel ONLY\r\n6 - Diesel and Lubricants\r\n7 - VP and Lubricants\r\n8 - VP and FuelSave and Lubricants"
        PurchaseCategoryName:
          type: string
          description: "Purchase category name \r\nExample: \r\n0 - All Fuels (without VP) and Lubricants\r\n1 - FuelSave only\r\n2 - FuelSave and Lubricants\r\n3 - No Restrictions\r\n4 - VP and FuelSave\r\n5 - Diesel ONLY\r\n6 - Diesel and Lubricants\r\n7 - VP and Lubricants\r\n8 - VP and FuelSave and Lubricants"
        IsSuperseded:
          type: boolean
          description: >-
            True/False

            True if a new card is issued with the same PAN, else false
        IsVirtualCard:
          type: boolean
          description: >-
            True/False

            True if it is a virtual card, else false
        IsNational:
          type: boolean
          description: >-
            True/False

            True if it is a national card, else false
        IsInternational:
          type: boolean
          description: >-
            True/False

            True if it is an international card, else false
        IsCRT:
          type: boolean
          description: >-
            True/False

            True if it is a CRT type card, else false
        IsFleet:
          type: boolean
          description: >-
            True/False

            True if it is a Fleet type card, else false
        IsShellSitesOnly:
          type: boolean
          description: >-
            True/False

            True if it is only allowed at Shell sites, else false
        IsPartnerSitesIncluded:
          type: boolean
          description: >-
            True/False

            True if it is allowed at all partner sites, else false
        CardTypeId:
          type: integer
          description: >-
            Card Type ID

            Example Id & Description:

            1 - Philippines CRT 7077861

            2- Philippines Fleet 7002861

            5-SHELL FLEET- HONG KONG 7002821

            6-SHELL NHF- HONG KONG 7002821

            7-SHELL CRT- HONG KONG 7077821
          format: int32
        CardTypeCode:
          type: string
          description: ISO code of the card i.e. first 7 digits of the PAN
        CardTypeName:
          type: string
          description: >-
            Card Type Name

            Example Id & Description:

            1 - Philippines CRT 7077861

            2- Philippines Fleet 7002861

            5-SHELL FLEET- HONG KONG 7002821

            6-SHELL NHF- HONG KONG 7002821

            7-SHELL CRT- HONG KONG 7077821
        BundleId:
          type: string
          description: >-
            Bundle Id associated with card in the Gateway.

            This field will have a null value if the card is not associated with any bundle of IncludeBundleDetails in request is false.

            If the search is based on a bundle Id, the same will be returned.
        MediumTypeID:
          type: integer
          description: >-
            Id of the medium type identifier.

            Example: 1,2,4

            Full list below:

            1 - Fuel Card

            2 - Fuel Card with EV

            4 - Fuel Card and Key fob Card

            5 - Key fob

            6 - Virtual Card

            7 - NPII Token

            8 – Smartpay
          format: int32
        MediumType:
          type: string
          description: "Name of the medium type identifier.\r\n\r\nExample: Fuel Card, Fuel Card with EV, Key fob  \r\nFull list below:\r\n1 - Fuel Card\r\n2 - Fuel Card with EV\r\n4 - Fuel Card and Key fob Card\r\n5 - Key fob\r\n6 - Virtual Card\r\n7 - NPII Token\r\n8 - Smartpay"
    Restriction:
      title: Restriction
      type: object
      properties:
        UsageRestrictions: {}
        DayTimeRestrictions:
          $ref: '#/components/schemas/DayTimeRestrictions'
        ProductRestrictions:
          $ref: '#/components/schemas/SearchProductRestriction'
        LocationRestrictions:
          $ref: '#/components/schemas/LocationRestriction'
    UsageRestriction:
      title: UsageRestriction
      type: object
      properties:
        Level:
          type: string
          description: >-
            Usage limit is applied on the card from this level.

            Valid values –

            •    Inherited

            •    Card

            When Card level usage restrictions are not present, the API will return the inherited restrictions.

            Note: -This field is deprecated. Instead, use ‘Override’.
        DailySpend:
          type: number
          description: "Maximum spend value (amount) allowed per day. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        DailySpendAccumulated:
          type: number
          description: Balance spend value (amount) available for rest of the day.
        DailySpendBalance:
          type: number
          description: Balance spend value (amount) available for rest of the day.
        DailySpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        DailySpendThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55
        WeeklySpend:
          type: number
          description: "Maximum spend value (amount) allowed per week. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        WeeklySpendAccumulated:
          type: number
          description: Value (amount) spent during the week.
        WeeklySpendBalance:
          type: number
          description: Balance spend value (amount) available for rest of the week.
        WeeklySpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        WeeklySpendThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        MonthlySpend:
          type: number
          description: "Maximum spend value (amount) allowed per month. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        MonthlySpendAccumulated:
          type: number
          description: Value (amount) spent during the month.
        MonthlySpendBalance:
          type: number
          description: Balance spend value (amount) available for rest of the month.
        MonthlySpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        PerTransactionSpend:
          type: number
          description: "Maximum spend value (amount) allowed per transaction. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        PerTransactionSpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        AnnualSpend:
          type: number
          description: "Maximum spend value (amount) allowed per annum. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        AnnualSpendAccumulated:
          type: number
          description: Value (amount) spent during the year.
        AnnualSpendBalance:
          type: number
          description: Balance spend value (amount) available for rest of the year.
        AnnualSpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        AnnualSpendThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        LifeTimeSpend:
          type: number
          description: "Maximum spend value (amount) allowed in card’s life time. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited"
        LifeTimeSpendAccumulated:
          type: number
          description: Value (amount) spent during the card’s life time
        LifeTimeSpendBalance:
          type: number
          description: Balance spend value (amount) available for rest of the card’s life time.
        LifeTimeSpendOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        LifeTimeSpendThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        DailyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per day. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        DailyVolumeAccumulated:
          type: number
          description: Volume (quantity) bought during the day.
        DailyVolumeBalance:
          type: number
          description: Balance volume (quantity) available for rest of the day.
        DailyVolumeOverride:
          type: number
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        DailyVolumeThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        WeeklyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per week. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        WeeklyVolumeAccumulated:
          type: number
          description: Volume (quantity) bought during the week.
        WeeklyVolumeBalance:
          type: number
          description: Balance volume (quantity) available for rest of the week.
        WeeklyVolumeOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        WeeklyVolumeThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        MonthlyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per month. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        MonthlyVolumeAccumulated:
          type: number
          description: Volume (quantity) bought during the month.
        MonthlyVolumeBalance:
          type: number
          description: Balance volume (quantity) available for rest of the month.
        MonthlyVolumeOverride:
          type: boolean
          description: Indicate if the limit is overridden or default. (False for default).
        MonthlyVolumeThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        PerTransactionVolume:
          type: number
          description: "Maximum volume (quantity) allowed per transaction. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        PerTransactionVolumeOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        AnnualVolume:
          type: number
          description: "Maximum volume (quantity) allowed per annum. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        AnnualVolumeAccumulated:
          type: number
          description: Volume (quantity) bought during the year.
        AnnualVolumeBalance:
          type: number
          description: Balance volume (quantity) available for rest of the year.
        AnnualVolumeOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        AnnualVolumeThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        LifeTimeVolume:
          type: number
          description: "Maximum volume (quantity) allowed in the card’s life time. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        LifeTimeVolumeAccumulated:
          type: number
          description: Volume (quantity) bought during the card’s life time.
        LifeTimeVolumeBalance:
          type: number
          description: Balance volume (quantity) available for rest of the card’s life time.
        LifeTimeVolumeOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        LifeTimeVolumeThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        DailyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per day. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited"
        DailyTransactionAccumulated:
          type: number
          description: Number of times the card is used during the day.
        DailyTransactionBalance:
          type: number
          description: Number of times the card could be used in rest of the day.
        DailyTransactionOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        DailyTransactionThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        WeeklyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per week. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        WeeklyTransactionAccumulated:
          type: number
          description: Number of times the card is used during the week
        WeeklyTransactionBalance:
          type: number
          description: Number of times the card could be used in rest of the week.
        WeeklyTransactionOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        WeeklyTransactionThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        MonthlyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per month. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        MonthlyTransactionAccumulated:
          type: number
          description: Number of times the card is used during the month
        MonthlyTransactionBalance:
          type: number
          description: Number of times the card could be used in rest of the month.
        MonthlyTransactionOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        MonthlyTransactionThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        AnnualTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per annum. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance."
        AnnualTransactionAccumulated:
          type: number
          description: Number of times the card is used during the year.
        AnnualTransactionBalance:
          type: number
          description: Number of times the card could be used in rest of the year.
        AnnualTransactionOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        AnnualTransactionThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
        LifeTimeTransactionCount:
          type: number
          description: "Maximum number of transactions allowed in the card’s life time. \r\nCard limit ‘0’ represents the value is inherited and inherited limit could be calculated by adding accumulated and balance.\r\nHowever, Inherited limit ‘0’ represents unlimited."
        LifeTimeTransactionAccumulated:
          type: number
          description: Number of times the card is used during the card’s life time.
        LifeTimeTransactionBalance:
          type: number
          description: Number of times the card could be used in rest of the card’s life time.
        LifeTimeTransactionOverride:
          type: boolean
          description: "Indicate if the limit is overridden or default. (False for default). \r\nExample: false"
        LifeTimeTransactionThreshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
      description: Details of the usage restrictions such as day/week/month value and volume restrictions applied on the card.
    DayTimeRestriction:
      title: DayTimeRestriction
      type: object
      properties:
        Monday:
          type: boolean
          description: True if card could be used on a Monday, else false
        Tuesday:
          type: boolean
          description: True if card could be used on a Tuesday, else false.
        Wednesday:
          type: boolean
          description: True if card could be used on a Wednesday, else false.
        Thursday:
          type: boolean
          description: True if card could be used on a Thursday, else false
        Friday:
          type: boolean
          description: True if card could be used on a Friday, else false
        Saturday:
          type: boolean
          description: True if card could be used on a Saturday, else false
        Sunday:
          type: boolean
          description: True if card could be used on a Sunday, else false.
        TimeFrom:
          type: string
          description: "Card could be used from this time in a day.\r\nFormat: HH:mm (24-hour format)\r\nNote: \r\n1.    Clients to convert this to appropriate DateTime or TimeSpan type.\r\n“00:00” is the lowest time value and “23:59” is the highest time value."
        TimeTo:
          type: string
          description: "Card could be used up to this time in a day. \r\nFormat: HH:mm (24-hour format)\r\nNote: \r\n1.    Clients to convert this to appropriate DateTime or TimeSpan type. \r\n“00:00” is the lowest time value and “23:59” is the highest time value."
      description: Details of the day/time restrictions such as weekdays and time range in which transactions should be allowed on the card.
    SearchProductRestriction:
      title: SearchProductRestriction
      type: object
      properties:
        Products:
          type: array
          items:
            $ref: '#/components/schemas/RestrictionProduct'
          description: ''
        ProductGroups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroup'
          description: ''
    RestrictionProduct:
      title: RestrictionProduct
      type: object
      properties:
        GlobalProductCode:
          type: string
          description: >-
            The productCode returned by the Gateway API.

            Example: 021
        Description:
          type: string
          description: >-
            The description returned by the Gateway API.

            Example: High Performance Diesel
    LocationRestriction:
      title: LocationRestriction
      type: object
      properties:
        CountryRestrictions:
          $ref: '#/components/schemas/CountryRestriction'
        NetworkRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/NetworkRestriction'
          description: ''
        ShellSiteRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/ShellSiteRestriction'
          description: ''
        PartnerSiteRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerSiteRestriction'
          description: ''
    CountryRestriction:
      title: CountryRestriction
      type: object
      properties:
        Countries:
          type: array
          items:
            type: string
          description: >-
            A list of ISO 3166-1 Numeric-3 country codes.

            Example: 826 for United Kingdom.
        Exclusive:
          type: boolean
          description: >-
            Flag indicates whether the profile is inclusive or exclusive.

            Example: False - (inclusive), i.e. the “Countries” property lists the countries where the transactions will be allowed.

            True - (exclusive), i.e. the “Countries” property lists the countries where the transactions will be declined.
    NetworkRestriction:
      title: NetworkRestriction
      type: object
      properties:
        Country:
          type: string
          description: >-
            ISO 3166-1 Numeric-3 code of the country where the network restriction is applied.

            Example: 826 for United Kingdom.
        Networks:
          type: array
          items:
            type: string
          description: >-
            A list of Gateway network codes, typically 7 or 10 digits.

            Example: 0002003250
        Exclusive:
          type: boolean
          description: >-
            Flag indicates whether the profile is inclusive or exclusive.

            Example: False - (inclusive), i.e. the “Networks” property lists the networks in which the transaction will be allowed.

            True - (exclusive), i.e. the “Networks” property lists the networks in which the transactions will be declined.
    ShellSiteRestriction:
      title: ShellSiteRestriction
      type: object
      properties:
        Country:
          type: string
          description: >-
            ISO 3166-1 Numeric-3 code of the country where the site restriction is applied.

            Example: 826 for United Kingdom.
        Sites:
          type: array
          items:
            type: string
          description: >-
            A list of Site IDs in this country, in the format “AA1111” where “AA” is a 2-character country code and “1111” is a 4-digit site number in that country, which is either restricted or allowed.

            For example, “GB1234”.
        SiteGroups:
          type: array
          items:
            type: string
          description: A list of site group ids in this country which is either restricted or allowed.
        Exclusive:
          type: boolean
          description: >-
            Flag indicates whether the profile is inclusive or exclusive.

            Example: False - (inclusive), i.e. the “Sites” & “SiteGroups” properties lists the sites & site groups where the transaction will be allowed.

            True - (exclusive), i.e. the “Sites” & “SiteGroups” properties lists the sites and site groups where the transactions will be declined.
    PartnerSiteRestriction:
      title: PartnerSiteRestriction
      type: object
      properties:
        NetworkCode:
          type: string
          description: >-
            Gateway network codes, typically 7 or 10 digits, where sites and site groups belong to.

            Example: 0002003250
        Sites:
          type: array
          items:
            type: string
          description: >-
            A list of Site IDs in this network which needs to be either restricted or allowed.

            For example, 97123, 97155

            A list of values must be passed for either Sites or SiteGroups or both.

            Max 10 sites are allowed for the Partner site Restriction.
        SiteGroups:
          type: array
          items:
            type: string
          description: >-
            A list of site group ids in this network which needs to be either restricted or allowed.

            For example, 83649200

            A list of values must be passed for either Sites or SiteGroups or both.

            Max 10 sites groups are allowed for the Partner site Restriction.
        Exclusive:
          type: boolean
          description: >-
            Flag indicates whether the profile is inclusive or exclusive.

            Mandatory

            Example: False - (inclusive), i.e. the “Sites” & “SiteGroups” properties lists the sites & site groups where the transaction will be allowed.

            True - (exclusive), i.e. the “Sites” & “SiteGroups” properties lists the sites and site groups where the transactions will be declined.
    CardRestrictionReq:
      title: CardRestrictionReq
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
          nullable: true
        Cards:
          $ref: '#/components/schemas/RestrictionCardsList'
    RestrictionCardsList:
      title: RestrictionCardsList
      type: object
      properties:
        AccountId:
          type: integer
          description: "Account ID of the customer.\r\nOptional if AccountNumber is passed, else Mandatory. \r\nThis input is a search criterion, if given.\r\nExample: 123456"
          format: int32
          nullable: true
        CardId:
          type: integer
          description: Unique Card Id
          format: int32
          nullable: true
        PAN:
          type: string
          description: "Card PAN.\r\nOptional if CardId is given, else mandatory. \r\nExample: 7002051006629890645 \r\nNote: \r\n•    PAN is ignored if CardId is given.\r\nWhen PAN matches with multiple cards, the restriction will be applied on the latest issued card."
          nullable: true
        ResetUsageRestrictions:
          type: boolean
          description: "True/False.\r\nIf true, the usage restrictions applied on the card in Gateway will be reset to Customer Card Type level max limits, if there are no customer level overrides available then OU card type max limits. Else, the card restrictions will be updated with the usage restrictions provided in the API. \r\nThis property is not dependent on IsVelocityCeiling or SetDefaultOnVelocityUpdate flags."
        ResetDayTimeRestrictions:
          type: boolean
          description: >-
            True/False.

            If true, the Day/Time restrictions applied on the card will be deleted. Else, the card restrictions will be updated with the day/time restrictions provided in the API.
          nullable: true
        ResetProductRestrictions:
          type: boolean
          description: >-
            True/False.

            If true, Default fuel/non-fuel sets configured at the purchase category level will be applied to the card. Else, the card will be applied with product restrictions provided in the API.
          nullable: true
        ResetLocationRestrictions:
          type: boolean
          description: >-
            True/False.

            If true, the location restrictions applied on the card will be deleted. Else, the card restrictions will be updated with the location restrictions provided in the API.
          nullable: true
        UsageRestrictions: {}
        DayTimeRestrictions:
          $ref: '#/components/schemas/DayTimeRestrictions'
        ProductRestrictions: {}
        LocationRestrictions:
          $ref: '#/components/schemas/LocationRestriction'
    UsageRestrictionsCard:
      title: UsageRestrictionsCard
      type: object
      properties:
        DailySpend:
          type: number
          description: >-
            Maximum spend value (amount) allowed per day.

            Optional

            It allows null in the input field. If Values is passed as null, apply the card type limit. However, if the card type limit is NULL for the same field then No limit will be applied in Gateway.
          nullable: true
        WeeklySpend:
          type: number
          description: "Maximum spend value (amount) allowed per week. \r\nOptional"
          nullable: true
        MonthlySpend:
          type: number
          description: "Maximum spend value (amount) allowed per month. \r\nOptional"
          nullable: true
        PerTransactionSpend:
          type: number
          description: "Maximum spend value (amount) allowed per transaction. \r\nOptional"
          nullable: true
        AnnualSpend:
          type: number
          description: "Maximum spend value (amount) allowed per annum. \r\nOptional"
          nullable: true
        LifeTimeSpend:
          type: number
          description: "Maximum spend value (amount) allowed in card’s life time. \r\nOptional"
          nullable: true
        DailyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per day. \r\nOptional"
          nullable: true
        WeeklyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per week. \r\nOptional"
          nullable: true
        MonthlyVolume:
          type: number
          description: "Maximum volume (quantity) allowed per month. \r\nOptional"
          nullable: true
        PerTransactionVolume:
          type: number
          description: "Maximum volume (quantity) allowed per transaction. \r\nOptional"
        AnnualVolume:
          type: number
          description: "Maximum volume (quantity) allowed per annum. \r\nOptional"
          nullable: true
        LifeTimeVolume:
          type: number
          description: "Maximum volume (quantity) allowed in card’s life time. \r\nOptional"
        DailyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per day. \r\nOptional"
          nullable: true
        WeeklyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per week. \r\nOptional"
          nullable: true
        MonthlyTransactionCount:
          type: number
          description: "Maximum number of transactions allowed per month. \r\nOptional."
          nullable: true
        AnnualTransactionCount:
          type: number
          description: Maximum number of transactions allowed per annum.
          nullable: true
        LifeTimeTransactionCount:
          type: number
          description: "Maximum number of transactions allowed in card’s lifetime. \r\nOptional"
          nullable: true
    ProductRestrictionCard:
      title: ProductRestrictionCard
      type: object
      properties:
        Products:
          type: array
          items:
            type: string
          description: >-
            An array of 3-digit global product codes.

            Optional.

            Example: [ "033", "021", "023”]
        ProductGroups:
          type: array
          items:
            type: string
          description: >-
            An array of product group IDs.

            Optional.

            Example: [ "670246404", "40557126" ]
    CardRestrictionResponse:
      title: CardRestrictionResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        RestrictionRequestReference:
          type: number
          description: Reference number for tracking the execution of the card restriction requests.
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/RestrictioncardsRes'
          description: ''
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    RestrictioncardsRes:
      title: RestrictioncardsRes
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Example: 123456
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Example: GB000000123
        CardId:
          type: string
          description: >-
            Unique Card Id

            Example: 275549
        PAN:
          type: string
          description: >-
            Card PAN.

            Example: 7002051006629890645
        UsageRestrictionStatus:
          type: string
          description: Status of the card usage restriction submitted. Based on the response the value will be set as either “Success” or “Failed”.
        UsageRestrictionDescription:
          type: string
          description: Response for the usage restriction in case of an error. This field will have a value only when “UsageRestrictionStatus” is “Failed”.
        DayTimeRestrictionStatus:
          type: string
          description: Status of the card day/time restriction submitted. Based on the response from Gateway value will be set as either “Success” or “Failed”.
        DayTimeRestrictionDescription:
          type: string
          description: Response for the day/time restriction in case of an error. This field will have a value only when “DayTimeRestrictionStatus” is “Failed”.
        ProductRestrictionStatus:
          type: string
          description: Status of the card product restriction submitted. Based on the response  the value will be set  either as “Success” or “Failed”.
        ProductRestrictionDescription:
          type: string
          description: Response for the product restriction in case of an error. This field will have a value only when “ProductRestrictionStatus” is “Failed”.
        LocationRestrictionStatus:
          type: string
          description: Card Location restriction submitted, based on response value set as “Success” or “Failed”.
        LocationRestrictionStatusDescription:
          type: string
          description: Response for the location restriction in case of an error. This field will have a value only when “LocationRestrictionStatus” is “Failed”.
        ValidationErrorCode:
          type: string
          description: Error code for validation failure.
        ValidationErrorDescription:
          type: string
          description: Description of validation failure.
    CreateBundleRequest:
      title: CreateBundleRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: GB000000123
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Either AccountId or AccountNumber or both must be passed.

            Example: 123456
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: "Account Number of the customer. \r\nEither AccountId or AccountNumber or both must be passed.\r\nExample: GB000000123"
          nullable: true
        ExternalBundleId:
          type: string
          description: >-
            Identifier of the bundle in external system.

            Optional.
          nullable: true
        Description:
          type: string
          description: >-
            A bundle description.

            Optional.
        Cards:
          type: array
          items:
            type: string
          description: >-
            List of Card PANs to be added in the bundle.

            Mandatory.

            Example: 7002051006629890645

            When PAN matches with multiple cards, the restriction will be applied on the latest issued card.
        Restrictions: {}
    BundleRestriction:
      title: BundleRestriction
      type: object
      properties:
        DayTimeRestrictionAction:
          type: string
          description: "The value indicates what actions to be performed with respect to day time restriction. \r\nMandatory\r\nAllowed values –\r\n•    Add: Apply the given restriction on the bundle.\r\n•    Default: No Day/Time restriction will be applied on the bundle in Gateway."
          nullable: true
        LocationRestrictionAction:
          type: string
          description: "The value indicates what actions to be performed with respect to location restriction. \r\nMandatory\r\nAllowed values –\r\n•    Add: Apply the given restriction on the bundle.\r\n•    Default: No location restriction will be applied on the bundle in Gateway."
          nullable: true
        UsageRestrictions: {}
        DayTimeRestrictions:
          $ref: '#/components/schemas/DayTimeRestrictions'
        ProductRestrictions: {}
        LocationRestrictions:
          $ref: '#/components/schemas/LocationRestriction'
    CreateBundleResponse:
      title: CreateBundleResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        BundleCreationStatus:
          $ref: '#/components/schemas/ErrorStatus'
        BundleId:
          type: string
          description: Identifier of the newly created bundle
        DayTimeRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        DayTimeRestrictionProfileId:
          type: string
          description: Identifier of the day/time restriction profile created
        LocationRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        LocationRestrictionProfileId:
          type: string
          description: Identifier of the location restriction profile created
        UsageRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        ProductRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        Cards:
          $ref: '#/components/schemas/BundleCardRestrictionStatus'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    BundleCardRestrictionStatus:
      title: BundleCardRestrictionStatus
      type: object
      properties:
        PAN:
          type: string
          description: >-
            Card PAN.

            Example: 7002051006629890645
    UpdateBundleRequest:
      title: UpdateBundleRequest
      required:
      - BundleId
      - RequestAction
      - Cards
      - UsageRestrictionAction
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code  of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: string
          description: >-
            Payer Id of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: 123456
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: GB000000123
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Either AccountId or AccountNumber or both must be passed.

            Example: 123456
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: "Account Number of the customer. \r\nEither AccountId or AccountNumber or both must be passed.\r\nExample: GB000000123"
          nullable: true
        BundleId:
          type: string
          description: >-
            Identifier of the bundle in Gateway.

            Mandatory
          nullable: true
        RequestAction:
          type: string
          description: >-
            The value indicates the action to be performed with the request.

            Mandatory

            Allowed values:

            •    Add

            •    Update

            •    Remove
          nullable: true
        Cards:
          type: array
          items:
            type: string
          description: >-
            List of Card PANs to be added in the bundle.

            Mandatory for Add / Remove request action. Ignored for Update action.

            Example: 7002051006629890645

            When PAN matches with multiple cards, the restriction will be applied on the latest issued card.
        UsageRestrictionAction:
          type: string
          description: >-
            The value indicates what actions to be performed with respect to usage restrictions on the list of cards being added or removed.

            Mandatory for Add / Remove request action. Ignored for Update action.

            Allowed values:

            •    Update

            •    None
          nullable: true
        Restrictions:
          $ref: '#/components/schemas/BundleRestrictionUpdate'
    BundleRestrictionUpdate:
      title: BundleRestrictionUpdate
      type: object
      properties:
        ResetDayTimeRestriction:
          type: boolean
          description: >-
            True/False

            A value indicates if the day/time restriction is to be reset for card bundle.

            Optional

            Default value is False.
          nullable: true
        ResetLocationRestriction:
          type: boolean
          description: >-
            True/False

            A value indicates if the location restriction is to be reset for card bundle.

            Optional

            Default value is False.
          nullable: true
        ResetProductRestriction:
          type: boolean
          description: >-
            True/False

            A value indicates if the product restriction is to be reset for card bundle.

            Optional

            Default value is False.
          nullable: true
        UsageRestrictions: {}
        DayTimeRestrictionProfileId:
          type: string
          description: >-
            Identifier of the day/time restriction profile to be updated for the bundle in Gateway.

            Optional
          nullable: true
        DayTimeRestrictions:
          $ref: '#/components/schemas/CardDayTimeRestrictions'
        ProductRestrictions: {}
        LocationRestrictionProfileId:
          type: string
          description: >-
            Identifier of the location restriction profile to be updated for the bundle in Gateway.

            Optional
        LocationRestrictions:
          $ref: '#/components/schemas/LocationRestriction'
    UpdateBundleResponse:
      title: UpdateBundleResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        RequestActionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        DayTimeRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        LocationRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        ProductRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        UsageRestrictionStatus:
          $ref: '#/components/schemas/ErrorStatus'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    DeleteBundleRequest:
      title: DeleteBundleRequest
      required:
      - BundleId
      type: object
      properties:
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
        ColCoId:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: GB000000123
        PayerId:
          type: integer
          description: >-
            Payer Id of the selected payer.

            Either PayerId or PayerNumber or both must be passed.

            Example: 123456
          format: int32
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Either AccountId or AccountNumber or both must be passed.

            Example: 123456
          format: int32
        AccountNumber:
          type: string
          description: "Account Number of the customer. \r\nEither AccountId or AccountNumber or both must be passed.\r\nExample: GB000000123"
        BundleId:
          type: string
          description: >-
            Identifier of the card bundle in Gateway.

            Mandatory
    DeleteBundleResponse:
      title: DeleteBundleResponse
      type: object
      properties:
        RequestId:
          type: string
          description: API Request Id
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    SummaryofbundlerRequest:
      title: SummaryofbundlerRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id  of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional if Account Number is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if Account Id is passed else Mandatory

            Example: GB000000123
          nullable: true
        BundleId:
          type: array
          items:
            type: string
          description: >-
            List of Bundle Id associated with account

            Optional.

            When not present all the bundles in the given account will be returned in the response.
    SummaryofbundleResponse:
      title: SummaryofbundleResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        PayerId:
          type: integer
          description: >-
            Payer Id of the bundles and cards.

            Example: 123456
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number of the bundles and cards.

            Example: GB000000123
        AccountId:
          type: integer
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the bundle.

            Example: GB000000123
        CountOfCardsNotInBundle:
          type: integer
          description: Count of cards that are not part of the bundle in a given account.
          format: int32
        CardBundles:
          $ref: '#/components/schemas/CardBundle'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    CardBundle:
      title: CardBundle
      type: object
      properties:
        BundleId:
          type: string
          description: Unique identifier for the Card Bundle
        ExternalBundleId:
          type: string
          description: External system allocated Card Bundle identifier for Card Bundle.
        Description:
          type: string
          description: DescriptionCard Bundle Description.
        TotalCards:
          type: integer
          description: No of Card PAN added to the card bundle.
          format: int32
    AccountRestrictionRequest:
      title: AccountRestrictionRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
          nullable: true
        AccountId:
          type: integer
          description: "Account ID of the customer on which the restrictions will be applied.\r\nOptional if AccountNumber is passed, else Mandatory. \r\nExample: 123456"
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer on which the restrictions will be applied.

            Optional if AccountId is passed, else Mandatory.

            Example: GB000000123
          nullable: true
        ResetUsageRestrictions:
          type: boolean
          description: >-
            True/False.

            If true, the usage restrictions applied on the account will be removed.

            Optional

            Default: False
          nullable: true
        UsageRestrictions: {}
    AccountRestrictionResponse:
      title: AccountRestrictionResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        AccountId:
          type: integer
          description: >-
            Account Id on which restriction is applied.

            Example: 123456
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number on which restriction is applied.

            Example: GB000000123
        UsageRestrictionStatus:
          type: string
          description: Status of the card usage restriction submitted to Gateway. Based on the response from Gateway value will be set as either “Success” or “Failed”.
        UsageRestrictionDescription:
          type: string
          description: Response for the usage restriction in case of an error. This field will have a value only when “UsageRestrictionStatus” is “Failed”.
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    SearchAccountLimitRequest:
      title: SearchAccountLimitRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:"
          format: int32
          nullable: true
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
          nullable: true
        AccountId:
          type: integer
          description: >-
            Account ID of the customer.

            Optional if AccountNumber is passed else Mandatory

            Example: 123456
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if AccountId is passed else Mandatory

            Example: GB000000123
          nullable: true
    SearchAccountLimitResponse:
      title: SearchAccountLimitResponse
      type: object
      properties:
        RequestId:
          type: string
          description: Request Id of the API call
          nullable: true
          example: 2ace3991-5d03-4a68-ac68-ca9119b25101
        AccountId:
          type: integer
          description: Account ID of the customer.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number

            Example: GB99215176
        ReferenceProduct:
          type: string
          description: >-
            3 digit Shell global fuel product code, if already set up.

            Example: 021
        RestrictionCondition:
          type: string
          description: >-
            The restriction condition code.

            Example: DECLINE_ALERT
        VelocityLimits:
          type: array
          items:
            $ref: '#/components/schemas/AccountVelocityLimit'
          description: ''
        Error:
          $ref: '#/components/schemas/ErrorStatus'
    AccountVelocityLimit:
      title: AccountVelocityLimit
      type: object
      properties:
        Type:
          type: string
          description: >-
            Type of velocity (COUNT type is not present for limits of PERTRX period

            Possible Values: VALUE, VOLUME, COUNT
        Period:
          type: string
          description: >-
            Duration of the velocity or threshold alert.

            Possible Values: DAILY, WEEKLY, MONTHLY, ANNUAL, LIFETIME, PERTRX
        Limit:
          type: number
          description: >-
            The limit associated with this velocity with the correct number of digits after the decimal point according to the minor denomination of the currency of the card issuer.

            Example: 1500.55
        Accumulation:
          type: number
          description: >-
            The transaction accumulation during the current period with the correct number of digits after the decimal point according to the minor denomination of the currency of the card issuer (except for COUNT type velocity). Not present for PERTRX period.

            Example: 1100.55
        Balance:
          type: number
          description: >-
            The remaining/available balance at this point in time with the correct number of digits after the decimal point according to the minor denomination of the currency of the card issuer (except for COUNT type velocity). Not present for PERTRX period.

            Example: 400.55
        Override:
          type: boolean
          description: >-
            Indicate if the limit is overridden or default. (false for default).

            Example: false
        ProductGroup:
          type: string
          description: >-
            The reference group name for product differentiated velocities. This field cannot be used with Volume type velocity.

            Example: RoadSvc

            This is an optional output field.
        Threshold:
          type: number
          description: >-
            The limit to trigger an alert if the balance after a transaction reaches it or below. 0 indicates no alerts will be sent. Not present if not set (issuer value threshold limit applies if available). Not present for COUNT type velocity.

            Example: 50.55

            This is an optional output field.
    BudleDetailsRequest:
      title: BudleDetailsRequest
      type: object
      properties:
        ColCoId:
          type: integer
          description: "Collecting Company Id  of the selected payer. \r\nOptional if ColCoCode is passed else Mandatory.\r\nExample:\r\n1 for Philippines\r\n5 for UK"
          format: int32
        ColCoCode:
          type: integer
          description: "Collecting Company Code (Shell Code) of the selected payer. \r\nMandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.\r\nExample:\r\n86 for Philippines\r\n5 for UK"
          format: int32
        PayerId:
          type: string
          description: >-
            Payer Id of the selected payer.

            Optional if PayerNumber is passed else Mandatory

            Example: 123456
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.

            Optional if PayerId is passed else Mandatory

            Example: GB000000123
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.

            Optional if Account Number is passed else Mandatory

            Example: 123456
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.

            Optional if Account Id is passed else Mandatory

            Example: GB000000123
        BundleId:
          type: string
          description: >-
            Bundle Id associated with account

            Mandatory.

            Example: 835662721
    BundleDetailsResponse:
      title: BundleDetailsResponse
      type: object
      properties:
        PayerId:
          type: integer
          description: >-
            Payer Id of the bundles and cards.

            Example: 123456
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number of the bundles and cards.

            Example: GB000000123
        AccountId:
          type: integer
          description: >-
            Account ID of the bundle.

            Example: 123456
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the bundle.

            Example: GB000000123
        BundleId:
          type: string
          description: unique identifier for the Card Bundle
        ExternalBundleId:
          type: string
          description: External system allocated Card Bundle identifier for Card Bundle.
        Description:
          type: string
          description: Card Bundle Description.
        Pans:
          type: array
          items:
            type: string
          description: List of Card Pans added to the card bundle.
        RestrictionCurrencyCode:
          type: string
          description: >-
            ISO currency code of the country.

            Example: GBP
        RestrictionCurrencySymbol:
          type: string
          description: >-
            Currency symbol of the country.

            Example: £, $
        Restrictions:
          $ref: '#/components/schemas/BundledRestrictionsList'
        Error:
          $ref: '#/components/schemas/ErrorStatus'
        RequestId:
          type: string
          description: API Request Id
    BundledRestrictionsList:
      title: BundledRestrictionsList
      type: object
      properties:
        UsageRestrictions: {}
        DayTimeRestrictions:
          $ref: '#/components/schemas/DayTimeRestrictions'
        ProductRestrictions:
          $ref: '#/components/schemas/BundledDetailsProductList'
        LocationRestrictions:
          $ref: '#/components/schemas/LocationRestriction'
    BundledDetailsProductList:
      title: BundledDetailsProductList
      type: object
      properties:
        PurchaseCategoryId:
          type: integer
          description: >-
            Purchase category Id

            Example: 123, 124, etc.,
          format: int32
        PurchaseCategoryCode:
          type: string
          description: "Purchase category name.\r\nExample: \r\n0 - All Fuels (without VP) and Lubricants\r\n1 - FuelSave only\r\n2 - FuelSave and Lubricants\r\n3 - No Restrictions"
        Products:
          type: array
          items:
            type: string
          description: >-
            An array of 3-digit global product codes.

            Example: [ "033", "021", "023" ]
        ProductGroups:
          type: array
          items:
            type: string
          description: >-
            An array of product group ids.

            Example: [ "670246404", "40557126" ]
        FuelSetId:
          type: string
          description: Fuel set id that is allowed to be purchased with the card
        FuelSetName:
          type: string
          description: Fuel set name that is allowed to be purchased with the card
        NonFuelSets:
          type: string
          description: Non-Fuel set name that is allowed to be purchased with the card
    CardManagementV1CancelRequest:
      title: CardManagementV1CancelRequest
      required:
      - Cards
      type: object
      properties:
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCard'
          description: "List of CancelCardRequest entity. \r\nEach card in the list will be Cancelled. \r\nThe details of the entity are given below."
        ReasonId:
          type: integer
          description: >-
            Reason id for cancelling the card.<br />

            Optional if ReasonText is passed, else mandatory<br />

            When passed, the reason Id will be validated with the allowed reason id’s configured for the card type of the card.<br />

            If the reason Id is not allowed, then it will be included on the error cards response.



            Possible values:

            1 (Lost)

            2 (Stolen)

            3 (Card no longer required)
          format: int32
          nullable: true
        ReasonText:
          type: string
          description: "Reason text for cancelling the card.<br />\r\nOptional if ReasonId is passed, else mandatory<br />\r\nWhen Reason Id is not known to the client, the reason text can be passed.<br />\r\nWhen Reason Text is passed and the Target Status is either Block or Damaged, the text will be validated with the allowed list of values configured for the card type of the card.\r\nIf the text is not allowed, then it will be included on the error cards response.\r\nHowever, if the Target status is Temporary block or Unblock then the text will be submitted \r\n\r\nPossible Values:\r\n1) Lost\r\n2) Stolen\r\n3) Card no longer required"
          nullable: true
    CardManagementV1OrdercardRequest:
      title: CardManagementV1OrdercardRequest
      type: object
      properties:
        CardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetail'
          description: List of CardOrder entity. The fields in this entity are described below.
    CardManagementV1PinreminderRequest:
      title: CardManagementV1PinreminderRequest
      type: object
      properties:
        AccountId:
          type: integer
          description: >-
            Account Id of the customer.<br />

            Optional if AccountNumber is passed, else Mandatory.<br />

            This input is a search criterion, if given.
          format: int32
        AccountNumber:
          type: string
          description: >-
            Account Number of the customer.<br />

            Optional if AccountId is passed, else Mandatory.<br />

            This input is a search criterion, if given.
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. <br />

            It is optional for other countries if ColCoID is provided.
          format: int32
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id of the selected payer<br />

            Optional if ColCoCode is passed else Mandatory.
          format: int32
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory
          format: int32
        PayerNumber:
          type: string
          description: >-
            Payer Number (Ex: GB000000123) of the selected payer.<br />

            Optional if PayerId is passed else Mandatory
        PINReminderCardDetails:
          type: array
          items:
            $ref: '#/components/schemas/PINReminderCardDetails'
          description: List of PINReminderCardDetails entity. The fields of this entity are described below.
    CardManagementV1UpdatestatusRequest:
      title: CardManagementV1UpdatestatusRequest
      required:
      - Cards
      - TargetStatus
      type: object
      properties:
        Cards:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCard'
          description: List of UpdateCardRequest entity. Each card in the list will be updated to the given target status. The details of the entity are given below.
        ReasonId:
          type: integer
          description: >-
            Reason id for updating the card status.<br />

            Optional<br />

            Either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’. Else ignored.<br />

            Possible values:<br />

            -Lost <br />

            -Stolen <br />

            -Card no longer required<br />

            When passed, the reason Id will be validated with the allowed reason ids configured for the card type of the card.<br />

            . If the given reason Id is not allowed for certain card types, then the request will be rejected as invalid ResonId.
          format: int32
          nullable: true
        ReasonText:
          type: string
          description: >-
            Reason text for updating the card status.<br />

            Optional Either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’. Else ignored.<br />

            Possible values:<br />

            -Lost <br />

            -Stolen <br />

            -Card no longer required <br />

             Optional – However, either Reason ID or Text is madatory when TargetStatus is ‘Block’ or ‘Damaged’.<br />

             When Reason Text is passed and the Target Status is either Block or Damaged, the text will be validated with the allowed list of values configured for the card type of the card.<br />

             If the text is not allowed, request will be rejected as invaid ResonText.<br />

             Note:<br />

             Customer blocked’ will be used as the reason for ‘Temporary Block’.
          nullable: true
        TargetStatus:
          type: string
          description: >-
            The list of cards passed in Cards parameter will be updated to this status.<br />

            Mandatory<br />

            Allowed values:<br />

            -TemporaryBlock<br />

            -Unblock<br />

            -Block<br />

            -Damaged<br />
    CardContact:
      title: CardContact
      required:
      - DeliveryContactName
      - DeliveryCompanyName
      - DeliveryAddressLine1
      - DeliveryZipCode
      - DeliveryCity
      - DeliveryCountry
      type: object
      properties:
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person <br />

            Optional

            Max field length: 10
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory  <br />

            Max field length: 50
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory  <br />

            Max field length: 50
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory<br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory  <br />

            Max field length: 10  <br />

            Optional
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory  <br />

            Max field length: 40
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />

            When region is passed
          nullable: true
        DeliveryCountry:
          type: string
          description: The ISO code of the country.<br />
          nullable: true
        PhoneNumber:
          maxLength: 20
          type: string
          description: >-
            Phone number for courier delivery.<br />

            Optional.<br />

            Max field length: 20
          nullable: true
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for courier delivery.<br />

            Optional.<br />

            Max field length: 90 <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SaveForCardReissue:
          type: boolean
          description: >-
            If this is specified, the contact address will be saved in cards platform for card reissue processing.<br />

            Optional
    CardDeliveryAddress:
      title: CardDeliveryAddress
      required:
      - CompanyName
      - AddressId
      - AddressLine1
      - ZipCode
      - CountryId
      - CountryISOCode
      - Country
      type: object
      properties:
        ContactForeName:
          type: string
          description: Fore name of the contact person
          example: ROBERT
        ContactMiddleName:
          type: string
          description: Middle name of the contact person
          example: M
        ContactLastName:
          type: string
          description: Last name of the contact person
          example: Langdon
        ContactTitle:
          maxLength: 10
          type: string
          description: Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: Mr.
        CompanyName:
          type: string
          description: Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: PARKLEY Philippines
        AddressId:
          type: integer
          description: Address Id in cards platform.
          format: int32
          example: 1768
        AddressLine1:
          minLength: 1
          type: string
          description: Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: No 345, 1st cross,
        AddressLine2:
          type: string
          description: Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: 10th avenue
        AddressLine3:
          type: string
          description: Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: makati city
        ZipCode:
          maxLength: 10
          type: string
          description: ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: '1630'
        City:
          maxLength: 40
          type: string
          description: City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: manila
        RegionId:
          type: integer
          description: Region Id
          format: int32
          nullable: true
        Region:
          type: string
          description: Region Optional When region is passed, Shell Card Platform will look up for the region id for the given region.  If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: EU
        CountryId:
          type: integer
          description: Country Id in cards platform.
          format: int32
          example: 1
        CountryISOCode:
          type: string
          description: The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: PH
        Country:
          type: string
          description: Country name.
          example: Philippines
    CardSettings:
      title: CardSettings
      required:
      - CardDeliveryType
      type: object
      properties:
        SelfSelectedEncryptedPIN:
          maxLength: 256
          type: string
          description: >-
            The encrypted value of self-selected PIN.<br />

            Optional – When not provided, the PIN will be auto generated(if the card token type supports PIN) and delivered based on the given PIN delivery option.<br />

            Max Length: 256
          nullable: true
        SelfSelectedPINKeyID:
          maxLength: 30
          type: string
          description: >-
            KeyId of the PIN encrypted value.<br />

            Mandatory, if opted for self-selected PIN else optional.<br />

            Max Length: 30
          nullable: true
        SelfSelectedPINSessionKey:
          maxLength: 1024
          type: string
          description: >-
            Encoded message of the TCS form which is used for encrypting the PIN of this card.<br />

            The encode message forms are provided to clients by another API (“TCS”).<br />

            Instructions to encrypt the PIN is covered in the related API specifications document.<br />

            Mandatory –If opted for self-selected PIN else optional.

            Max Length: 1024
          nullable: true
        ValidateFleetId:
          type: boolean
          description: >-
            True/False.<br />

            Optional <br />

            Default: False<br />

            For cards ordered with Validate Fleet Id parameter set to true, CFGW will be notified to enable this validation for the card.<br />

            Note: When “FleetIdInputRequired” is not set on the card, validate fleet id will be considered false regardless of the value passed on this parameter.
        CardGroupId:
          type: integer
          description: >-
            Existing Card Group ID, under which the replacement card is to be created.<br />

            Pass “-1” if the replacement card should not be assigned to any card group.<br />

            Optional <br />

            If not provided, the replacement card will be created under the same card group as the current card.
          format: int32
          nullable: true
        CardDeliveryType:
          type: integer
          description: >-
            Card delivery type.<br />

            Mandatory <br />

            Allowed Value: <br />

            1.    Customer Address(Default) <br />

            2.    New Delivery Address <br />

            3.    Old Card Address
          format: int32
          nullable: true
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person. <br />

            Optional<br />

            Max field length: 10
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 50
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.

            Max field length: 50
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional<br />

            Max field length: 40
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 10
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true.<br />

            Max field length: 40
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />

            When region is passed
          nullable: true
        DeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mandatory - If CardDeliveryType  is 2 and OrderCardReplacement is passed as true
          nullable: true
        DeliveryCountryId:
          type: integer
          description: The countryId of gicen country.<br />
          format: int32
          nullable: true
        PhoneNumber:
          maxLength: 16
          type: string
          description: >-
            Phone number for to send SMS. <br />

            Optional<br />

            Max field length: 20
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90
          nullable: true
        PINDeliveryAddressType:
          type: integer
          description: >-
            PIN delivery address type selection.<br />

            Optional<br />

            Allowed Values:<br />

            1.    Customer Address(Default)<br />

            2.    Card Address<br />

            3.    New Delivery Address
          format: int32
          nullable: true
        PINAdviceType:
          type: integer
          description: >-
            PIN delivery method.<br />

            Mandatory when OrderReplacement Is true.<br />

            Allowed Values:<br />

            1.    Paper<br />

            2.    Email<br />

            3.    SMS<br />

            4.    None
          format: int32
          nullable: true
        PINDeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person.<br />

            Optional <br />

            Max field length: 10
          nullable: true
        PINDeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 50
          nullable: true
        PINDeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 50
          nullable: true
        PINDeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1.<br />

            Mandatory - If PINAdviceType is paper else optional.<br />

            Max field length: 40
          nullable: true
        PINDeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2.<br />

            Optional <br />

            Max field length: 40
          nullable: true
        PINDeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3.<br />

            Optional <br />

            Max field length: 40
          nullable: true
        PINDeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code.<br />

            Mandatory - if PINAdviceType is paper else optional. <br />

            Max field length: 10
          nullable: true
        PINDeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City.<br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 40
          nullable: true
        PINDeliveryRegionId:
          type: integer
          description: >-
            Region Id.<br />

            Optional
          format: int32
          nullable: true
        PINDeliveryRegion:
          type: string
          description: >-
            Region.<br />

            When region is passed
          nullable: true
        PINDeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mappings for ISO code <br />

            Mandatory if PINAdviceType is paper else optional.
          nullable: true
        PINDeliveryCountryId:
          type: integer
          description: >-
            The countryId of the country.<br />

            Mappings for ISO code<br />

            This is not an input parameter.
          format: int32
          nullable: true
        PINPhoneNumber:
          maxLength: 16
          type: string
          description: >-
            Phone number for to send SMS of the PIN in case PINAdviceType is SMS.<br />

            Mandatory if PINAdviceType is SMS else optional.<br />

            Max field length: 20
          nullable: true
        PINEmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email of the PIN in case PINAdviceType is Email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90
          nullable: true
        SaveForPINReminder:
          type: boolean
          description: "The given address will be used for sending PIN reminders in future when requested.<br />\r\nPIN Advice type should be Paper \r\nOptional"
        SaveForCardReissue:
          type: boolean
          description: >-
            If this is specified, the contact address will be saved in cards platform for card reissue processing.<br />

            Optional
        ExpiryDate:
          maxLength: 4
          type: string
          description: "Expiry Date for newly created card to be update in cards plot form.<br />\r\nOptional <br />\r\nFormat: MMyy <br />\r\nEg:1221 <br />\r\nIf not apply the default Expiry Date.<br />\r\nNote:<br />\r\nThere is a limit to the ExpiryDate which the user can choose for the Card. \r\nIf the user chooses a later ExpiryDate than the allowed value for the CardType of the OU, \r\nthe background service logs the respective error code and description"
          nullable: true
    DeliveryAddressUpdateReferences2:
      title: DeliveryAddressUpdateReferences2
      type: object
      properties:
        CardId:
          type: integer
          description: CardId
          format: int32
          example: 12345
        CardPAN:
          type: string
          description: PAN of the card.
          example: '7002051006629889654'
        AccountId:
          type: integer
          description: AccountId
          format: int32
          example: 12356
        AccountNumber:
          type: string
          description: Account number
          example: GB000000124
        ReferenceId:
          type: integer
          description: Individual delivery address update reference number for the delivery address update request.
          format: int32
          example: 573567
        ErrorInfo:
          type: string
          description: Individual error information for the delivery address update request.
          example: 'null'
    Detail:
      title: Detail
      type: object
      properties:
        errorcode:
          type: string
          description: Error code
    Fault:
      title: Fault
      type: object
      properties:
        faultstring:
          type: string
          description: Error Description
        detail:
          $ref: '#/components/schemas/Detail'
    Filters:
      title: Filters
      required:
      - CardStatus
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          nullable: true
        CardGroupId:
          type: integer
          description: >-
            Card group id. <br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            When -1 is passed, those cards that does not belong to any card group will be returned.
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: >-
            Card group name.<br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            If CardGroupId is provided then this search criterion will be ignored, else, those cards that have the card group name completely matching with the entered value will be returned.
          nullable: true
        CardSegment:
          type: string
          description: >-
            Market segment to which card belongs to.<br />

            Optional.<br />

            Allowed values<br />

            • CRT<br />

            • Fleet
          nullable: true
        CardStatus:
          type: array
          items:
            type: string
          description: >-
            Status of the card.<br />

            Mandatory.<br />

            Multiple statuses are allowed to be included in the search criteria.<br />

            CardStatus filter accepts either of the two values for each status as described below. However, the output field “StatusDescription” is aligned with second value highlighted in italics.<br />

            Below are the possible allowed statuses: <br />

            • ACTIVE or Active – Cards at status Active if the IncludeIntermediateStatus flag is true: Active (Block in progress), Active (Cancel in progress), Active (Marked as damaged)), New (Cancel in progress).<br />

            • ON_ORDER or New – Cards at status New<br />

            • EXPIRED or Expired – Cards at status Expired<br />

            • BLOCKED or Blocked Card – Cards at status Block (The result will include all cards having the following intermediate status, if the IncludeIntermediateStatus flag is true: Blocked card (Unblock in progress))<br />

            • TEMP_BLOCKED_CUSTOMER or Temporary Block(Customer) – Cards at status Temporary Blocked By Customer<br />

            • TEMP_BLOCKED_SHELL or Temporary Block (Shell) – Cards at Status Temporary Blocked by Shell<br />

            • CANCELLED or Cancelled – Cards at status Cancelled<br />

            • PENDING_RENEWAL or Pending Renewal - Cards that are in renewal process<br />

            • REPLACED or Replaced – Cards at Status Replaced<br />

            • FRAUD or Fraud – Cards at Status FRAUD<br />

            • ALL
        CardTypeCode:
          type: string
          description: >-
            ISO code of the card i.e. first 7 digits of the PAN<br />

            Optional.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional If ColCo Id or ColCoCountryCode is passed else Mandatory<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: >-
            The 2 character ISO Code for the customer and card owning country.<br />

            Optional If ColCoId or ColCoCode is passed else Mandatory.<br />
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id  of the selected payer. <br />

            Optional If ColCoCode or ColCoCountryCode is passed else Mandatory <br />
          format: int32
          nullable: true
        Coverage:
          type: string
          description: >-
            Cards allowed to used nationally/internationally.<br />

            Optional.<br />

            Allowed values<br />

            -National<br />

            -International
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation Date<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        DriverName:
          type: array
          items:
            type: string
          description: >-
            Driver Name embossed on the card<br />

            Optional<br />

            Up to 10 driver names could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each driver name else not considered.<br />

            Those cards will be returned when part of the driver name matches with any of the string passed in the list.<br />

            Max Length for each Driver name: 50
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card<br />

            Optional<br />

            Format: yyyyMMdd<br />
          nullable: true
        ExcludeBundleId:
          type: string
          description: >-
            Bundle Id for the Card, which needs to be excluded in the response.<br />

            Optional
          nullable: true
        ExcludeCancelledCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Cancelled Status in Cards Platform<br />
        ExcludeCardGroupId:
          type: integer
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified<br />
          format: int32
          nullable: true
        ExcludeCardGroupName:
          type: string
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified<br />
          nullable: true
        ExcludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be excluded in the response. <br />

            Details of the SerachCard entity are given below.<br />
        ExcludeFraudCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Fraud Status in Cards Platform<br />
        ExcludePendingRenewalCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Pending Renewal Status in Cards Platform
        ExcludeReplacedCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Replaced Status in Cards Platform<br />
        ExpiringInDays:
          type: integer
          description: >-
            Cards active and expiring in given number of days.<br />

            Optional<br />

            Note: When a value is passed in this parameter, only active cards will be considered while searching.<br />
          format: int32
          nullable: true
        ExpiryMonth:
          type: string
          description: >-
            Month in which the card is expiring.<br />

            Optional.<br />

            Format: MMYYYY<br />
          nullable: true
        IncludeBundleDetails:
          type: boolean
          description: >-
            Default value is False,<br />

            When the value is True, API will return bundle Id associated with card in response.<br />
        IncludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be included in the response.<br />

            Details of the SerachCard entity are given below.<br />
        IncludeIntermediateStatus:
          type: boolean
          description: >-
            A flag which indicates if the response can contain intermediate statuses.<br />

            Optional<br />

            Default: false
        IssuedAfter:
          type: string
          description: >-
            If provided, only list cards issued after the given date<br />

            Optional<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        Network:
          type: string
          description: >-
            Cards allowed to be used in site.<br />

            Optional.<br />

            Allowed values<br />

            -ShellSitesOnly<br />

            -PartnersSitesIncluded
          nullable: true
        PANEndsWith:
          type: string
          description: >-
            Last digits of the PAN number<br />

            Minimum 4 last digits of the card should be sent for this field to be considered as part of the search criteria.<br />

            Optional<br />

            Max Length: 50
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory<br />

            Example: 123456
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional if PayerId is passed else Mandatory<br />
          nullable: true
        PurchaseCategoryCode:
          type: string
          description: >-
            Purchase category code of the card.<br />

            Optional.
          nullable: true
        SortOrder:
          type: string
          description: >-
            Possible options are:<br />

            1.ExpiringDateAscending<br />

            2.ExpiringDateDescending<br />

            3.DriverNameAscending(If Driver Name is null then VRN value will be considered)<br />

            4.DriverNameDescending(If Driver Name is null then VRN value will be considered)<br />

            5.VRNAscending(If VRN is null then Driver Name value will be considered)<br />

            6.VRNDescending(If VRN  is null then Driver Name value will be considered)<br />

            7.LastUsedDateAscending<br />

            8.LastUsedDateDescending<br />

            9.IssueDateAscending<br />

            10.IssueDateDescending<br />

            11.PurchaseCategoryCodeAscending<br />

            12.PurchaseCategoryCodeDescending<br />

            13.CardSegmentAscending (CRT will appear first)<br />

            14.CardSegmentDescending (Fleet will appear first)<br />

            Optional
          nullable: true
        IncludeScheduledCardBlocks:
          type: boolean
          description: >-
            A flag which indicates if the response can contain scheduled card blocks details<br />

            Optional<br />

            Default: false
        TokenTypeID:
          type: integer
          description: >-
            Token Type ID for the Card<br />

            Optional
          format: int32
          nullable: true
        TokenTypeName:
          type: string
          description: >-
            Token Type name for the Card<br />

            Optional
          nullable: true
        VehicleRegistrationNumber:
          type: array
          items:
            type: string
          description: >-
            Vehicle Registration embossed on the card<br />

            Optional<br />

            Up to 10 vehicle registration numbers could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each VRN else not considered<br />

            Those cards will be returned when part of the VRN matches with any of the string passed in the list.<br />

            Max Length for each VRN: 50
        ExcludeOldCards:
          type: boolean
          description: >-
            Default Value: False<br />

            When this field is set to True, cards with below status 2 years (configurable) ago and earlier are excluded from the result<br />

            -Blocked Card<br />

            -Expired<br />

            -Cancelled<br />

            -Suspended<br />

            -Blocked<br />

            -Expired and Cancelled<br />

            -Replaced<br />

            -Replaced By<br />

            -Closed<br />

            -Fraud<br />
        ExcludeExpiringCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are expiring <br />

            within 120 (i.e. Configured) days, if the status of the card is 1 or 41 or 42 in Cards platform.
        ClientReferenceId:
          type: string
          description: Customer reference number of the card.
          nullable: true
        ReissueSetting:
          type: string
          description: >-
            Default Value: All<br />

            Optional<br />

            This option is used to filter the list of cards with ‘ReissueSetting’.<br />

            If ‘True’, the API will return cards with ReIssueSetting value is true.<br />

            If ‘False’, the API will return cards with ReIsssueSetting value is false.<br />

            If ‘ALL’, API will return cards with ReIssueSetting value True &amp; False both.<br />

            Allowed Values:<br />

            1.    All<br />

            2.    True<br />

            3.    False
          nullable: true
        RequestId:
          type: string
    Filters1:
      title: Filters1
      required:
      - CardStatus
      - RequestId
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional.<br/> This input is a search criterion, if given.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional If ColCo Id or ColCoCountryCode is passed else Mandatory.<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: >-
            The 2 character ISO Code for the customer and card owning country.<br />

            Optional If ColCoId or ColCoCode is passed else Mandatory.<br />
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id (in ) of the selected payer.<br />

            Optional If ColCo Codeor ColCoCountryCode is passed else Mandatory <br />
          format: int32
          nullable: true
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer ) of the selected payer.<br />

            Optional if PayerNumber is passed else Mandatory
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional if PayerId is passed else Mandatory
          nullable: true
        CardGroupId:
          type: integer
          description: >-
            Card group id.<br />

            Optional. <br />

            This input is a search criterion, if given.<br />

            When -1 is passed, those cards that does not belong to any card group will be returned.
          format: int32
          nullable: true
        CardGroupName:
          type: string
          description: >-
            Card group name.<br />

            Optional.<br />

            This input is a search criterion, if given.<br />

            If CardGroupId is provided then this search criterion will be ignored, else, those cards that have the card group name completely matching with the entered value will be returned
          nullable: true
        CardStatus:
          type: array
          items:
            type: string
          description: >-
            Status of the card.<br />

            Mandatory.<br />

            Multiple statuses are allowed to be included in the search criteria.<br />

            CardStatus filter accepts either of the two values for each status as described below. However, the output field “StatusDescription” is aligned with second value highlighted in italics.<br />

            Below are the possible allowed statuses: <br />

            • ACTIVE or Active – Cards at status Active (The result will include all the cards having the following intermediate statuses as defined s, if the IncludeIntermediateStatus flag is true: Active (Block in progress), Active (Cancel in progress), Active (Marked as damaged)), New (Cancel in progress).<br />

            • ON_ORDER or New – Cards at status New <br />

            • EXPIRED or Expired – Cards at status Expired<br />

            • BLOCKED or Blocked Card – Cards at status Block (The result will include all cards having the following intermediate status as defined, if the IncludeIntermediateStatus flag is true: Blocked card (Unblock in progress))<br />

            • TEMP_BLOCKED_CUSTOMER or Temporary Block(Customer) – Cards at status Temporary Blocked By Customer<br />

            • TEMP_BLOCKED_SHELL or Temporary Block (Shell) – Cards at Status Temporary Blocked by Shell<br />

            • CANCELLED or Cancelled – Cards at status Cancelled<br />

            • PENDING_RENEWAL or Pending Renewal - Cards that are in renewal process<br />

            • REPLACED or Replaced – Cards at Status Replaced<br />

            • FRAUD or Fraud – Cards at Status FRAUD<br />

            • ALL
          nullable: true
        ExpiringInDays:
          type: integer
          description: >-
            Cards active and expiring in given number of days.<br />

            Optional<br />

            Note: When a value is passed in this parameter, only active cards will be considered while searching.
          format: int32
          nullable: true
        IssuedAfter:
          type: string
          description: >-
            If provided, only list cards issued after the given date<br />

            Optional<br />

            Format: yyyyMMdd<br />

            Note: Clients to convert this to appropriate DateTime type.
          nullable: true
        PANEndsWith:
          type: string
          description: >-
            Last digits of the PAN number<br />

            Minimum 4 last digits of the card should be sent for this field to be considered as part of the search criteria.<br />

            Optional<br />

            Max Length: 50
          nullable: true
        DriverName:
          type: array
          items:
            type: string
          description: >-
            Driver Name embossed on the card<br />

            Optional<br />

            Up to 10 driver names could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each driver name else not considered.<br />

            Those cards will be returned when part of the driver name matches with any of the string passed in the list.<br />

            Max Length for each Driver name: 50
        VehicleRegistrationNumber:
          type: array
          items:
            type: string
          description: >-
            Vehicle Registration embossed on the card<br />

            Optional<br />

            Up to 10 vehicle registration numbers could be passed in the parameter.<br />

            Minimum of 4 characters should be provided for each VRN else not considered<br />

            Those cards will be returned when part of the VRN matches with any of the string passed in the list.<br />

            Max Length for each VRN: 50
        IncludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be included in the response.<br />

            Details of the SerachCard entity are given below.
        ExcludeCards:
          type: array
          items:
            $ref: '#/components/schemas/SearchCard'
          description: >-
            List of SearchCard entity i.e., Card Id or PAN, which needs to be excluded in the response. <br />

            Details of the SerachCard entity are given below.
        ExcludeBundleId:
          type: string
          description: >-
            Bundle Id for the Card, which needs to be excluded in the response.<br />

            Optional
          nullable: true
        CardSegment:
          type: string
          description: >-
            Market segment to which card belongs to.<br />

            Optional.<br />

            Allowed values<br />

            • CRT<br />

            • Fleet
          nullable: true
        PurchaseCategoryCode:
          type: string
          description: >-
            Purchase category code of the card.<br />

            Optional.
          nullable: true
        CardTypeCode:
          type: string
          description: >-
            ISO code of the card i.e. first 7 digits of the PAN<br />

            Optional.
          nullable: true
        ExcludePendingRenewalCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Pending Renewal Status in Cards Platform
        ExcludeCancelledCards:
          type: boolean
          description: >-
            Default value is True.<br />

            When true, the API will not return cards that are at Cancelled Status in Cards Platform
        ExcludeReplacedCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Replaced Status in Cards Platform
        ExcludeFraudCards:
          type: boolean
          description: >-
            Default value is False.<br />

            When true, the API will not return cards that are at Fraud Status in Cards Platform
        ExcludeCardGroupId:
          type: integer
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified
          format: int32
          nullable: true
        ExcludeCardGroupName:
          type: string
          description: >-
            Optional<br />

            When passed, the API will not return cards that are currently in the Card Group specified
          nullable: true
        CreationDate:
          type: string
          description: >-
            Card Creation Date<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        EffectiveDate:
          type: string
          description: >-
            Effective date for the Card<br />

            Optional<br />

            Format: yyyyMMdd
          nullable: true
        Network:
          type: string
          description: >-
            Cards allowed to be used in site.<br />

            Optional.<br />

            Allowed values<br />

            • ShellSitesOnly<br />

            • PartnersSitesIncluded<br />
          nullable: true
        Coverage:
          type: string
          description: >-
            Cards allowed to used nationally/internationally.<br />

            Optional.<br />

            Allowed values<br />

             -National<br />

             -International
          nullable: true
        ExpiryMonth:
          type: string
          description: >-
            Month in which the card is expiring.<br />

            Optional.<br />

            Format: MMYYYY
          nullable: true
        ExcludeOldCards:
          type: boolean
          description: >-
            Default Value: False<br />

            When this field is set to True, cards with below status 2 years (configurable) ago and earlier are excluded from the result<br />

             -Blocked Card<br />

             -Expired<br />

             -Cancelled<br />

             -Suspended<br />

             -Blocked<br />

             -Expired and Cancelled<br />

             -Replaced<br />

             -Replaced By<br />

             -Closed<br />

             -Fraud<br />
        ReissueSetting:
          type: string
          description: >-
            Default Value: All<br />

            Optional<br />

            This option is used to filter the list of cards with ‘ReissueSetting’.<br />

            If ‘True’, the API will return cards with ReIssueSetting value is true.<br />

            If ‘False’, the API will return cards with ReIsssueSetting value is false.<br />

            If ‘ALL’, API will return cards with ReIssueSetting value True &amp; False both.<br />

            Allowed Values:<br />

            1.    All<br />

            2.    True<br />

            3.    False
          nullable: true
        RequestId:
          type: string
          nullable: true
    Filters2:
      title: Filters2
      type: object
      properties:
        AccountId:
          type: integer
          description: Account ID of the customer.<br/> Optional if AccountNumber is passed, else mandatory. <br/> This input is a search criterion, if given.
          format: int32
          nullable: true
        AccountNumber:
          type: string
          description: Account Number of the customer.<br/> Optional if AccountId is passed, else mandatory.<br/> This input is a search criterion, if given.
          nullable: true
        ColCoCode:
          type: integer
          description: >-
            Collecting Company Code (Shell Code) of the selected payer. <br />

            Optional – when ‘ReferenceNumber’ is provided.<br />
          format: int32
          nullable: true
        ColCoId:
          type: integer
          description: >-
            Collecting Company Id (in ) of the selected payer. <br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘ColCoId’ or ‘ColCoCode’ is mandatory.<br />
          format: int32
          nullable: true
        ColCoCountryCode:
          type: string
          description: ISO 3166 Alpha-2 Country Code for the customer and card owning country.
          nullable: true
          example: PH
        PayerId:
          type: integer
          description: >-
            Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.<br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘PayerId’ or ‘PayerNumber’ is mandatory.
          format: int32
          nullable: true
        PayerNumber:
          type: string
          description: >-
            Payer Number of the selected payer.<br />

            Optional – when ‘ReferenceNumber’ is provided. Else, either ‘PayerId’ or ‘PayerNumber’ is mandatory.
          nullable: true
        ReferenceNumber:
          type: integer
          description: >-
            Reference number of the Card Order/ Bulk Card Order/ Order Card Request.<br />

            Mandatory when ColCo and Payer fields are not provided. Else, optional.
          format: int32
        ReferenceType:
          $ref: '#/components/schemas/OrderCardEnquiryReqReferenceType'
        FromDate:
          type: string
          description: >-
            Card Orders from Date/Time.<br />

            Optional.<br />

            Value should be with in last 7 days<br />

            This field is ignored if ReferenceNumber is provided <br />

            This field is optional when not provided and ReferenceNumber is null or empty then the value should be set to D-7(Where D is current date)<br />

            Format: yyyyMMdd
          nullable: true
        ToDate:
          type: string
          description: >-
            Card Order to Date/Time<br />

            Optional<br />

            Value should be with in last 7 days<br />

            This field is ignored if ReferenceNumber is provided <br />

            This field is optional when not provided and ReferenceNumber is null or empty then the value should be set to current date<br />

            Format: yyyyMMdd
          nullable: true
        OrderRequestId:
          type: string
          description: Client provided Unique Id of the original Order Card request, the status of which is enquired by this API
          nullable: true
          example: ed557f02-c7d7-4c01-b3e5-11bf
    FinanceCurrency2:
      title: FinanceCurrency2
      type: object
      properties:
        CurrencyCode:
          type: string
          description: Currency ISO Code used for the Finance Widget.
          nullable: true
          example: EUR
        CurrencySymbol:
          type: string
          description: Currency Symbol
          nullable: true
          example: €
        Invoice_ExchangeRate:
          type: number
          description: Factor to be used for converting the amounts in invoice currency to finance widget currency. (If finance currency is same as invoice currency, then the value of this field will be “1” so that the value does not change)
          nullable: true
          example: 1
        CreditLimit_ExchangeRate:
          type: number
          description: Factor to be used for converting the amounts in credit limit currency to finance widget currency. (If finance currency is same as credit limit currency, then the value of this field will be “1” so that the value does not change)
          nullable: true
          example: 1
    FleetmanagementV1UserLoggedinuserRequest:
      title: FleetmanagementV1UserLoggedinuserRequest
      type: object
      properties:
        IncludePayerGroup:
          type: boolean
          description: True/False. The output will include the payer group information only when true is passed.
          default: false
          example: false
        IncludeEIDDetails:
          type: boolean
          description: True/False. The output will include the EID (Electronic Invoice data) information only when true is passed..
          default: false
          example: false
        RequestedAPIName:
          type: string
          description: >-
            Name of the API on which user access needs to be validated

            Optional.
          nullable: true
          example: Name of the API
        PayerId:
          type: integer
          description: >-
            Payer id of the customer.</br>

            Optional.</br>

            This input is a search criterion.</br>

            Note: If PayerId or PayerNumber is provided in the input, the given payer will be available in the output if the user has access to the given payer.
          format: int32
          nullable: true
          example: 123456
        PayerNumber:
          type: string
          description: >-
            PayerNumber of the customer.</br>

            Optional</br>

            This input is a search criterion.</br>

            Note: If Payerid or PayerNumber is provided in the input, the given payer will be available in the output if the user has access to the given payer.
          nullable: true
          example: GB00123456
    FleetmanagementV1UserLoggedinuser400Error1:
      title: FleetmanagementV1UserLoggedinuser400Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV1UserLoggedinuser401Error1:
      title: FleetmanagementV1UserLoggedinuser401Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV1UserLoggedinuser404Error1:
      title: FleetmanagementV1UserLoggedinuser404Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV1UserLoggedinuser500Error1:
      title: FleetmanagementV1UserLoggedinuser500Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV1CustomerPayers400Error1:
      title: FleetmanagementV1CustomerPayers400Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV1CustomerPayers404Error1:
      title: FleetmanagementV1CustomerPayers404Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV2RestrictionSearchcard401Error1:
      title: FleetmanagementV2RestrictionSearchcard401Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    FleetmanagementV2RestrictionSearchcard500Error1:
      title: FleetmanagementV2RestrictionSearchcard500Error1
      type: object
      properties:
        fault:
          $ref: '#/components/schemas/Fault'
    PINContact:
      title: PINContact
      type: object
      properties:
        DeliveryContactTitle:
          maxLength: 10
          type: string
          description: >-
            Title of the contact person <br />

            Optional
          nullable: true
        DeliveryContactName:
          maxLength: 50
          type: string
          description: >-
            Name of the contact person <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 50  <br />

            Optional
          nullable: true
        DeliveryCompanyName:
          maxLength: 50
          type: string
          description: >-
            Company name <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 50  <br />

            Optional
          nullable: true
        DeliveryAddressLine1:
          maxLength: 40
          type: string
          description: >-
            Address line 1 <br />

            Mandatory - if PINAdviceType is paper else optional.<br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine2:
          maxLength: 40
          type: string
          description: >-
            Address line 2 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryAddressLine3:
          maxLength: 40
          type: string
          description: >-
            Address line 3 <br />

            Optional <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryZipCode:
          maxLength: 10
          type: string
          description: >-
            ZIP code <br />

            Mandatory - if PINAdviceType is paper else optional. <br />

            Max field length: 10  <br />

            Optional
          nullable: true
        DeliveryCity:
          maxLength: 40
          type: string
          description: >-
            City  <br />

            Mandatory - If PINAdviceType is paper else optional. <br />

            Max field length: 40  <br />

            Optional
          nullable: true
        DeliveryRegionId:
          type: integer
          description: >-
            Region Id  <br />

            Optional
          format: int32
          nullable: true
        DeliveryRegion:
          type: string
          description: >-
            Region  <br />

            Optional<br />
          nullable: true
        DeliveryCountry:
          type: string
          description: >-
            The ISO code of the country.<br />

            Mandatory if PINAdviceType is paper else optional.
          nullable: true
        PhoneNumber:
          maxLength: 20
          type: string
          description: >-
            Phone number for to send SMS of the PIN in case PINAdviceType is SMS.<br />

            Mandatory if PINAdviceType is SMS else optional.<br />

            Max field length: 20
          nullable: true
        EmailAddress:
          maxLength: 90
          type: string
          description: >-
            Email address for to send email of the PIN in case PINAdviceType is Email.<br />

            Mandatory if PINAdviceType is email else optional.<br />

            Max field length: 90. <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SaveForPINReminder:
          type: boolean
          description: >-
            The given address will be used for sending PIN reminders in future when requested.<br />

            Only allowed for paper delivery<br />

            Optional
    PINDeliverTo:
      title: PINDeliverTo
      required:
      - CompanyName
      - AddressLine
      - ZipCode
      - City
      type: object
      properties:
        ContactName:
          type: string
          description: >-
            Contact Name

            Max Length: 50
          nullable: true
        ContactTitle:
          type: string
          description: >-
            Contact Title

            Max Length: 50
          nullable: true
        CompanyName:
          type: string
          description: >-
            Company Name for PIN delivery.

            Max Length: 50
        AddressLine:
          type: string
          description: >-
            Address Lines

            Max Length: 1024
        ZipCode:
          type: string
          description: >-
            Zip Code

            Max Length: 10
          nullable: true
        City:
          type: string
          description: >-
            City

            Max Length: 40
        RegionID:
          type: integer
          description: Region
          format: int32
          nullable: true
        CountryID:
          type: integer
          description: Country
          format: int32
          nullable: true
        PhoneNumber:
          type: string
          description: Cardholder phone number for PIN delivery.
          nullable: true
        EmailAddress:
          type: string
          description: >-
            Cardholder email address for PIN delivery

            Max Length : 90

            Example: xxxxxx@example.com <br/>Note:Based on the international standard that there can be Max Length 64 before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of 2)
          nullable: true
        SavePINReminder:
          type: boolean
          description: >-
            Save PIN Reminder

            If SavePINReminder is true, the contact address will be saved database for PIN reminder.

             <br/>Only allowed for PIN Advice paper delivery.
    PINDeliveryAddress:
      title: PINDeliveryAddress
      required:
      - CompanyName
      - AddressId
      - AddressLine1
      - ZipCode
      - CountryId
      - CountryISOCode
      - Country
      type: object
      properties:
        ContactForeName:
          type: string
          description: Fore name of the contact person
          nullable: true
          example: ROBERT
        ContactMiddleName:
          type: string
          description: Middle name of the contact person
          nullable: true
          example: M
        ContactLastName:
          type: string
          description: Last name of the contact person
          nullable: true
          example: Langdon
        ContactTitle:
          maxLength: 10
          type: string
          description: Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          nullable: true
          example: Mr.
        CompanyName:
          type: string
          description: Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: PARKLEY Philippines
        AddressId:
          type: integer
          description: Address Id in cards platform.
          format: int32
          example: 1768
        AddressLine1:
          minLength: 1
          type: string
          description: Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: No 345, 1st cross,
        AddressLine2:
          type: string
          description: Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: 10th avenue
        AddressLine3:
          type: string
          description: Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: makati city
        ZipCode:
          maxLength: 10
          type: string
          description: ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length- 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: '1630'
        City:
          maxLength: 40
          type: string
          description: City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details captured on card orders, this value will be cleared from the record after processing the request.
          example: manila
        RegionId:
          type: integer
          description: Region Id
          format: int32
          nullable: true
        Region:
          type: string
          description: Region Optional When region is passed, Shell Card Platform will look up for the region id for the given region.  If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: EU
        CountryId:
          type: integer
          description: Country Id in cards platform.
          format: int32
          example: 1
        CountryISOCode:
          type: string
          description: The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If the option to clear personal details is set in the Shell Card Platform, then this value will be cleared from the record after processing the request .
          example: PH
        Country:
          type: string
          description: Country name.
          example: Philippines
    UpdateCardRenewalAddress2:
      title: UpdateCardRenewalAddress2
      required:
      - ContactName
      - CompanyName
      - AddressLine
      - ZipCode
      - CountryID
      type: object
      properties:
        ContactName:
          type: string
          description: >-
            Contact name

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.



            Max Length: 50
          example: Jack
        ContactTitle:
          type: string
          description: >-
            Title

            Max Length: 50
          example: Mr
        CompanyName:
          type: string
          description: >-
            Company name.

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 50
          example: Travel Transport
        AddressLine:
          type: string
          description: >-
            Address line 1,2 and 3

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 128

            Note: -Each address line should be separated by “\r\n”.
          example: Elm Street 11
        ZipCode:
          type: string
          description: >-
            ZipCode

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 10
          example: 1023EA
        City:
          type: string
          description: >-
            City

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.

            Max Length: 40
          example: London
        RegionID:
          type: integer
          description: Region id of card.
          format: int32
          example: 2
        CountryID:
          type: integer
          description: >-
            Country ID

            Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The field is ignored otherwise.
          format: int32
          example: 8
        EmailAddress:
          type: string
          description: "Email Address\r\n\r\nMax Length: 90\r\nNote: -\r\nBased on the international standard that there can be \r\n•    Max Length 64 before the @ (the 'Local part’) =64(minimum of 1)\r\n•    Max Lenth after the (the domain) = 88 (Minimum of 2)"
          example: testmail@gmail.com
        PhoneNumber:
          type: string
          description: >-
            Phone number

            Optional

            Max Length: 16
          example: '+99999999999'
    DayTimeRestrictions:
      title: DayTimeRestrictions
      type: object
      properties:
        Monday:
          type: boolean
          description: True if card could be used on a Monday, else false
        Tuesday:
          type: boolean
          description: True if card could be used on a Tuesday, else false.
        Wednesday:
          type: boolean
          description: True if card could be used on a Wednesday, else false.
        Thursday:
          type: boolean
          description: True if card could be used on a Thursday, else false
        Friday:
          type: boolean
          description: True if card could be used on a Friday, else false
        Saturday:
          type: boolean
          description: True if card could be used on a Saturday, else false
        Sunday:
          type: boolean
          description: True if card could be used on a Sunday, else false.
        TimeFrom:
          type: string
          description: "Card could be used from this time in a day.\r\nFormat: HH:mm (24-hour format)\r\nNote: \r\n1.    Clients to convert this to appropriate DateTime or TimeSpan type.\r\n“00:00” is the lowest time value and “23:59” is the highest time value."
        TimeTo:
          type: string
          description: "Card could be used up to this time in a day. \r\nFormat: HH:mm (24-hour format)\r\nNote: \r\n1.    Clients to convert this to appropriate DateTime or TimeSpan type. \r\n“00:00” is the lowest time value and “23:59” is the highest time value."
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerToken:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api-test.shell.com/v2/oauth/token
          scopes: {}
security:
- BearerToken: []
- BasicAuth: []
tags:
- name: Customer
  description: APIs for Retrieve and Update customer specific details
- name: Restriction
  description: APIs for Retrieve and Update restriction on cards
- name: Card
  description: APIs for Retrieve and update shell card details
externalDocs:
  description: Go to the Shell Developer Portal
  url: https://developer.shell.com
